[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":3629,"mtime":1610601578366,"results":"21","hashOfConfig":"19"},{"size":335,"mtime":1609873904958,"results":"22","hashOfConfig":"19"},{"size":2056,"mtime":1610601626592,"results":"23","hashOfConfig":"19"},{"size":7550,"mtime":1610607554269,"results":"24","hashOfConfig":"19"},{"size":3462,"mtime":1610597879008,"results":"25","hashOfConfig":"19"},{"size":1891,"mtime":1610601218849,"results":"26","hashOfConfig":"19"},{"size":2615,"mtime":1610598206904,"results":"27","hashOfConfig":"19"},{"size":2077,"mtime":1610599822370,"results":"28","hashOfConfig":"19"},{"size":2865,"mtime":1610603974353,"results":"29","hashOfConfig":"19"},{"size":3489,"mtime":1610608905727,"results":"30","hashOfConfig":"19"},{"size":2252,"mtime":1610601059960,"results":"31","hashOfConfig":"19"},{"size":1944,"mtime":1610608648025,"results":"32","hashOfConfig":"19"},{"size":4395,"mtime":1610609584403,"results":"33","hashOfConfig":"19"},{"size":1396,"mtime":1610600754620,"results":"34","hashOfConfig":"19"},{"size":5905,"mtime":1610601066146,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yua5fg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["80","81"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",["82"],"import React, {Component} from 'react';\n\nimport Auth from './Components/Auth/Auth';\nimport Home from './Components/Home/Home';\nimport API_URL from './env';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\ntype UserModel = {\n  isManager: boolean,\n  isAdmin: boolean\n};\n\ntype State = {\n  sessionToken: string,\n  user: UserModel\n  // user: {\n  //   isManager: boolean,\n  //   isAdmin: boolean\n  // } \n  // sessionToken: Storage\n}\n\nclass App extends Component<{}, State> {\n\n  constructor(props: any) {\n    super(props)\n  \n    this.state = {\n      sessionToken: '',\n      // user: {}\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    }\n\n    this.updateToken = this.updateToken.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.logOut = this.logOut.bind(this);\n    // this.isLoggedIn = this.isLoggedIn.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n  \n  async componentDidMount(){\n    try{\n      console.log('App mount() Start Token State:', this.state.sessionToken);\n      if(localStorage.getItem('token')){\n        // const user = \n        this.setState({\n          // Casting as string\n          sessionToken: (localStorage.getItem('token') as string)\n        });\n      }\n      // else if(localStorage.getItem('user')){\n      //   this.setState({\n      //     user: localStorage.getItem('user');\n      //   })\n      // }\n      // else{\n      //   this.setState({\n      //     sessionToken: ''\n      //   });\n      // }\n      console.log('App mount() End Token State:', this.state.sessionToken);\n      console.log('App mount() End User State:', this.state.user);\n    }\n    catch(err){\n      console.log('Error:', err.message);\n    }\n  }\n\n  // componentDidUpdate(){\n  //   console.log('App update() Start Token State:', this.state.sessionToken);\n    \n  //   if(!localStorage.getItem('token')){\n  //     this.setState({\n  //       sessionToken: ''\n  //     });\n  //   }\n\n  //   console.log('App update() End Token State:', this.state.sessionToken);\n  //   // else{\n  //   //   this.setState({\n  //   //     sessionToken: localStorage.getItem('token')\n  //   //   });\n  //   // }\n  // }\n\n  // isLoggedIn(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n\n  updateToken = (newToken: string): void => {\n    localStorage.setItem('token', newToken);\n    this.setState({\n      sessionToken: newToken\n    });\n  }\n\n  updateUser(user: UserModel): void{\n    this.setState({\n      user: user\n    });\n  }\n  \n  logOut(){\n    localStorage.clear();\n    this.setState({\n      sessionToken: '',\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {console.log('App render() Token State:', this.state.sessionToken)}\n        {console.log('App render() User State:', this.state.user)}\n        {/* {this.isLoggedIn()} */}\n        {/* {this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>} */}\n        {/* <Auth updateToken={this.updateToken} /> */}\n        {this.state.sessionToken === '' ? <Auth updateUser={this.updateUser} updateToken={this.updateToken} /> : <Home token={this.state.sessionToken} user={this.state.user} logout={this.logOut} />}\n        {/* <Home /> */}\n\n        {/* <MenuItemHome /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["83"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["84","85"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["86","87"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        // this.state.signupOpen == true ? this.setState({signupOpen: false}) : this.setState({signupOpen: true});\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n        // if(this.state.loginOpen == true){\r\n        //     this.setState({loginOpen: false});\r\n        // }\r\n        // else{\r\n        //     this.setState({loginOpen: true});\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["88","89","90","91","92","93"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["94"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number | null\r\n};\r\n\r\nexport class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: null\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n        // console.log('Form Submitted');\r\n        // console.log('First Name State:', this.state.firstName);\r\n        // console.log('Last Name State:', this.state.lastName);\r\n        // console.log('Password State:', this.state.password);\r\n        const url = `${API_URL}/user/create`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            // await fetch(url, options);\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                this.props.toggleSignup();\r\n            }\r\n            else{\r\n                const r = await res.json();\r\n                // console.log('Error', r);\r\n                // console.log('Error 2', r.Error);\r\n                console.log('Error:', r.Error.errors[0].message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    // async updateLastName(e){\r\n    //     console.log('First Name State:', this.state.firstName);\r\n    //     console.log('Last Name State Start:', this.state.lastName);\r\n    //     await this.setState({lastName: e.target.value});\r\n    //     console.log('Last Name State End:', this.state.lastName);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["95","96","97"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport MenuItemCreate from '../MenuItem/ItemCreate';\r\nimport OrderList from '../Order/OrderList';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void,\r\n    token: string,\r\n    user: {\r\n        isAdmin: boolean\r\n    }\r\n}\r\n\r\nexport default class Home extends Component<Props, {}> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Router>\r\n                    <Row>\r\n                        <Col sm='3'>\r\n                            <Navbar logout={this.props.logout} />\r\n                        </Col>\r\n                        <Col sm='9'>\r\n                            <Switch>\r\n                                {/* All Menu Items */}\r\n                                <Route path='/menuItem/all' exact>\r\n                                    <MenuItemList token={this.props.token} user={this.props.user} />\r\n                                </Route> \r\n                                {/* Add Menu Item */}\r\n                                <Route path='/menuItem/create' exact component={MenuItemCreate} />\r\n                                {/* All Orders */}\r\n                                <Route path='/order/all' exact>\r\n                                    <OrderList token={this.props.token} user={this.props.user} />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",["98","99","100","101"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col, Nav, NavItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void\r\n};\r\n\r\nexport default class Navbar extends Component<Props, {}> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Nav vertical>\r\n                <br />\r\n                <NavItem>\r\n                    <Button onClick={this.props.logout}>Logout</Button>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/clockIn'>\r\n                        <Button>Clock In</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/clockOut'>\r\n                        <Button>Clock Out</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    {/* Get All Hours By User Id */}\r\n                    <Link to='/hours/myHours'>\r\n                        <Button>View Your Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/all'>\r\n                        <Button>View All Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/create'>\r\n                        <Button>Start A New Order</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/all'>\r\n                        <Button>View All Orders</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                {/* <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Current Orders (Unpaid)</Button>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Previous Orders (Paid)</Button>\r\n                    </Col>\r\n                </Row> */}\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/menuItem/all'>\r\n                        <Button>View All Menu Items</Button>\r\n                    </Link>\r\n                </NavItem>\r\n            </Nav>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["102","103","104","105","106","107","108"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["109","110","111","112"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",["113","114","115","116"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.tsx",["117","118","119","120"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleEdit: () => void,\r\n    orderEditOn: boolean,\r\n    order: {}\r\n};\r\n\r\nexport default class OrderEdit extends Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderEditOn}>\r\n                {/* {console.log('Order Edit Prop:', order)} */}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button color='danger' onClick={this.props.toggleEdit}>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["121","122","123","124","125"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\n\r\ntype MenuItemModel = {\r\n    name: string,\r\n    price: number,\r\n    orderItem: {\r\n        quantity: number\r\n    }\r\n}\r\n\r\ntype OrderModel = {\r\n    id: number,\r\n    user: {\r\n        firstName: string,\r\n        lastName: string\r\n    },\r\n    customer: {\r\n        firstName: string,\r\n        lastName: string,\r\n        phoneNumber: number\r\n    },\r\n    orderTime: Date,\r\n    menuItems: [MenuItemModel],\r\n    totalPrice: number,\r\n    isPaid: boolean\r\n};\r\n\r\ntype Props = {\r\n    toggleInfo: () => void,\r\n    toggleEdit: () => void,\r\n    orderInfoOn: boolean,\r\n    order: OrderModel\r\n};\r\n\r\nexport default class OrderDetail extends Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    mapOrderDetail(order: OrderModel){\r\n        console.log('mapOrderDetail():', order);\r\n        order.menuItems.map((menuItem, i) => {\r\n\r\n            const totalItemPrice = menuItem.price * menuItem.orderItem.quantity;\r\n\r\n            <Row key={i}>\r\n                <Col>\r\n                    <h6>{menuItem.name}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{menuItem.orderItem.quantity}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{totalItemPrice}</h6>\r\n                </Col>\r\n            </Row>\r\n            console.log('.map() Key:', i);\r\n            console.log('.map() Name:', menuItem.name);\r\n            console.log('.map() Quantity:', menuItem.orderItem.quantity);\r\n            console.log('.map() Item Price:', totalItemPrice);\r\n\r\n        });\r\n    }\r\n\r\n    getOrderDate = (order: OrderModel) => (order.orderTime).toString().slice(0, 10);\r\n\r\n    getOrderTime = (order: OrderModel) => (order.orderTime).toString().slice(11);\r\n\r\n    formatPhoneNumber(order: OrderModel){\r\n        const number = (order.customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    editOrder(){\r\n        this.props.toggleEdit();\r\n        this.props.toggleInfo();\r\n    }\r\n\r\n    render() {\r\n        const {order} = this.props;\r\n        console.log('Order Prop:', order);\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderInfoOn}>\r\n                {console.log('Order Prop:', order)}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Detail</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleInfo} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Id: {order.id}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Date Order Taken: {this.getOrderDate(order)}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Taken At: {this.getOrderTime(order)}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Taken By: {order.user.firstName} {order.user.lastName}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Customer: {order.customer.firstName} {order.customer.lastName}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h6>Phone Number: {this.formatPhoneNumber(order)}</h6>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Detail:</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* {order.menuItems.forEach(menuItem => <h6>{menuItem.name}</h6>)} */}\r\n                        {this.mapOrderDetail(order)}\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Total: ${order.totalPrice}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Paid For? {order.isPaid}</h3>\r\n                                {console.log('Order Paid?', order.isPaid)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button>Pay For Order</Button>\r\n                    <Button color='primary' onClick={() => this.editOrder()}>Add To Order</Button>\r\n                    {/* <Button color='primary' onClick={this.props.toggleEdit}>Edit Order</Button> */}\r\n                </ModalFooter>\r\n                {/* {order.menuItems.map((menuItem, i) => {\r\n                    <h6>{menuItem.name}</h6>\r\n                })} */}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":3,"column":1,"nodeType":"136","messageId":"137","endLine":11,"endColumn":2},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"138","severity":1,"message":"139","line":62,"column":40,"nodeType":"140","messageId":"141","endLine":62,"endColumn":42},{"ruleId":"138","severity":1,"message":"139","line":63,"column":39,"nodeType":"140","messageId":"141","endLine":63,"endColumn":41},{"ruleId":"130","severity":1,"message":"142","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":28},{"ruleId":"130","severity":1,"message":"143","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":28},{"ruleId":"130","severity":1,"message":"144","line":2,"column":30,"nodeType":"132","messageId":"133","endLine":2,"endColumn":39},{"ruleId":"138","severity":1,"message":"145","line":93,"column":27,"nodeType":"140","messageId":"141","endLine":93,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":178,"column":74,"nodeType":"148","endLine":178,"endColumn":112},{"ruleId":"138","severity":1,"message":"139","line":181,"column":57,"nodeType":"140","messageId":"141","endLine":181,"endColumn":59},{"ruleId":"138","severity":1,"message":"145","line":55,"column":27,"nodeType":"140","messageId":"141","endLine":55,"endColumn":29},{"ruleId":"130","severity":1,"message":"149","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":15},{"ruleId":"130","severity":1,"message":"150","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"151","line":3,"column":49,"nodeType":"132","messageId":"133","endLine":3,"endColumn":53},{"ruleId":"130","severity":1,"message":"150","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"152","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":33},{"ruleId":"130","severity":1,"message":"153","line":2,"column":35,"nodeType":"132","messageId":"133","endLine":2,"endColumn":38},{"ruleId":"130","severity":1,"message":"154","line":2,"column":40,"nodeType":"132","messageId":"133","endLine":2,"endColumn":43},{"ruleId":"130","severity":1,"message":"155","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"156","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":39},{"ruleId":"130","severity":1,"message":"157","line":2,"column":41,"nodeType":"132","messageId":"133","endLine":2,"endColumn":47},{"ruleId":"130","severity":1,"message":"151","line":2,"column":49,"nodeType":"132","messageId":"133","endLine":2,"endColumn":53},{"ruleId":"130","severity":1,"message":"158","line":2,"column":55,"nodeType":"132","messageId":"133","endLine":2,"endColumn":68},{"ruleId":"130","severity":1,"message":"159","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":20},{"ruleId":"130","severity":1,"message":"160","line":11,"column":10,"nodeType":"132","messageId":"133","endLine":11,"endColumn":17},{"ruleId":"130","severity":1,"message":"155","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"156","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":39},{"ruleId":"130","severity":1,"message":"157","line":2,"column":41,"nodeType":"132","messageId":"133","endLine":2,"endColumn":47},{"ruleId":"130","severity":1,"message":"151","line":2,"column":49,"nodeType":"132","messageId":"133","endLine":2,"endColumn":53},{"ruleId":"130","severity":1,"message":"155","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"156","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":39},{"ruleId":"130","severity":1,"message":"157","line":2,"column":41,"nodeType":"132","messageId":"133","endLine":2,"endColumn":47},{"ruleId":"130","severity":1,"message":"151","line":2,"column":49,"nodeType":"132","messageId":"133","endLine":2,"endColumn":53},{"ruleId":"130","severity":1,"message":"150","line":2,"column":35,"nodeType":"132","messageId":"133","endLine":2,"endColumn":40},{"ruleId":"130","severity":1,"message":"161","line":2,"column":42,"nodeType":"132","messageId":"133","endLine":2,"endColumn":47},{"ruleId":"130","severity":1,"message":"162","line":2,"column":80,"nodeType":"132","messageId":"133","endLine":2,"endColumn":91},{"ruleId":"130","severity":1,"message":"163","line":25,"column":16,"nodeType":"132","messageId":"133","endLine":25,"endColumn":21},{"ruleId":"130","severity":1,"message":"143","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"144","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":33},{"ruleId":"130","severity":1,"message":"150","line":2,"column":35,"nodeType":"132","messageId":"133","endLine":2,"endColumn":40},{"ruleId":"130","severity":1,"message":"161","line":2,"column":42,"nodeType":"132","messageId":"133","endLine":2,"endColumn":47},{"ruleId":"164","severity":1,"message":"165","line":50,"column":43,"nodeType":"166","messageId":"167","endLine":50,"endColumn":45},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Label' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'MenuItemEdit' is defined but never used.","'Console' is defined but never used.","'Input' is defined but never used.","'ModalFooter' is defined but never used.","'order' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]