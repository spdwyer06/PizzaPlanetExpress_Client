[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx":"17","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx":"18","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\UserList.tsx":"19","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\User.tsx":"20","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\UserDetail.tsx":"21","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\UserEdit.tsx":"22","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetailItem.tsx":"23","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx":"24","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx":"25","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx":"26","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":2409,"mtime":1612288030903,"results":"31","hashOfConfig":"29"},{"size":326,"mtime":1612217084799,"results":"32","hashOfConfig":"29"},{"size":1729,"mtime":1612286270337,"results":"33","hashOfConfig":"29"},{"size":6195,"mtime":1612286305395,"results":"34","hashOfConfig":"29"},{"size":3604,"mtime":1612286359828,"results":"35","hashOfConfig":"29"},{"size":2926,"mtime":1612286529535,"results":"36","hashOfConfig":"29"},{"size":2047,"mtime":1612218076471,"results":"37","hashOfConfig":"29"},{"size":2881,"mtime":1612287425577,"results":"38","hashOfConfig":"29"},{"size":3429,"mtime":1612286603196,"results":"39","hashOfConfig":"29"},{"size":2921,"mtime":1612286751236,"results":"40","hashOfConfig":"29"},{"size":2718,"mtime":1612286815278,"results":"41","hashOfConfig":"29"},{"size":3792,"mtime":1612286709801,"results":"42","hashOfConfig":"29"},{"size":4439,"mtime":1612286622663,"results":"43","hashOfConfig":"29"},{"size":7213,"mtime":1612286904311,"results":"44","hashOfConfig":"29"},{"size":3019,"mtime":1612218076509,"results":"45","hashOfConfig":"29"},{"size":2111,"mtime":1612286575105,"results":"46","hashOfConfig":"29"},{"size":1696,"mtime":1612287575774,"results":"47","hashOfConfig":"29"},{"size":1547,"mtime":1612287454059,"results":"48","hashOfConfig":"29"},{"size":4864,"mtime":1612287470485,"results":"49","hashOfConfig":"29"},{"size":5761,"mtime":1612287525113,"results":"50","hashOfConfig":"29"},{"size":4364,"mtime":1612287395517,"results":"51","hashOfConfig":"29"},{"size":2889,"mtime":1612283820836,"results":"52","hashOfConfig":"29"},{"size":2269,"mtime":1612286385506,"results":"53","hashOfConfig":"29"},{"size":4188,"mtime":1612286411610,"results":"54","hashOfConfig":"29"},{"size":5681,"mtime":1612286434868,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"yua5fg",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"58"},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["129","130"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["131"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    case 'pizza-planet-express.herokuapp.com':\r\n        API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n        break;\r\n}\r\n\r\nexport default API_URL;",["132","133"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["134","135"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='authModal'>\r\n                <Button id='authBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["136","137","138","139"],"import React, { Component } from 'react';\r\nimport {Button, Modal, Label, Container, Row, Col} from 'reactstrap';\r\n\r\nimport Backspace from './backspace.png';\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void,\r\n    toggleLogin: () => void,\r\n    loginOpen: boolean \r\n};\r\n\r\ntype State = {\r\n    password: string\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            password: '',\r\n        }\r\n    }\r\n    \r\n    async setPass(e: React.MouseEvent<HTMLElement>){\r\n        const value = (e.target as HTMLButtonElement).value;\r\n\r\n        await this.setState({\r\n            password: this.state.password + value\r\n        }, () => console.log('Password State:', this.state.password));\r\n\r\n        let passBox = document.getElementById('password');\r\n        (passBox as HTMLInputElement).innerText += value;\r\n    } \r\n    \r\n    removeLastNum(){\r\n        let passBox = (document.getElementById('password') as HTMLInputElement);\r\n        let pass = passBox.innerText.slice(0, -1);\r\n        passBox.innerText = pass;\r\n        this.setState({\r\n            password: pass\r\n        }, () => console.log('New Password State:', this.state.password));\r\n    }\r\n\r\n    async login(){\r\n        const url = `${API_URL}/user/login`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                console.log('Went through', res.body);\r\n                const r = await res.json();\r\n                const user = r.user;\r\n                const token = r.token;\r\n                console.log('User:', user);\r\n                console.log('Token:', token);\r\n                await this.props.updateToken(token);\r\n                await this.props.updateUser(user);\r\n                this.props.toggleLogin();\r\n            }\r\n            else{\r\n                console.log('Login failed');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal contentClassName='loginModal' isOpen={true}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className='text-right'>\r\n                            <Button id='loginCancelBtn' onClick={this.props.toggleLogin} color='danger'>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password != '' ? <Label id='password'></Label> : null}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col xs='3'></Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e: React.MouseEvent<HTMLElement>) => this.setPass(e)} value='1'>1</Button> : <></>}\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='2'>2</Button> : <></>}\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='3'>3</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col xs='3'></Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='4'>4</Button> : <></>}\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='5'>5</Button> : <></>}\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='6'>6</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col xs='3'></Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='7'>7</Button> : <></>}\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='8'>8</Button> : <></>}\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='9'>9</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col xs='3'></Col>\r\n                        <Col xs='auto'>\r\n                            <Button id='loginNumBtn' onClick={() => this.removeLastNum()}><img id='backspace' src={Backspace} /></Button>\r\n                        </Col>\r\n                        <Col xs='auto'>\r\n                            {this.state.password.length == 4 ? <Button type='submit' id='loginBtn' onClick={() => this.login()}>Login</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["140","141"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number\r\n};\r\n\r\nexport default class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: 0\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.firstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.lastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.password)){\r\n            alert('Enter a valid password.');\r\n        }\r\n        else if(this.state.password.toString().length != 4){\r\n            alert('Enter a 4-digit password.');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/user/create`;\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        password: this.state.password\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json'\r\n                    })\r\n                };\r\n    \r\n                const res = await fetch(url, options);\r\n                if(res.status != 500){\r\n                    this.props.toggleSignup();\r\n                }\r\n                else{\r\n                    const r = await res.json();\r\n                    console.log('Error:', r.Error.errors[0].message);\r\n                    alert(`Error: ${r.Error.errors[0].message}`);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n                alert(`Error: ${err.message}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal contentClassName='signupModal' isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup id='signupForm'>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit' id='createUserBtn'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["142"],"import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport OrderList from '../Order/OrderList';\r\nimport OrderCreate from '../Order/OrderCreate';\r\nimport CustomerList from '../Customer/CustomerList';\r\nimport UserList from '../User/UserList';\r\n\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void,\r\n    token: string,\r\n    user: UserModel\r\n}\r\n\r\ntype State = {\r\n    orderId: number\r\n}\r\n\r\nexport default class Home extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderId: 0\r\n        }\r\n    }\r\n    \r\n    updateCustomer = (customer: CustomerModel) => console.log('Just here to fulfill the props');\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Router>\r\n                    <Row>\r\n                        <Col sm='3'>\r\n                            <Navbar logout={this.props.logout} user={this.props.user} />\r\n                        </Col>\r\n                        <Col sm='9'>\r\n                            <Switch>\r\n                                {/* All Employees */}\r\n                                <Route exact path='/users/all'>\r\n                                    <UserList token={this.props.token} />\r\n                                </Route>\r\n                                {/* All Customers */}\r\n                                <Route path='/customer/all' exact>\r\n                                    <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} />\r\n                                </Route>\r\n                                {/* Create Order */}\r\n                                <Route path='/order/create' exact>\r\n                                    <OrderCreate token={this.props.token} user={this.props.user} />\r\n                                    {/* <OrderCreate token={this.props.token} /> */}\r\n                                </Route>\r\n                                {/* All Orders */}\r\n                                <Route path='/order'>\r\n                                    <OrderList token={this.props.token} user={this.props.user} />\r\n                                </Route>\r\n                                {/* All Menu Items */}\r\n                                <Route path='/menuItem/all' exact>\r\n                                    <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />\r\n                                </Route> \r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",["143","144"],"import React, { Component } from 'react';\r\nimport {Button, Nav, NavItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    user: UserModel,\r\n    logout: () => void\r\n};\r\n\r\nexport default class Navbar extends Component<Props, {}> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Nav vertical>\r\n                <br />\r\n                <NavItem>\r\n                    <Button id='btn' onClick={this.props.logout}>Logout</Button>\r\n                </NavItem>\r\n                <br />\r\n                {localStorage.getItem('userRole') == 'admin' || localStorage.getItem('userRole') == 'manager' ? (\r\n                    <div>\r\n                        <NavItem>\r\n                            <Link to='/users/all'>\r\n                                <Button id='btn'>Employees</Button>\r\n                            </Link>\r\n                        </NavItem>\r\n                        <br />\r\n                    </div>\r\n                ) : null}\r\n                <NavItem>\r\n                    <Link to='/customer/all'>\r\n                        <Button id='btn'>Customers</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/create'>\r\n                        <Button id='btn'>New Order</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/all'>\r\n                        <Button id='btn'>Orders</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/menuItem/all'>\r\n                        <Button id='btn'>Menu Items</Button>\r\n                    </Link>\r\n                </NavItem>\r\n            </Nav>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["145","146"],"import React, { Component } from 'react';\r\nimport {Button, Container, Row} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemCreate from './ItemCreate';\r\n\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './menuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel\r\n    orderId: number,\r\n};\r\n\r\ntype State = {\r\n    menuItems: [],\r\n    createOn: boolean\r\n};\r\n\r\nexport default class MenuItemList extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            menuItems: [],\r\n            createOn: false\r\n        }\r\n\r\n        this.toggleCreate = this.toggleCreate.bind(this);\r\n        this.mapItems = this.mapItems.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('Menu Item List User:', this.props.user);\r\n        await this.mapItems();\r\n    }\r\n    \r\n    async mapItems(){\r\n        try{\r\n            const url = `${API_URL}/menuItem/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            const allItems = await fetch(url, options);\r\n            const itemsJson = await allItems.json();\r\n            const menuItems = itemsJson.Menu_Items;\r\n\r\n            if(menuItems){\r\n                await this.setState({menuItems: menuItems});\r\n            }\r\n            else{\r\n                await this.setState({menuItems: []});\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Map Error:', err.message);\r\n        }\r\n    }\r\n\r\n    toggleCreate(){\r\n        this.setState({createOn: !this.state.createOn});\r\n        !this.state.createOn ? this.mapItems() : <></>;\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    {localStorage.getItem('userRole') == 'admin' && window.location.href == 'http://localhost:3000/menuItem/all' ? <Button id='addNewItemBtn' onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>}\r\n                </Row>\r\n                <Row>\r\n                    {this.state.menuItems.length > 0 ? this.state.menuItems.map((menuItem, i) => <MenuItem user={this.props.user} token={this.props.token} item={menuItem} orderId={this.props.orderId} capName={this.capitalizeName} key={i} refreshMenu={this.mapItems} />) : <h3 className='noItems'>No menu items yet</h3>}\r\n                </Row>\r\n                {this.state.createOn ? <MenuItemCreate user={this.props.user} token={this.props.token} createOn={this.state.createOn} toggleCreate={this.toggleCreate} capitalizeName={this.capitalizeName} /> : <></>}\r\n            </Container>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",["147","148","149","150","151"],"import React, { Component } from 'react';\r\nimport {Button, Col} from 'reactstrap';\r\n\r\nimport OrderDetail from './OrderDetail';\r\nimport API_URL from '../../env';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './order.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    order: OrderModel,\r\n    user: UserModel,\r\n    token: string,\r\n    mapOrders: () => void,\r\n    setOrderId: (orderId: number) => void\r\n};\r\n\r\ntype State = {\r\n    orderInfoOn: boolean\r\n};\r\n\r\nexport default class Order extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderInfoOn: false\r\n        }\r\n\r\n        this.toggleOrderInfo = this.toggleOrderInfo.bind(this);\r\n    }\r\n    \r\n    toggleOrderInfo = () => this.setState({orderInfoOn: !this.state.orderInfoOn});\r\n\r\n    async deleteOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    isUserManagerOrAdmin(){\r\n        console.log('Checking User Role');\r\n        if (localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin'){\r\n            return true;\r\n        }\r\n         return false;\r\n    }\r\n\r\n    render() {\r\n        // Prop Destructuring\r\n        const {order} = this.props;\r\n        const customer = order.customer;\r\n        return (\r\n\r\n            <Col className='order' sm='3'>\r\n                {console.log('alfj', this.props.order.customer.firstName)}\r\n                <h3>Customer Name: {order.customer.lastName}, {order.customer.firstName}</h3>\r\n                <h3>Order Price: ${order.totalPrice.toFixed(2)}</h3>\r\n                <Button id='viewDetailBtn' onClick={this.toggleOrderInfo}>View</Button>\r\n                {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button id='deleteOrderBtn' color='danger' onClick={(e) => this.deleteOrder(e)}>Delete Order</Button> : null}\r\n                {this.state.orderInfoOn ? <OrderDetail token={this.props.token} user={this.props.user} mapOrders={this.props.mapOrders} toggleInfo={this.toggleOrderInfo}  orderInfoOn={this.state.orderInfoOn} order={order} setOrderId={this.props.setOrderId} /> : null}\r\n            </Col>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["152","153","154"],"import React, { Component } from 'react';\r\nimport {Button, Col} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItemEdit from './ItemEdit';\r\nimport AddToOrder from './AddToOrder';\r\n\r\nimport './menuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    user: {isAdmin: boolean},\r\n    token: string,\r\n    item: {\r\n        id: number,\r\n        name: string,\r\n        price: number\r\n    },\r\n    orderId: number,\r\n    capName: (name: string) => string,\r\n    refreshMenu: () => void,\r\n};\r\n\r\ntype State = {\r\n    editOn: boolean,\r\n    addToOrderOn: boolean,\r\n    specialInstructions: string,\r\n    quantity: number\r\n};\r\n\r\nexport default class MenuItem extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editOn: false,\r\n            addToOrderOn: false,\r\n            specialInstructions: '',\r\n            quantity: 0\r\n        }\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.toggleAddToOrder = this.toggleAddToOrder.bind(this);\r\n        this.updateSpecialInstructions = this.updateSpecialInstructions.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n        this.addItemToOrder = this.addItemToOrder.bind(this);\r\n    }\r\n\r\n    async toggleEdit(){\r\n        await this.setState({editOn: !this.state.editOn});\r\n    }\r\n\r\n    toggleAddToOrder = async() => await this.setState({addToOrderOn: !this.state.addToOrderOn});\r\n\r\n    updateSpecialInstructions = async(instructions: string) => await this.setState({specialInstructions: instructions});\r\n\r\n    async updateQuantity(quantity: number){\r\n        const currentQuantity = this.state.quantity;\r\n\r\n        await this.setState({\r\n            quantity: currentQuantity + quantity\r\n        });\r\n    }\r\n    \r\n    async addItemToOrder(){\r\n        try{\r\n            const url = `${API_URL}/order/food/${this.props.item.id}/add/${this.props.orderId}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    specialInstructions: this.state.specialInstructions,\r\n                    quantity: this.state.quantity\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            console.log('addItemToOrder() After Fetch');\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.props;\r\n\r\n        return (\r\n                <Col className='menuItem' sm='3'>\r\n                    <h3>{this.props.capName(item.name)}</h3>\r\n                    <h3>${this.props.item.price.toFixed(2)}</h3>\r\n                    {localStorage.getItem('userRole') == 'admin' && window.location.href == 'http://localhost:3000/menuItem/all' ? <Button id='editItemBtn' onClick={this.toggleEdit}>Edit Item</Button> : <></>}\r\n                    {this.props.orderId != 0 ? <Button id='editItemBtn' onClick={this.toggleAddToOrder}>Add To Order</Button> : null}\r\n                    {console.log('Menu Item Token:', this.props.token)}\r\n                    {this.state.editOn ? <MenuItemEdit refreshMenu={this.props.refreshMenu} token={this.props.token} toggleEdit={this.toggleEdit} item={this.props.item} editOn={this.state.editOn} /> : null}\r\n                    {this.state.addToOrderOn ? <AddToOrder addToOrderOn={this.state.addToOrderOn} toggleAddToOrder={this.toggleAddToOrder} updateSpecialInstructions={this.updateSpecialInstructions} updateQuantity={this.updateQuantity} addItemToOrder={this.addItemToOrder} quantity={this.state.quantity} /> : null}\r\n                </Col>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["155"],"import React, { Component } from 'react';\r\nimport { Button, Modal, Container, Row, Col } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\nimport OrderDetailItem from './OrderDetailItem';\r\n\r\nimport './order.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleInfo: () => void,\r\n    orderInfoOn: boolean,\r\n    order: OrderModel,\r\n    token: string,\r\n    user: UserModel,\r\n    mapOrders: () => void,\r\n    setOrderId: (orderId: number) => void\r\n};\r\n\r\ntype State = {\r\n    isPaid: string,\r\n    toggleEditItemOn: boolean\r\n};\r\n\r\nexport default class OrderDetail extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isPaid: '',\r\n            toggleEditItemOn: false\r\n        }\r\n\r\n        this.toggleEditItem = this.toggleEditItem.bind(this);\r\n    }\r\n    \r\n    mapOrderDetail(order: OrderModel){\r\n        console.log('mapOrderDetail():', order);\r\n        order.menuItems.map((menuItem, i) => {\r\n\r\n            const totalItemPrice = menuItem.price * menuItem.orderItem.quantity;\r\n\r\n            <Row key={i}>\r\n                <Col>\r\n                    <h6>{menuItem.name}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{menuItem.orderItem.quantity}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{totalItemPrice}</h6>\r\n                </Col>\r\n            </Row>\r\n            console.log('.map() Key:', i);\r\n            console.log('.map() Name:', menuItem.name);\r\n            console.log('.map() Quantity:', menuItem.orderItem.quantity);\r\n            console.log('.map() Item Price:', totalItemPrice);\r\n\r\n        });\r\n    }\r\n\r\n    getOrderDate = (order: OrderModel) => (order.orderTime).toString().slice(0, 10);\r\n\r\n    getOrderTime = (order: OrderModel) => (order.orderTime).toString().slice(11);\r\n\r\n    formatPhoneNumber(order: OrderModel){\r\n        const number = (order.customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    toggleEditItem = async() => await this.setState({toggleEditItemOn: !this.state.toggleEditItemOn});\r\n\r\n    updateOrderItems = (item: MenuItemModel) => console.log('Hazaah from OrderDetail');\r\n\r\n    addToOrder = async() => this.props.setOrderId(this.props.order.id);\r\n\r\n    async payOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    isPaid: true\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n            this.props.toggleInfo();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    setIsPaid = async(order: OrderModel) => order.isPaid ? await this.setState({isPaid: 'Yes'}) : await this.setState({isPaid: 'No'})\r\n    \r\n    componentDidMount(){\r\n        console.log('Order Details:', this.props.order.menuItems);\r\n\r\n        this.setIsPaid(this.props.order);\r\n    }\r\n\r\n    render() {\r\n        const {order} = this.props;\r\n        console.log('Order Prop:', order);\r\n\r\n        return(\r\n            <Modal contentClassName='orderDetailModal' isOpen={this.props.orderInfoOn}>\r\n                <Container>\r\n                    <Row className='rowSpacing'>\r\n                        <Col className='text-right'>\r\n                            <Button id='cancelBtn' onClick={this.props.toggleInfo} color='danger'>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Order Id: {order.id}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Date Order Taken: {this.getOrderDate(order)}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Order Taken At: {this.getOrderTime(order)}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Order Taken By: {order.user.firstName} {order.user.lastName}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row  className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Customer: {order.customer.firstName} {order.customer.lastName}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h6>Phone Number: {this.formatPhoneNumber(order)}</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Order Detail:</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6>Item Name</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    {order.menuItems.map((menuItem) => <OrderDetailItem token={this.props.token} menuItem={menuItem} orderId={order.id} orderPrice={order.totalPrice} mapOrders={this.props.mapOrders} />)}\r\n                    {this.state.toggleEditItemOn ? <Row><h3>quantity</h3></Row> : null}\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Order Total: ${order.totalPrice.toFixed(2)}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col>\r\n                            <h3>Paid For? {this.state.isPaid}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='rowSpacing'>\r\n                        <Col className='text-left'>\r\n                            <Button id='orderDetailBtn' onClick={(e) => this.payOrder(e)}>Pay For Order</Button>\r\n                        </Col>\r\n                        <Col className='text-right'>\r\n                            <Link to='/order/add'>\r\n                                <Button id='orderDetailBtn' color='primary' onClick={() => this.addToOrder()}>Add To Order</Button>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx",["156","157"],"import React, { Component } from 'react';\r\n\r\nimport API_URL from '../../env';\r\nimport CustomerList from '../Customer/CustomerList';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel,\r\n};\r\n\r\ntype State = {\r\n    customer: CustomerModel,\r\n    orderItems: MenuItemModel[],\r\n    orderId: number\r\n};\r\n\r\nexport default class OrderCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            customer: {\r\n                id: 0,\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: 0\r\n            },\r\n            orderItems: [],\r\n            orderId: 0\r\n        }\r\n\r\n        this.updateCustomer = this.updateCustomer.bind(this);\r\n    }\r\n    \r\n    async updateCustomer(newCustomer: CustomerModel){\r\n        await this.setState({\r\n            customer: {\r\n                id: newCustomer.id,\r\n                firstName: newCustomer.firstName,\r\n                lastName: newCustomer.lastName,\r\n                phoneNumber: newCustomer.phoneNumber\r\n            }\r\n        });\r\n    }\r\n\r\n    async createBaseOrder(){\r\n        console.log('Order Create Customer Id:', this.state.customer.id);\r\n        console.log('Order Create Customer Name:', this.state.customer.firstName);\r\n        console.log('createBaseOrder() Starting Order Id State:', this.state.orderId);\r\n        console.log('crateBaseOrder() User Props:', this.props.user);\r\n\r\n        try{\r\n            const url = `${API_URL}/order/create/${this.state.customer.id}`;\r\n            const options = {\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n    \r\n            const res = await fetch(url, options);\r\n            const resJson = await res.json();\r\n            const orderId = resJson.OrderId;\r\n            console.log('Base Order id:', orderId);\r\n            \r\n            await this.setState({\r\n                orderId: orderId\r\n            });\r\n            console.log('createBaseOrder() Ending Order Id State:', this.state.orderId);\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State){\r\n        prevState.customer.id != this.state.customer.id ? this.createBaseOrder() : console.log('componentDidUpdate()');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.customer.id == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\UserList.tsx",["158"],"import React, { Component } from 'react';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport User from './User';\r\n\r\nimport './user.css';\r\n\r\ntype Props = {\r\n    token: string\r\n};\r\n\r\ntype State = {\r\n    employees: [],\r\n};\r\n\r\nexport default class UserList extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            employees: []\r\n        }\r\n    }\r\n    \r\n    async getAllEmployees(){\r\n        try{\r\n            const url = `${API_URL}/user/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            const res = await fetch(url, options);\r\n            const resJson = await res.json();\r\n            const employees = resJson.Users;\r\n\r\n            await this.setState({\r\n                employees: employees\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllEmployees();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State){\r\n        if(prevState.employees != this.state.employees){\r\n            this.getAllEmployees();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    {this.state.employees.map(employee => <User token={this.props.token} employee={employee} getAllEmployees={this.getAllEmployees} />)}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\User.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\UserDetail.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\User\\UserEdit.tsx",["159"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, Container, Row, Col } from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport EmployeeModel from '../Models/EmployeeModel';\r\n\r\nimport './user.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    employee: EmployeeModel,\r\n    editEmployeeOn: boolean,\r\n    toggleEditEmployeeOn: () => void,\r\n    toggleEmployeeDetailOn: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedFirstName: string,\r\n    updatedLastName: string,\r\n    updatedPassword: number,\r\n    updatedIsManager: boolean,\r\n    updatedIsAdmin: boolean\r\n};\r\n\r\nexport default class UserEdit extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedFirstName: '',\r\n            updatedLastName: '',\r\n            updatedPassword: 0,\r\n            updatedIsManager: false,\r\n            updatedIsAdmin: false\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.updatedFirstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.updatedLastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.updatedPassword)){\r\n            alert('Enter a valid password.');\r\n        }\r\n        else if(this.state.updatedPassword.toString().length != 4){\r\n            alert('Enter a 4-digit password');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/user/${this.props.employee.id}`;\r\n                const options = {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                        firstName: this.state.updatedFirstName,\r\n                        lastName: this.state.updatedLastName,\r\n                        password: this.state.updatedPassword,\r\n                        isManager: this.state.updatedIsManager,\r\n                        isAdmin: this.state.updatedIsAdmin\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token\r\n                    })\r\n                };\r\n\r\n                await fetch(url, options);\r\n                this.props.toggleEditEmployeeOn();\r\n                this.props.toggleEmployeeDetailOn();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const employee = this.props.employee;\r\n\r\n        return (\r\n            <Modal contentClassName='userEditModal' isOpen={this.props.editEmployeeOn}>\r\n                <Container>\r\n                    <Row className='rowSpacing'>\r\n                        <Col className='text-right'>\r\n                            <Button id='cancelBtn' onClick={this.props.toggleEditEmployeeOn} color='danger'>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form onSubmit={(e) => this.submitForm(e)}>\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Employee Id: {employee.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='employeeFirstName'>Employee First Name:</Label>\r\n                            <Input name='employeeFirstName' className='rowSpacing' required placeholder={employee.firstName} onChange={e => this.setState({updatedFirstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='employeeLastName'>Employee Last Name:</Label>\r\n                            <Input name='employeeLastName' className='rowSpacing' required placeholder={employee.lastName} onChange={e => this.setState({updatedLastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='employeePassword'>Password:</Label>\r\n                            <Input name='employeePassword' className='rowSpacing' required placeholder={(employee.password).toString()} onChange={e => this.setState({updatedPassword: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Row className='rowSpacing'>\r\n                                <Col className='text-center' sm='6'>\r\n                                    <Label check>\r\n                                        <Input type='checkbox' name='isManager' defaultChecked={employee.isManager} onChange={e => this.setState({updatedIsManager: e.target.checked})} />{' Manager? '}\r\n                                    </Label>\r\n                                </Col>\r\n                                <Col className='text-center' sm='6'>\r\n                                    <Label check>\r\n                                        <Input type='checkbox' name='isAdmin' defaultChecked={employee.isAdmin} onChange={e => this.setState({updatedIsAdmin: e.target.checked})} />{' Admin? '}\r\n                                    </Label>\r\n                                </Col>\r\n                            </Row>\r\n                        </FormGroup>\r\n                        <Row className='rowSpacing'>\r\n                            <Col className='text-center'>\r\n                                <Button id='submitEditBtn' type='submit'>Done</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetailItem.tsx",["160"],"import React, { Component } from \"react\";\r\nimport { Button, Row, Col } from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItemModel from \"../Models/MenuItemModel\";\r\n\r\nimport './order.css';\r\n\r\n\r\n\r\ntype Props = {\r\n  token: string,\r\n  menuItem: MenuItemModel,\r\n  orderId: number,\r\n  orderPrice: number,\r\n  mapOrders: () => void\r\n};\r\n\r\ntype State = {\r\n  editItemOn: boolean,\r\n  quantity: number\r\n};\r\n\r\nexport default class OrderDetailItem extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editItemOn: false,\r\n      quantity: 0\r\n    };\r\n\r\n    this.toggleEditItemOn = this.toggleEditItemOn.bind(this);\r\n    this.updateQuantity = this.updateQuantity.bind(this);\r\n  }\r\n\r\n  toggleEditItemOn = async() => this.setState({ editItemOn: !this.state.editItemOn });\r\n\r\n  async updateQuantity(quantity: number){\r\n    const currentQuantity = this.state.quantity;\r\n\r\n    await this.setState({\r\n        quantity: currentQuantity + quantity\r\n    });\r\n  }\r\n\r\n  async updateOrderItem(e: React.MouseEvent){\r\n      const menuItemName = await this.props.menuItem.name;\r\n\r\n      try{\r\n        const url = `${API_URL}/order/food/${menuItemName}/update/${this.props.orderId}`;\r\n        const options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                quantity: this.state.quantity\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        };\r\n\r\n        await fetch(url, options);\r\n\r\n        this.toggleEditItemOn();\r\n        this.props.mapOrders();\r\n      }\r\n      catch(err){\r\n          console.log('Error:', err.message);\r\n      }\r\n  }\r\n\r\n  async componentDidMount(){\r\n      console.log('Props:', this.props.menuItem.id);\r\n\r\n      await this.setState({quantity: this.props.menuItem.orderItem.quantity});\r\n  }\r\n\r\n  async findNewTotal(){\r\n      const newQuantity = this.state.quantity;\r\n      const itemPrice = this.props.menuItem.price;\r\n      const originalPrice = this.props.orderPrice;\r\n      const addingPrice = newQuantity * itemPrice;\r\n      const newPrice = originalPrice + addingPrice;\r\n\r\n    return `New Order Total: ${newPrice.toFixed(2)}`;\r\n  }\r\n\r\n  render() {\r\n    const menuItem = this.props.menuItem;\r\n\r\n    return (\r\n        <div>\r\n            <Row key={menuItem.id}>\r\n                <Col>\r\n                    <pre>\r\n                        <h6 className='orderItem'>{menuItem.name} X {this.state.quantity}</h6>\r\n                    </pre>\r\n                </Col>\r\n                <Col>\r\n                    <pre>\r\n                        <h6 className='orderItem'>${(menuItem.price * this.state.quantity).toFixed(2)}</h6>\r\n                    </pre>\r\n                </Col>\r\n                <Col>\r\n                    <pre>\r\n                        {!this.state.editItemOn ? <Button id='editOrderItemBtn' onClick={() => this.toggleEditItemOn()}>Edit</Button> : <Button id='cancelBtn' color='danger' onClick={() => this.toggleEditItemOn()}>X</Button>}\r\n                    </pre>\r\n                </Col>\r\n            </Row>\r\n            {this.state.editItemOn ? (\r\n                <div>\r\n\r\n                <Row>\r\n                    <Col sm='2'>\r\n                        {this.state.quantity > 0 ? <Button id='editItemQuantityBtn' onClick={() => this.updateQuantity(-1)}>-</Button> : null}\r\n                    </Col>\r\n                    <Col sm='2' className='text-center'>\r\n                        <h1 className='orderItem'>{this.state.quantity}</h1>\r\n                    </Col>\r\n                    <Col sm='2'>\r\n                        <Button id='editItemQuantityBtn' onClick={() => this.updateQuantity(1)}>+</Button>\r\n                    </Col>\r\n                    <Col sm='6'>\r\n                        <Button id='submitItemQuantityBtn' onClick={(e) => this.updateOrderItem(e)}>Done</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {this.state.quantity != this.props.menuItem.orderItem.quantity ? <h6 className='orderItem'>New Order Total: ${(this.props.orderPrice + ((this.state.quantity - menuItem.orderItem.quantity) * menuItem.price)).toFixed(2)}</h6> :null}\r\n                </Row>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx",["161","162"],"import React, { Component } from 'react';\r\nimport {Button, Col} from 'reactstrap';\r\n\r\nimport CustomerEdit from './CustomerEdit';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\nimport './customer.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel,\r\n    capitalizeName: (name: string) => string,\r\n    updateCustomer: (customer: CustomerModel) => void,\r\n    mapCustomers: () => void \r\n};\r\n\r\ntype State = {\r\n    editCustomerOn: boolean\r\n};\r\n\r\nexport default class Customer extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editCustomerOn: false\r\n        }\r\n\r\n        this.toggleCustomerEdit = this.toggleCustomerEdit.bind(this);\r\n    }\r\n\r\n    toggleCustomerEdit = () => this.setState({editCustomerOn: !this.state.editCustomerOn});\r\n    \r\n    formatPhoneNumber(customer: CustomerModel){\r\n        const number = (customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {customer} = this.props;\r\n\r\n        return (\r\n            <Col className='customer' sm='3'>\r\n                <h3>{this.props.capitalizeName(customer.firstName)} {this.props.capitalizeName(customer.lastName)}</h3>\r\n                <h3>{this.formatPhoneNumber(customer)}</h3>\r\n                {/* If the url isn't on order create, don't show the button */}\r\n                {window.location.href == 'http://localhost:3000/order/create' ?  <Button id='custBtn' color='primary' onClick={() => this.props.updateCustomer(customer)}>Select Customer</Button> : null}\r\n                {window.location.href == 'http://localhost:3000/customer/all' ? <Button id='custBtn' onClick={() => this.toggleCustomerEdit()}>Edit Customer Info</Button> : null}\r\n                {this.state.editCustomerOn ? <CustomerEdit token={this.props.token} customer={this.props.customer} editCustomerOn={this.state.editCustomerOn} mapCustomers={this.props.mapCustomers} toggleCustomerEdit={this.toggleCustomerEdit} /> : null}\r\n            </Col>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx",["163"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './customer.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customerCreateOn: boolean,\r\n    toggleCustomerCreate: () => void,\r\n    mapCustomers: () => void\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    phoneNumber: number\r\n};\r\n\r\nexport default class CustomerCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: 0\r\n        }\r\n    }\r\n\r\n    async submitForm(e: React.FormEvent){\r\n        \r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.firstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.lastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.phoneNumber)){\r\n            alert('Enter a valid phone number.');\r\n        }\r\n        else if(this.state.phoneNumber.toString().length != 10){\r\n            alert('Enter a 10-digit phone number (include area code)');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/customer`;\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        firstName: this.capitalizeName(this.state.firstName),\r\n                        lastName: this.capitalizeName(this.state.lastName),\r\n                        phoneNumber: this.state.phoneNumber\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token\r\n                    })\r\n                };\r\n    \r\n                await fetch(url, options);\r\n                this.props.mapCustomers();\r\n                this.props.toggleCustomerCreate();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal contentClassName='custCreateModal' isOpen={this.props.customerCreateOn}>\r\n                <Container>\r\n                    <Row className='rowSpacing'>\r\n                        <Col className='text-right'>\r\n                            <Button id='cancelBtn' onClick={this.props.toggleCustomerCreate} color='danger'>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form onSubmit={(e) => this.submitForm(e)}>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' className='rowSpacing' required onChange={e => this.setState({firstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' className='rowSpacing' required onChange={e => this.setState({lastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' className='rowSpacing' required onChange={e => this.setState({phoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                        <Row className='rowSpacing'>\r\n                            <Col className='text-center'>\r\n                                <Button id='createCustBtn' type='submit'>Done</Button>\r\n                            </Col>\r\n                        </Row>\r\n                </Form>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx",["164","165","166"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\nimport './customer.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel, \r\n    editCustomerOn: boolean,\r\n    mapCustomers: () => void,\r\n    toggleCustomerEdit: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedFirstName: string,\r\n    updatedLastName: string,\r\n    updatedPhoneNumber: number\r\n};\r\n\r\nexport default class CustomerEdit extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedFirstName: '',\r\n            updatedLastName: '',\r\n            updatedPhoneNumber: 0\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.updatedFirstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.updatedLastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.updatedPhoneNumber)){\r\n            alert('Enter a valid phone number.');\r\n        }\r\n        else if(this.state.updatedPhoneNumber.toString().length != 10){\r\n            alert('Enter a 10-digit phone number (include area code)');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n                const options = {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                        firstName: this.capitalizeName(this.state.updatedFirstName),\r\n                        lastName: this.capitalizeName(this.state.updatedLastName),\r\n                        phoneNumber: this.state.updatedPhoneNumber\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token   \r\n                    })\r\n                };\r\n    \r\n                await fetch(url, options);\r\n                this.props.mapCustomers();\r\n                this.props.toggleCustomerEdit();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    async removeCustomer(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal contentClassName='customerEditModal' isOpen={this.props.editCustomerOn}>\r\n                <Container>\r\n                    <Row className='rowSpacing'>\r\n                        <Col className='text-right'>\r\n                            <Button id='cancelBtn' onClick={this.props.toggleCustomerEdit} color='danger'>X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form onSubmit={(e) => this.submitForm(e)}>\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Customer Id: {this.props.customer.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' className='rowSpacing' required placeholder={this.props.customer.firstName} onChange={e => this.setState({updatedFirstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' className='rowSpacing' required placeholder={this.props.customer.lastName} onChange={e => this.setState({updatedLastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' className='rowSpacing' required placeholder={(this.props.customer.phoneNumber).toString()} onChange={e => this.setState({updatedPhoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                        <Row className='rowSpacing'>\r\n                            <Col className='text-left'>\r\n                                <Button id='editCustBtn' type='submit'>Done</Button>\r\n                            </Col>\r\n                            <Col className='text-right'>\r\n                                {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button id='deleteCustBtn' color='danger' onClick={(e) => this.removeCustomer(e)}>Remove Customer From System</Button> : null}\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","messageId":"174","endLine":11,"endColumn":2},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"175","severity":1,"message":"176","line":55,"column":40,"nodeType":"177","messageId":"178","endLine":55,"endColumn":42},{"ruleId":"175","severity":1,"message":"176","line":56,"column":39,"nodeType":"177","messageId":"178","endLine":56,"endColumn":41},{"ruleId":"175","severity":1,"message":"179","line":71,"column":27,"nodeType":"177","messageId":"178","endLine":71,"endColumn":29},{"ruleId":"175","severity":1,"message":"179","line":103,"column":50,"nodeType":"177","messageId":"178","endLine":103,"endColumn":52},{"ruleId":"180","severity":1,"message":"181","line":145,"column":91,"nodeType":"182","endLine":145,"endColumn":129},{"ruleId":"175","severity":1,"message":"176","line":148,"column":57,"nodeType":"177","messageId":"178","endLine":148,"endColumn":59},{"ruleId":"175","severity":1,"message":"179","line":47,"column":55,"nodeType":"177","messageId":"178","endLine":47,"endColumn":57},{"ruleId":"175","severity":1,"message":"179","line":66,"column":31,"nodeType":"177","messageId":"178","endLine":66,"endColumn":33},{"ruleId":"183","severity":1,"message":"184","line":3,"column":49,"nodeType":"185","messageId":"186","endLine":3,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":35,"column":51,"nodeType":"177","messageId":"178","endLine":35,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":35,"column":98,"nodeType":"177","messageId":"178","endLine":35,"endColumn":100},{"ruleId":"175","severity":1,"message":"176","line":82,"column":55,"nodeType":"177","messageId":"178","endLine":82,"endColumn":57},{"ruleId":"175","severity":1,"message":"176","line":82,"column":90,"nodeType":"177","messageId":"178","endLine":82,"endColumn":92},{"ruleId":"175","severity":1,"message":"176","line":61,"column":46,"nodeType":"177","messageId":"178","endLine":61,"endColumn":48},{"ruleId":"175","severity":1,"message":"176","line":61,"column":95,"nodeType":"177","messageId":"178","endLine":61,"endColumn":97},{"ruleId":"183","severity":1,"message":"187","line":70,"column":15,"nodeType":"185","messageId":"186","endLine":70,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":78,"column":51,"nodeType":"177","messageId":"178","endLine":78,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":78,"column":100,"nodeType":"177","messageId":"178","endLine":78,"endColumn":102},{"ruleId":"175","severity":1,"message":"176","line":97,"column":55,"nodeType":"177","messageId":"178","endLine":97,"endColumn":57},{"ruleId":"175","severity":1,"message":"176","line":97,"column":90,"nodeType":"177","messageId":"178","endLine":97,"endColumn":92},{"ruleId":"175","severity":1,"message":"179","line":98,"column":41,"nodeType":"177","messageId":"178","endLine":98,"endColumn":43},{"ruleId":"188","severity":1,"message":"189","line":46,"column":43,"nodeType":"190","messageId":"191","endLine":46,"endColumn":45},{"ruleId":"175","severity":1,"message":"179","line":87,"column":31,"nodeType":"177","messageId":"178","endLine":87,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":93,"column":41,"nodeType":"177","messageId":"178","endLine":93,"endColumn":43},{"ruleId":"175","severity":1,"message":"179","line":55,"column":32,"nodeType":"177","messageId":"178","endLine":55,"endColumn":34},{"ruleId":"175","severity":1,"message":"179","line":54,"column":62,"nodeType":"177","messageId":"178","endLine":54,"endColumn":64},{"ruleId":"175","severity":1,"message":"179","line":129,"column":42,"nodeType":"177","messageId":"178","endLine":129,"endColumn":44},{"ruleId":"175","severity":1,"message":"176","line":56,"column":39,"nodeType":"177","messageId":"178","endLine":56,"endColumn":41},{"ruleId":"175","severity":1,"message":"176","line":57,"column":39,"nodeType":"177","messageId":"178","endLine":57,"endColumn":41},{"ruleId":"175","severity":1,"message":"179","line":50,"column":58,"nodeType":"177","messageId":"178","endLine":50,"endColumn":60},{"ruleId":"175","severity":1,"message":"179","line":52,"column":65,"nodeType":"177","messageId":"178","endLine":52,"endColumn":67},{"ruleId":"175","severity":1,"message":"176","line":133,"column":67,"nodeType":"177","messageId":"178","endLine":133,"endColumn":69},{"ruleId":"175","severity":1,"message":"176","line":133,"column":116,"nodeType":"177","messageId":"178","endLine":133,"endColumn":118},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'customer' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]