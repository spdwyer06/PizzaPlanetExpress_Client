[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.js":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.js":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.js":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.js":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.js":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.js":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.js":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.js":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.js":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.js":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":3340,"mtime":1610593227609,"results":"21","hashOfConfig":"19"},{"size":335,"mtime":1609873904958,"results":"22","hashOfConfig":"19"},{"size":1757,"mtime":1610593382207,"results":"23","hashOfConfig":"19"},{"size":1436,"mtime":1610593747253,"results":"24","hashOfConfig":"19"},{"size":1873,"mtime":1610422971071,"results":"25","hashOfConfig":"19"},{"size":1574,"mtime":1610422494732,"results":"26","hashOfConfig":"19"},{"size":2426,"mtime":1610586052153,"results":"27","hashOfConfig":"19"},{"size":2352,"mtime":1610593621318,"results":"28","hashOfConfig":"19"},{"size":1933,"mtime":1610591508254,"results":"29","hashOfConfig":"19"},{"size":1493,"mtime":1610434359025,"results":"30","hashOfConfig":"19"},{"size":5226,"mtime":1610435302111,"results":"31","hashOfConfig":"19"},{"size":1285,"mtime":1610435252761,"results":"32","hashOfConfig":"19"},{"size":1978,"mtime":1610594473354,"results":"33","hashOfConfig":"19"},{"size":7354,"mtime":1610596132822,"results":"34","hashOfConfig":"19"},{"size":3462,"mtime":1610597879008,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yua5fg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["83","84"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",["85"],"import React, {Component} from 'react';\n\nimport Auth from './Components/Auth/Auth';\nimport Home from './Components/Home/Home';\nimport API_URL from './env';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\ntype State = {\n  sessionToken: string | null,\n  user: object\n  // sessionToken: Storage\n}\n\nclass App extends Component<{}, State> {\n\n  constructor(props: any) {\n    super(props)\n  \n    this.state = {\n      sessionToken: '',\n      user: {}\n    }\n\n    this.updateToken = this.updateToken.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.logOut = this.logOut.bind(this);\n    // this.isLoggedIn = this.isLoggedIn.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n  \n  async componentDidMount(){\n    try{\n      console.log('App mount() Start Token State:', this.state.sessionToken);\n      if(localStorage.getItem('token')){\n        // const user = \n        this.setState({\n          sessionToken: localStorage.getItem('token')\n        });\n      }\n      // else if(localStorage.getItem('user')){\n      //   this.setState({\n      //     user: localStorage.getItem('user');\n      //   })\n      // }\n      // else{\n      //   this.setState({\n      //     sessionToken: ''\n      //   });\n      // }\n      console.log('App mount() End Token State:', this.state.sessionToken);\n      console.log('App mount() End User State:', this.state.user);\n    }\n    catch(err){\n      console.log('Error:', err.message);\n    }\n  }\n\n  // componentDidUpdate(){\n  //   console.log('App update() Start Token State:', this.state.sessionToken);\n    \n  //   if(!localStorage.getItem('token')){\n  //     this.setState({\n  //       sessionToken: ''\n  //     });\n  //   }\n\n  //   console.log('App update() End Token State:', this.state.sessionToken);\n  //   // else{\n  //   //   this.setState({\n  //   //     sessionToken: localStorage.getItem('token')\n  //   //   });\n  //   // }\n  // }\n\n  // isLoggedIn(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n\n  updateToken = (newToken: string): void => {\n    localStorage.setItem('token', newToken);\n    this.setState({\n      sessionToken: newToken\n    });\n  }\n\n  updateUser(user: object): void{\n    this.setState({\n      user: user\n    });\n  }\n  \n  logOut(){\n    localStorage.clear();\n    this.setState({\n      sessionToken: '',\n      user: {}\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {console.log('App render() Token State:', this.state.sessionToken)}\n        {console.log('App render() User State:', this.state.user)}\n        {/* {this.isLoggedIn()} */}\n        {/* {this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>} */}\n        {/* <Auth updateToken={this.updateToken} /> */}\n        {this.state.sessionToken === '' || null || undefined ? <Auth updateUser={this.updateUser} updateToken={this.updateToken} /> : <Home token={this.state.sessionToken} user={this.state.user} logout={this.logOut} />}\n        {/* <Home /> */}\n\n        {/* <MenuItemHome /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["86"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["87","88"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.js",["89","90","91"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport MenuItemCreate from '../MenuItem/ItemCreate';\r\nimport OrderList from '../Order/OrderList';\r\n\r\nimport './Home.css';\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Router>\r\n                    <Row>\r\n                        <Col sm='3'>\r\n                            <Navbar logout={this.props.logout} />\r\n                        </Col>\r\n                        <Col sm='9'>\r\n                            <Switch>\r\n                                {/* All Menu Items */}\r\n                                <Route path='/menuItem/all' exact>\r\n                                    <MenuItemList token={this.props.token} user={this.props.user} />\r\n                                </Route> \r\n                                {/* Add Menu Item */}\r\n                                <Route path='/menuItem/create' exact component={MenuItemCreate} />\r\n                                {/* All Orders */}\r\n                                <Route path='/order/all' exact>\r\n                                    <OrderList token={this.props.token} user={this.props.user} />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.js",["92","93","94","95"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport MenuItemEdit from './ItemEdit';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\n\r\nexport default class MenuItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editOn: false\r\n        }\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n    }\r\n\r\n    toggleEdit(){\r\n        this.setState({editOn: !this.state.editOn});\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {item} = this.props;\r\n\r\n        return (\r\n                <div>\r\n                    {/* <h3>{this.props.item.name}</h3> */}\r\n                    <h3>{this.props.capName(item.name)}</h3>\r\n                    <h3>${this.props.item.price}</h3>\r\n                    {this.props.user.isAdmin ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>}\r\n                    <Button>Add To Order</Button>\r\n                    {this.state.editOn ? <MenuItemEdit toggleEdit={this.toggleEdit} item={this.props.item} editOn={this.state.editOn} /> : null}\r\n                </div>\r\n\r\n            //     <Switch>\r\n            //         <Route path='/menuItem/itemId' exact>\r\n            //             <MenuItemEdit item={this.props.item} />\r\n            //         </Route>\r\n            //     </Switch>\r\n            // </Router>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.js",["96","97","98","99"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\n\r\nexport default class ItemEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    submitForm(){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.editOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Menu Item Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleEdit} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={() => this.submitForm()}>\r\n                    <FormGroup>\r\n                        <Label for='itemId'>Item Id: {this.props.item.id}</Label>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='itemName'>Menu Item Name:</Label>\r\n                        <Input name='itemName' id='itemNameInput' required placeholder={this.props.item.name} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='itemPrice'>Menu Item Price:</Label>\r\n                        <Input name='item{rice' id='itemPriceInput' required placeholder={this.props.item.price} />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Done</Button>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.js",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.js",["100","101","102","103"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col, Nav, NavItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Home.css';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <Nav vertical>\r\n                <br />\r\n                <NavItem>\r\n                    <Button onClick={this.props.logout}>Logout</Button>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/clockIn'>\r\n                        <Button>Clock In</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/clockOut'>\r\n                        <Button>Clock Out</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    {/* Get All Hours By User Id */}\r\n                    <Link to='/hours/myHours'>\r\n                        <Button>View Your Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/all'>\r\n                        <Button>View All Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/create'>\r\n                        <Button>Start A New Order</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/all'>\r\n                        <Button>View All Orders</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                {/* <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Current Orders (Unpaid)</Button>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Previous Orders (Paid)</Button>\r\n                    </Col>\r\n                </Row> */}\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/menuItem/all'>\r\n                        <Button>View All Menu Items</Button>\r\n                    </Link>\r\n                </NavItem>\r\n            </Nav>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.js",["104","105","106","107","108","109"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link, useRouteMatch} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemEdit from './ItemEdit';\r\nimport MenuItemCreate from './ItemCreate';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\nexport default class MenuItemList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            menuItems: [],\r\n            createOn: false\r\n        }\r\n\r\n        this.toggleCreate = this.toggleCreate.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mapItems();\r\n    }\r\n    \r\n    async mapItems(){\r\n        try{\r\n            const url = `${API_URL}/menuItem/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            const allItems = await fetch(url, options);\r\n            const itemsJson = await allItems.json();\r\n            const menuItems = itemsJson.Menu_Items;\r\n            // console.log('All Item 2:', menuItems);\r\n            // console.log('First Item Name 2:', menuItems[0].name);\r\n            // console.log('First Item Price 2:', menuItems[0].price);\r\n    \r\n            this.setState({menuItems: menuItems});\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    toggleCreate(){\r\n        this.setState({createOn: !this.state.createOn});\r\n    }\r\n\r\n    capitalizeName = (name) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>All Menu Items</h1>\r\n                {this.props.user.isAdmin ? <Button onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>}\r\n                {/* {console.log('State', this.state.menuItems)} */}\r\n                {this.state.menuItems.map((menuItem, i) => <MenuItem user={this.props.user} token={this.props.token} item={menuItem} capName={this.capitalizeName} key={i} />)}\r\n                {this.state.createOn ? <MenuItemCreate createOn={this.state.createOn} toggleCreate={this.toggleCreate} /> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.js",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.js",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.js",["110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\n\r\nexport default class OrderDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    mapOrderDetail(order){\r\n        console.log('mapOrderDetail():', order);\r\n        order.menuItems.map((menuItem, i) => {\r\n\r\n            const totalItemPrice = menuItem.price * menuItem.orderItem.quantity;\r\n\r\n            <Row key={i}>\r\n                <Col>\r\n                    <h6>{menuItem.name}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{menuItem.orderItem.quantity}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{totalItemPrice}</h6>\r\n                </Col>\r\n            </Row>\r\n            console.log('.map() Key:', i);\r\n            console.log('.map() Name:', menuItem.name);\r\n            console.log('.map() Quantity:', menuItem.orderItem.quantity);\r\n            console.log('.map() Item Price:', totalItemPrice);\r\n\r\n        });\r\n    }\r\n\r\n    getOrderDate = (order) => order.orderTime.slice(0, 10);\r\n\r\n    getOrderTime = (order) => order.orderTime.slice(11);\r\n\r\n    formatPhoneNumber(order){\r\n        const number = order.customer.phoneNumber.split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    editOrder(){\r\n        this.props.toggleEdit();\r\n        this.props.toggleInfo();\r\n    }\r\n\r\n    render() {\r\n        const {order} = this.props;\r\n        console.log('Order Prop:', order);\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderInfoOn}>\r\n                {console.log('Order Prop:', order)}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Detail</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleInfo} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Id: {order.id}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Date Order Taken: {this.getOrderDate(order)}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Taken At: {this.getOrderTime(order)}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Taken By: {order.user.firstName} {order.user.lastName}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Customer: {order.customer.firstName} {order.customer.lastName}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h6>Phone Number: {this.formatPhoneNumber(order)}</h6>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Detail:</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* {order.menuItems.forEach(menuItem => <h6>{menuItem.name}</h6>)} */}\r\n                        {this.mapOrderDetail(order)}\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Total: ${order.totalPrice}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Paid For? {order.isPaid}</h3>\r\n                                {console.log('Order Paid?', order.isPaid)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button>Pay For Order</Button>\r\n                    <Button color='primary' onClick={() => this.editOrder()}>Add To Order</Button>\r\n                    {/* <Button color='primary' onClick={this.props.toggleEdit}>Edit Order</Button> */}\r\n                </ModalFooter>\r\n                {/* {order.menuItems.map((menuItem, i) => {\r\n                    <h6>{menuItem.name}</h6>\r\n                })} */}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.js",["115","116","117","118"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nexport default class OrderEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderEditOn}>\r\n                {/* {console.log('Order Edit Prop:', order)} */}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button color='danger' onClick={this.props.toggleEdit}>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["119","120"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: object) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        // this.state.signupOpen == true ? this.setState({signupOpen: false}) : this.setState({signupOpen: true});\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n        // if(this.state.loginOpen == true){\r\n        //     this.setState({loginOpen: false});\r\n        // }\r\n        // else{\r\n        //     this.setState({loginOpen: true});\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["121","122","123","124","125","126"],"import React, { ChangeEvent, Component } from 'react';\r\nimport {Button, Modal, Form, FormGroup, Label, Container, Row, Col, ModalHeader} from 'reactstrap';\r\n\r\nimport Backspace from './backspace.png';\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: object) => void,\r\n    toggleLogin: () => void,\r\n    loginOpen: boolean \r\n};\r\n\r\ntype State = {\r\n    password: string\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            password: '',\r\n            //  loginOpen: false\r\n        }\r\n    }\r\n    \r\n    // <HTMLButtonElement>\r\n    \r\n    // setPass(e: Event){\r\n    // setPass(e: React.MouseEvent<HTMLButtonElement>){\r\n    setPass(e: React.MouseEvent<HTMLElement>){\r\n    // setPass(e: ChangeEvent<HTMLInputElement>){\r\n        const value = (e.target as HTMLButtonElement).value;\r\n        // console.log('Button Value:', e.target.value);\r\n        console.log('Button Value:', value);\r\n        let passBox = document.getElementById('password');\r\n        // passBox.innerText += e.target.value;\r\n        (passBox as HTMLInputElement).innerText += value;\r\n        this.setState({\r\n            // password: this.state.password + e.target.value\r\n            password: this.state.password + value\r\n        }, () => console.log('Password State:', this.state.password));\r\n        // if(this.state.password.length == 3){\r\n        //     const numBtns = Array.from(document.querySelectorAll('button'));\r\n        //     console.log('Num Btns:', numBtns.length);\r\n        //     const btns = numBtns.slice(0, -1);\r\n        //     btns.forEach(btn => {\r\n        //         btn.style.display = 'none';\r\n        //     });\r\n        // }\r\n    } \r\n    \r\n    removeLastNum(){\r\n        let passBox = (document.getElementById('password') as HTMLInputElement);\r\n        let pass = passBox.innerText.slice(0, -1);\r\n        passBox.innerText = pass;\r\n        this.setState({\r\n            password: pass\r\n        }, () => console.log('New Password State:', this.state.password));\r\n    }\r\n\r\n    async login(){\r\n        const url = `${API_URL}/user/login`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                console.log('Went through', res.body);\r\n                const r = await res.json();\r\n                const user = r.user;\r\n                const token = r.token;\r\n                console.log('User:', user);\r\n                console.log('Token:', token);\r\n                // const robj = await res.json();\r\n                // console.log('robj:', robj);\r\n                // console.log('Token:', robj.token);\r\n                await this.props.updateToken(token);\r\n                await this.props.updateUser(user);\r\n                this.props.toggleLogin();\r\n            }\r\n            else{\r\n                console.log('Login failed');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            // <Container className='loginContainer themed-container' fluid='sm'>\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h4 className='test'>Enter Your Password</h4>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleLogin} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Container className='loginContainer'>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='passInput' xs='auto'>\r\n                            <Label id='password'></Label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e: React.MouseEvent<HTMLElement>) => this.setPass(e)} value='1'>1</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='2'>2</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3 numBtn' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='3'>3</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='4'>4</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='5'>5</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='6'>6</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='7'>7</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='8'>8</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='9'>9</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            <Button onClick={() => this.removeLastNum()}><img id='backspace' src={Backspace} /></Button>\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length == 4 ? <Button type='submit' className='loginBtn' onClick={() => this.login()}>Login</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":3,"column":1,"nodeType":"138","messageId":"139","endLine":11,"endColumn":2},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"140","severity":1,"message":"141","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":15},{"ruleId":"140","severity":1,"message":"142","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"140","severity":1,"message":"143","line":3,"column":49,"nodeType":"134","messageId":"135","endLine":3,"endColumn":53},{"ruleId":"140","severity":1,"message":"144","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"140","severity":1,"message":"146","line":2,"column":41,"nodeType":"134","messageId":"135","endLine":2,"endColumn":47},{"ruleId":"140","severity":1,"message":"143","line":2,"column":49,"nodeType":"134","messageId":"135","endLine":2,"endColumn":53},{"ruleId":"140","severity":1,"message":"144","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"140","severity":1,"message":"146","line":2,"column":41,"nodeType":"134","messageId":"135","endLine":2,"endColumn":47},{"ruleId":"140","severity":1,"message":"143","line":2,"column":49,"nodeType":"134","messageId":"135","endLine":2,"endColumn":53},{"ruleId":"140","severity":1,"message":"142","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"140","severity":1,"message":"147","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":33},{"ruleId":"140","severity":1,"message":"148","line":2,"column":35,"nodeType":"134","messageId":"135","endLine":2,"endColumn":38},{"ruleId":"140","severity":1,"message":"149","line":2,"column":40,"nodeType":"134","messageId":"135","endLine":2,"endColumn":43},{"ruleId":"140","severity":1,"message":"144","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"140","severity":1,"message":"146","line":2,"column":41,"nodeType":"134","messageId":"135","endLine":2,"endColumn":47},{"ruleId":"140","severity":1,"message":"143","line":2,"column":49,"nodeType":"134","messageId":"135","endLine":2,"endColumn":53},{"ruleId":"140","severity":1,"message":"150","line":2,"column":55,"nodeType":"134","messageId":"135","endLine":2,"endColumn":68},{"ruleId":"140","severity":1,"message":"151","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":20},{"ruleId":"140","severity":1,"message":"152","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"140","severity":1,"message":"153","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":33},{"ruleId":"140","severity":1,"message":"142","line":2,"column":35,"nodeType":"134","messageId":"135","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"134","messageId":"135","endLine":2,"endColumn":47},{"ruleId":"155","severity":1,"message":"156","line":18,"column":43,"nodeType":"157","messageId":"158","endLine":18,"endColumn":45},{"ruleId":"140","severity":1,"message":"142","line":2,"column":35,"nodeType":"134","messageId":"135","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"154","line":2,"column":42,"nodeType":"134","messageId":"135","endLine":2,"endColumn":47},{"ruleId":"140","severity":1,"message":"159","line":2,"column":80,"nodeType":"134","messageId":"135","endLine":2,"endColumn":91},{"ruleId":"140","severity":1,"message":"160","line":17,"column":16,"nodeType":"134","messageId":"135","endLine":17,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":57,"column":40,"nodeType":"163","messageId":"164","endLine":57,"endColumn":42},{"ruleId":"161","severity":1,"message":"162","line":58,"column":39,"nodeType":"163","messageId":"164","endLine":58,"endColumn":41},{"ruleId":"132","severity":1,"message":"165","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":28},{"ruleId":"132","severity":1,"message":"152","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"132","severity":1,"message":"153","line":2,"column":30,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"161","severity":1,"message":"166","line":82,"column":27,"nodeType":"163","messageId":"164","endLine":82,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":167,"column":74,"nodeType":"169","endLine":167,"endColumn":112},{"ruleId":"161","severity":1,"message":"162","line":170,"column":57,"nodeType":"163","messageId":"164","endLine":170,"endColumn":59},{"ruleId":"161","severity":1,"message":"166","line":55,"column":27,"nodeType":"163","messageId":"164","endLine":55,"endColumn":29},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Button' is defined but never used.","'Label' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useRouteMatch' is defined but never used.","'MenuItemEdit' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ModalFooter' is defined but never used.","'order' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]