[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx":"17","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx":"18","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx":"19","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx":"20","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx":"21","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx":"22","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetailItem.tsx":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":2296,"mtime":1611630526992,"results":"27","hashOfConfig":"25"},{"size":335,"mtime":1609873904958,"results":"28","hashOfConfig":"25"},{"size":1762,"mtime":1611705916733,"results":"29","hashOfConfig":"25"},{"size":6588,"mtime":1611707723138,"results":"30","hashOfConfig":"25"},{"size":3644,"mtime":1611634523354,"results":"31","hashOfConfig":"25"},{"size":2704,"mtime":1611705315681,"results":"32","hashOfConfig":"25"},{"size":1611,"mtime":1611705703420,"results":"33","hashOfConfig":"25"},{"size":3100,"mtime":1611805597211,"results":"34","hashOfConfig":"25"},{"size":3352,"mtime":1611641592753,"results":"35","hashOfConfig":"25"},{"size":2845,"mtime":1611801924437,"results":"36","hashOfConfig":"25"},{"size":2614,"mtime":1611630098829,"results":"37","hashOfConfig":"25"},{"size":10758,"mtime":1611644340524,"results":"38","hashOfConfig":"25"},{"size":4470,"mtime":1611641325152,"results":"39","hashOfConfig":"25"},{"size":9154,"mtime":1611802820116,"results":"40","hashOfConfig":"25"},{"size":3007,"mtime":1611630134602,"results":"41","hashOfConfig":"25"},{"size":2475,"mtime":1611625568997,"results":"42","hashOfConfig":"25"},{"size":2384,"mtime":1611642402628,"results":"43","hashOfConfig":"25"},{"size":5626,"mtime":1611632868732,"results":"44","hashOfConfig":"25"},{"size":4284,"mtime":1611632452822,"results":"45","hashOfConfig":"25"},{"size":4401,"mtime":1611793282218,"results":"46","hashOfConfig":"25"},{"size":4353,"mtime":1611803423285,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"yua5fg",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"50"},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["111","112"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["113"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["114","115"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["116","117"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal id='authModal' isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["118","119","120"],"import React, { Component } from 'react';\r\nimport {Button, Modal, Label, Container, Row, Col, ModalHeader} from 'reactstrap';\r\n\r\nimport Backspace from './backspace.png';\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void,\r\n    toggleLogin: () => void,\r\n    loginOpen: boolean \r\n};\r\n\r\ntype State = {\r\n    password: string\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            password: '',\r\n        }\r\n    }\r\n    \r\n    setPass(e: React.MouseEvent<HTMLElement>){\r\n        const value = (e.target as HTMLButtonElement).value;\r\n        console.log('Button Value:', value);\r\n        let passBox = document.getElementById('password');\r\n        (passBox as HTMLInputElement).innerText += value;\r\n\r\n        this.setState({\r\n            password: this.state.password + value\r\n        }, () => console.log('Password State:', this.state.password));\r\n    } \r\n    \r\n    removeLastNum(){\r\n        let passBox = (document.getElementById('password') as HTMLInputElement);\r\n        let pass = passBox.innerText.slice(0, -1);\r\n        passBox.innerText = pass;\r\n        this.setState({\r\n            password: pass\r\n        }, () => console.log('New Password State:', this.state.password));\r\n    }\r\n\r\n    async login(){\r\n        const url = `${API_URL}/user/login`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                console.log('Went through', res.body);\r\n                const r = await res.json();\r\n                const user = r.user;\r\n                const token = r.token;\r\n                console.log('User:', user);\r\n                console.log('Token:', token);\r\n                await this.props.updateToken(token);\r\n                await this.props.updateUser(user);\r\n                this.props.toggleLogin();\r\n            }\r\n            else{\r\n                console.log('Login failed');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h4>Enter Your Password</h4>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleLogin} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Container className='loginContainer'>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='passInput' xs='auto'>\r\n                            <Label id='password'></Label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e: React.MouseEvent<HTMLElement>) => this.setPass(e)} value='1'>1</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='2'>2</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3 numBtn' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='3'>3</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='4'>4</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='5'>5</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='6'>6</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='7'>7</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='8'>8</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button id='loginNumBtn' onClick={(e) => this.setPass(e)} value='9'>9</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            <Button id='loginNumBtn' onClick={() => this.removeLastNum()}><img id='backspace' src={Backspace} /></Button>\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length == 4 ? <Button type='submit' className='loginBtn' onClick={() => this.login()}>Login</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["121","122"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number\r\n};\r\n\r\nexport default class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: 0\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.firstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.lastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.password)){\r\n            alert('Enter a valid password.');\r\n        }\r\n        else if(this.state.password.toString().length != 4){\r\n            alert('Enter a 4-digit password.');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/user/create`;\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        password: this.state.password\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json'\r\n                    })\r\n                };\r\n    \r\n                const res = await fetch(url, options);\r\n                if(res.status != 500){\r\n                    this.props.toggleSignup();\r\n                }\r\n                else{\r\n                    const r = await res.json();\r\n                    console.log('Error:', r.Error.errors[0].message);\r\n                    alert(`Error: ${r.Error.errors[0].message}`);\r\n                    // alert('Password already being used, select a different 4-digit password.');\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n                alert(`Error: ${err.message}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["123"],"import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport OrderList from '../Order/OrderList';\r\nimport OrderCreate from '../Order/OrderCreate';\r\nimport CustomerList from '../Customer/CustomerList';\r\n\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void,\r\n    token: string,\r\n    user: UserModel\r\n}\r\n\r\ntype State = {\r\n    orderId: number\r\n}\r\n\r\nexport default class Home extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderId: 0\r\n        }\r\n    }\r\n    \r\n    updateCustomer = (customer: CustomerModel) => console.log('Blarg:', window.location.href);\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className='wasd'>\r\n                <Router>\r\n                    <Row className='mainRow'>\r\n                        <Col sm='3'>\r\n                            <Navbar logout={this.props.logout} />\r\n                        </Col>\r\n                        <Col className='qwer' sm='9'>\r\n                            <Switch>\r\n                                {/* All Customers */}\r\n                                <Route path='/customer/all' exact>\r\n                                    <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} />\r\n                                </Route>\r\n                                {/* Create Order */}\r\n                                <Route path='/order/create' exact>\r\n                                    <OrderCreate token={this.props.token} user={this.props.user} />\r\n                                    {/* <OrderCreate token={this.props.token} /> */}\r\n                                </Route>\r\n                                {/* All Orders */}\r\n                                <Route path='/order'>\r\n                                    <OrderList token={this.props.token} user={this.props.user} />\r\n                                </Route>\r\n                                {/* All Menu Items */}\r\n                                <Route path='/menuItem/all' exact>\r\n                                    <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />\r\n                                </Route> \r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["124","125"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemCreate from './ItemCreate';\r\n\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel\r\n    orderId: number,\r\n};\r\n\r\ntype State = {\r\n    menuItems: [],\r\n    createOn: boolean,\r\n    count: number\r\n};\r\n\r\nexport default class MenuItemList extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            menuItems: [],\r\n            createOn: false,\r\n            count: 0\r\n        }\r\n\r\n        this.toggleCreate = this.toggleCreate.bind(this);\r\n        this.mapItems = this.mapItems.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('Menu Item List Count Start:', this.state.count);\r\n        console.log('Menu Item List User:', this.props.user);\r\n        await this.mapItems();\r\n        console.log('Menu Item List Count End:', this.state.count);\r\n    }\r\n    \r\n    async mapItems(){\r\n        try{\r\n            const url = `${API_URL}/menuItem/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            const allItems = await fetch(url, options);\r\n            const itemsJson = await allItems.json();\r\n            const menuItems = itemsJson.Menu_Items;\r\n\r\n            this.setState({\r\n                menuItems: menuItems,\r\n                count: menuItems.length\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('Map Error:', err.message);\r\n        }\r\n    }\r\n\r\n    toggleCreate(){\r\n        this.setState({createOn: !this.state.createOn});\r\n        !this.state.createOn ? this.mapItems() : <></>;\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>All Menu Items</h1>\r\n                {localStorage.getItem('userRole') == 'admin' && window.location.href == 'http://localhost:3000/menuItem/all' ? <Button onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>}\r\n                {this.state.menuItems.map((menuItem, i) => <MenuItem user={this.props.user} token={this.props.token} item={menuItem} orderId={this.props.orderId} capName={this.capitalizeName} key={i} refreshMenu={this.mapItems} />)}\r\n                {this.state.createOn ? <MenuItemCreate user={this.props.user} token={this.props.token} createOn={this.state.createOn} toggleCreate={this.toggleCreate} capitalizeName={this.capitalizeName} /> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",["126","127","128","129"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport OrderDetail from './OrderDetail';\r\nimport API_URL from '../../env';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    order: OrderModel,\r\n    user: UserModel,\r\n    token: string,\r\n    mapOrders: () => void,\r\n    setOrderId: (orderId: number) => void\r\n};\r\n\r\ntype State = {\r\n    orderInfoOn: boolean\r\n};\r\n\r\nexport default class Order extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderInfoOn: false,\r\n            // orderEditOn: false\r\n        }\r\n\r\n        this.toggleOrderInfo = this.toggleOrderInfo.bind(this);\r\n        // this.toggleOrderEdit = this.toggleOrderEdit.bind(this);\r\n    }\r\n    \r\n    toggleOrderInfo = () => this.setState({orderInfoOn: !this.state.orderInfoOn});\r\n\r\n    async deleteOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    isUserManagerOrAdmin(){\r\n        console.log('Checking User Role');\r\n        if (localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin'){\r\n            return true;\r\n        }\r\n         return false;\r\n    }\r\n\r\n    render() {\r\n        // Prop Destructuring\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h3>Customer Name: {order.customer.lastName}, {order.customer.firstName}</h3>\r\n                <h3>Order Price: ${order.totalPrice.toFixed(2)}</h3>\r\n                {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.deleteOrder(e)}>Delete Order</Button> : null}\r\n                <Button onClick={this.toggleOrderInfo}>View</Button>\r\n                {this.state.orderInfoOn ? <OrderDetail token={this.props.token} user={this.props.user} mapOrders={this.props.mapOrders} toggleInfo={this.toggleOrderInfo}  orderInfoOn={this.state.orderInfoOn} order={order} setOrderId={this.props.setOrderId} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["130","131","132","133","134","135","136","137","138"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItemEdit from './ItemEdit';\r\nimport AddToOrder from './AddToOrder';\r\nimport OrderList from '../Order/OrderList';\r\n\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    user: {isAdmin: boolean},\r\n    token: string,\r\n    item: {\r\n        id: number,\r\n        name: string,\r\n        price: number\r\n    },\r\n    orderId: number,\r\n    capName: (name: string) => string,\r\n    refreshMenu: () => void,\r\n    // updateOrderItems: (item: MenuItemModel) => void\r\n};\r\n\r\ntype State = {\r\n    editOn: boolean,\r\n    addToOrderOn: boolean,\r\n    specialInstructions: string,\r\n    quantity: number\r\n};\r\n\r\nexport default class MenuItem extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editOn: false,\r\n            addToOrderOn: false,\r\n            specialInstructions: '',\r\n            quantity: 0\r\n        }\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.toggleAddToOrder = this.toggleAddToOrder.bind(this);\r\n        this.updateSpecialInstructions = this.updateSpecialInstructions.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n        this.addItemToOrder = this.addItemToOrder.bind(this);\r\n    }\r\n\r\n    async toggleEdit(){\r\n        await this.setState({editOn: !this.state.editOn});\r\n        // !this.state.editOn ? this.props.refreshMenu() : <></>;\r\n    }\r\n\r\n    toggleAddToOrder = async() => await this.setState({addToOrderOn: !this.state.addToOrderOn});\r\n\r\n    updateSpecialInstructions = async(instructions: string) => await this.setState({specialInstructions: instructions});\r\n\r\n    // updateQuantity = async(quantity: number) => await this.setState({quantity: quantity});\r\n\r\n    async updateQuantity(quantity: number){\r\n        const currentQuantity = this.state.quantity;\r\n\r\n        await this.setState({\r\n            quantity: currentQuantity + quantity\r\n        });\r\n    }\r\n    \r\n    async addItemToOrder(){\r\n        try{\r\n            const url = `${API_URL}/order/food/${this.props.item.id}/add/${this.props.orderId}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    specialInstructions: this.state.specialInstructions,\r\n                    quantity: this.state.quantity\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            console.log('addItemToOrder() After Fetch');\r\n            // <OrderList />\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.props;\r\n\r\n        return (\r\n                <div>\r\n                    {/* <h3>{this.props.item.name}</h3> */}\r\n                    <h3>{this.props.capName(item.name)}</h3>\r\n                    {/* .toFixed(2) => specifiy 2 decimal places */}\r\n                    <h3>${this.props.item.price.toFixed(2)}</h3>\r\n                    {/* {this.props.user.isAdmin ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>} */}\r\n                    {localStorage.getItem('userRole') == 'admin' && window.location.href == 'http://localhost:3000/menuItem/all' ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>}\r\n                    {/* {this.props.orderId != 0 ? <Button onClick={() => this.props.updateOrderItems(item)}>Add To Order</Button> : null} */}\r\n                    {/* {this.props.orderId != 0 ? <Button onClick={() => this.addItemToOrder(item)}>Add To Order</Button> : null} */}\r\n                    {this.props.orderId != 0 ? <Button onClick={this.toggleAddToOrder}>Add To Order</Button> : null}\r\n                    {console.log('Menu Item Token:', this.props.token)}\r\n                    {this.state.editOn ? <MenuItemEdit refreshMenu={this.props.refreshMenu} token={this.props.token} toggleEdit={this.toggleEdit} item={this.props.item} editOn={this.state.editOn} /> : null}\r\n                    {this.state.addToOrderOn ? <AddToOrder addToOrderOn={this.state.addToOrderOn} toggleAddToOrder={this.toggleAddToOrder} updateSpecialInstructions={this.updateSpecialInstructions} updateQuantity={this.updateQuantity} addItemToOrder={this.addItemToOrder} quantity={this.state.quantity} /> : null}\r\n                </div>\r\n\r\n            //     <Switch>\r\n            //         <Route path='/menuItem/itemId' exact>\r\n            //             <MenuItemEdit item={this.props.item} />\r\n            //         </Route>\r\n            //     </Switch>\r\n            // </Router>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import {Button} from 'reactstrap';\r\n\r\n// import API_URL from '../../env';\r\n// import MenuItemEdit from './ItemEdit';\r\n// import AddToOrder from './AddToOrder';\r\n\r\n// import './MenuItem.css';\r\n\r\n\r\n\r\n// type Props = {\r\n//     user: {isAdmin: boolean},\r\n//     token: string,\r\n//     item: {\r\n//         id: number,\r\n//         name: string,\r\n//         price: number\r\n//     },\r\n//     orderId: number,\r\n//     capName: (name: string) => string,\r\n//     refreshMenu: () => void\r\n// };\r\n\r\n// type State = {\r\n//     editOn: boolean,\r\n//     addToOrderOn: boolean,\r\n//     specialInstructions: string,\r\n//     quantity: number\r\n// };\r\n\r\n// export default class MenuItem extends Component<Props, State> {\r\n\r\n//     constructor(props: Props) {\r\n//         super(props)\r\n    \r\n//         this.state = {\r\n//             editOn: false,\r\n//             addToOrderOn: false,\r\n//             specialInstructions: '',\r\n//             quantity: 0\r\n//         }\r\n\r\n//         this.toggleEdit = this.toggleEdit.bind(this);\r\n//         this.toggleAddToOrder = this.toggleAddToOrder.bind(this);\r\n//         this.updateSpecialInstructions = this.updateSpecialInstructions.bind(this);\r\n//         this.updateQuantity = this.updateQuantity.bind(this);\r\n//         this.addItemToOrder = this.addItemToOrder.bind(this);\r\n//     }\r\n\r\n//     // async toggleEdit(){\r\n//     //     await this.setState({editOn: !this.state.editOn});\r\n//     // }\r\n\r\n//     toggleEdit = async() => await this.setState({editOn: !this.state.editOn});\r\n\r\n//     toggleAddToOrder = async() => await this.setState({addToOrderOn: !this.state.addToOrderOn});\r\n\r\n//     updateSpecialInstructions = async(instructions: string) => await this.setState({specialInstructions: instructions});\r\n\r\n//     updateQuantity = async(qunatity: number) => await this.setState({quantity: qunatity});\r\n\r\n//     // async addItemToOrder(quantity: number){\r\n//     //     try{\r\n//     //         const url = `${API_URL}/order/food/${this.props.item.id}/add/${this.props.orderId}`;\r\n//     //         const options = {\r\n//     //             method: 'PUT',\r\n//     //             body: JSON.stringify({\r\n//     //                 specialInstructions: this.state.specialInstructions,\r\n//     //                 quantity: quantity\r\n//     //             }),\r\n//     //             headers: new Headers({\r\n//     //                 'Content-Type': 'application/json',\r\n//     //                 'Authorization': this.props.token   \r\n//     //             })\r\n//     //         };\r\n\r\n//     //         await fetch(url, options);\r\n//     //         console.log('addItemToOrder() After Fetch');\r\n//     //     }\r\n//     //     catch(err){\r\n//     //         console.log('Error:', err.message);\r\n//     //     }\r\n//     // }\r\n    \r\n//     async addItemToOrder(e: React.FormEvent){\r\n//         e.preventDefault();\r\n\r\n//         if(!Number(this.state.quantity)){\r\n//             alert('Enter a proper quantity amount.');\r\n//         }\r\n//         else{\r\n//             try{\r\n//                 const url = `${API_URL}/order/food/${this.props.item.id}/add/${this.props.orderId}`;\r\n//                 const options = {\r\n//                     method: 'PUT',\r\n//                     body: JSON.stringify({\r\n//                         specialInstructions: this.state.specialInstructions,\r\n//                         quantity: this.state.quantity\r\n//                     }),\r\n//                     headers: new Headers({\r\n//                         'Content-Type': 'application/json',\r\n//                         'Authorization': this.props.token   \r\n//                     })\r\n//                 };\r\n    \r\n//                 // await fetch(url, options);\r\n//                 const res = await fetch(url, options);\r\n//                 if(res.status != 200){\r\n//                     const r = await res.json();\r\n//                     console.log('R', r);\r\n//                     // alert(`Error: ${r.Error.errors[0].message}`);\r\n//                 }\r\n//                 console.log('addItemToOrder() After Fetch');\r\n//             }\r\n//             catch(err){\r\n//                 console.log('Error:', err.message);\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         const {item} = this.props;\r\n\r\n//         return (\r\n//             <div>\r\n//                 <h3>{this.props.capName(item.name)}</h3>\r\n//                 {/* .toFixed(2) => specifiy 2 decimal places */}\r\n//                 <h3>${this.props.item.price.toFixed(2)}</h3>\r\n//                 {localStorage.getItem('userRole') == 'admin' ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>}\r\n//                 {this.props.orderId != 0 ? <Button onClick={this.toggleAddToOrder}>Add To Order</Button> : null}\r\n//                 {console.log('Menu Item Token:', this.props.token)}\r\n//                 {this.state.editOn ? <MenuItemEdit refreshMenu={this.props.refreshMenu} token={this.props.token} toggleEdit={this.toggleEdit} item={this.props.item} editOn={this.state.editOn} /> : null}\r\n//                 {this.state.addToOrderOn ? <AddToOrder token={this.props.token} itemId={this.props.item.id} orderId={this.props.orderId} addToOrderOn={this.state.addToOrderOn} toggleAddToOrder={this.toggleAddToOrder} updateSpecialInstructions={this.updateSpecialInstructions} updateQuantity={this.updateQuantity} addItemToOrder={this.addItemToOrder} /> : null}\r\n//                 {/* {this.state.addToOrderOn ? <AddToOrder token={this.props.token} itemId={this.props.item.id} orderId={this.props.orderId} addToOrderOn={this.state.addToOrderOn} toggleAddToOrder={this.toggleAddToOrder} updateSpecialInstructions={this.updateSpecialInstructions} addItemToOrder={this.addItemToOrder} /> : null} */}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["139","140","141"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport API_URL from '../../env';\r\nimport OderDetailItem from './OrderDetailItem';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\nimport OrderDetailItems from './OrderDetailItem';\r\nimport OrderDetailItem from './OrderDetailItem';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleInfo: () => void,\r\n    orderInfoOn: boolean,\r\n    order: OrderModel,\r\n    token: string,\r\n    user: UserModel,\r\n    mapOrders: () => void,\r\n    setOrderId: (orderId: number) => void\r\n};\r\n\r\ntype State = {\r\n    isPaid: string,\r\n    toggleEditItemOn: boolean\r\n};\r\n\r\nexport default class OrderDetail extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isPaid: '',\r\n            toggleEditItemOn: false\r\n        }\r\n\r\n        this.toggleEditItem = this.toggleEditItem.bind(this);\r\n    }\r\n    \r\n    mapOrderDetail(order: OrderModel){\r\n        console.log('mapOrderDetail():', order);\r\n        order.menuItems.map((menuItem, i) => {\r\n\r\n            const totalItemPrice = menuItem.price * menuItem.orderItem.quantity;\r\n\r\n            <Row key={i}>\r\n                <Col>\r\n                    <h6>{menuItem.name}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{menuItem.orderItem.quantity}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{totalItemPrice}</h6>\r\n                </Col>\r\n            </Row>\r\n            console.log('.map() Key:', i);\r\n            console.log('.map() Name:', menuItem.name);\r\n            console.log('.map() Quantity:', menuItem.orderItem.quantity);\r\n            console.log('.map() Item Price:', totalItemPrice);\r\n\r\n        });\r\n    }\r\n\r\n    getOrderDate = (order: OrderModel) => (order.orderTime).toString().slice(0, 10);\r\n\r\n    getOrderTime = (order: OrderModel) => (order.orderTime).toString().slice(11);\r\n\r\n    formatPhoneNumber(order: OrderModel){\r\n        const number = (order.customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    toggleEditItem = async() => await this.setState({toggleEditItemOn: !this.state.toggleEditItemOn});\r\n\r\n    updateOrderItems = (item: MenuItemModel) => console.log('Hazaah from OrderDetail');\r\n\r\n    addToOrder = async() => this.props.setOrderId(this.props.order.id);\r\n\r\n    async payOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    // isPaid: !this.props.order.isPaid\r\n                    isPaid: true\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n            this.props.toggleInfo();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    setIsPaid = async(order: OrderModel) => order.isPaid ? await this.setState({isPaid: 'Yes'}) : await this.setState({isPaid: 'No'})\r\n    \r\n    componentDidMount(){\r\n        console.log('Order Details:', this.props.order.menuItems);\r\n\r\n        this.setIsPaid(this.props.order);\r\n    }\r\n\r\n    render() {\r\n        const {order} = this.props;\r\n        console.log('Order Prop:', order);\r\n\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.orderInfoOn}>\r\n                    {console.log('Order Prop:', order)}\r\n                    <ModalHeader>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col sm='10'>\r\n                                    <h3>Order Detail</h3>\r\n                                </Col>\r\n                                <Col sm='2'>\r\n                                    <Button onClick={this.props.toggleInfo} color='danger'>X</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Id: {order.id}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Date Order Taken: {this.getOrderDate(order)}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Taken At: {this.getOrderTime(order)}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Taken By: {order.user.firstName} {order.user.lastName}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Customer: {order.customer.firstName} {order.customer.lastName}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h6>Phone Number: {this.formatPhoneNumber(order)}</h6>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Detail:</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h6>Item Name</h6>\r\n                                </Col>\r\n                            </Row>\r\n                            {order.menuItems.map((menuItem) => <OrderDetailItem token={this.props.token} menuItem={menuItem} orderId={order.id} orderPrice={order.totalPrice} mapOrders={this.props.mapOrders} />)}\r\n\r\n                            {/* {order.menuItems.map((menuItem, i) => {\r\n                                return(\r\n                                    <Row key={i}>\r\n                                        <Row>\r\n                                        <Col>\r\n                                            <pre>\r\n                                                <h6>{menuItem.name}   X   {menuItem.orderItem.quantity}</h6>\r\n                                            </pre>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <pre>\r\n                                            <h6>{menuItem.price * menuItem.orderItem.quantity}</h6>\r\n                                        </pre>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <pre>\r\n                                                <Button onClick={() => this.toggleEditItem()}>Edit</Button>\r\n                                            </pre>\r\n                                        </Col>\r\n                                        </Row>\r\n                                    </Row>\r\n                                );\r\n                            })} */}\r\n                            {this.state.toggleEditItemOn ? <Row><h3>quantity</h3></Row> : null}\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Total: ${order.totalPrice.toFixed(2)}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Paid For? {this.state.isPaid}</h3>\r\n                                    {console.log('Order Paid?', order.isPaid)}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button onClick={(e) => this.payOrder(e)}>Pay For Order</Button>\r\n                        <Link to='/order/add'>\r\n                            <Button color='primary' onClick={() => this.addToOrder()}>Add To Order</Button>\r\n                        </Link>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx",["142","143"],"import React, { Component } from 'react';\r\n\r\nimport API_URL from '../../env';\r\nimport CustomerList from '../Customer/CustomerList';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel,\r\n};\r\n\r\ntype State = {\r\n    customer: CustomerModel,\r\n    orderItems: MenuItemModel[],\r\n    orderId: number\r\n};\r\n\r\nexport default class OrderCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            customer: {\r\n                id: 0,\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: 0\r\n            },\r\n            orderItems: [],\r\n            orderId: 0\r\n        }\r\n\r\n        this.updateCustomer = this.updateCustomer.bind(this);\r\n    }\r\n    \r\n    updateCustomer(newCustomer: CustomerModel){\r\n        this.setState({\r\n            customer: {\r\n                id: newCustomer.id,\r\n                firstName: newCustomer.firstName,\r\n                lastName: newCustomer.lastName,\r\n                phoneNumber: newCustomer.phoneNumber\r\n            }\r\n        });\r\n    }\r\n\r\n    async createBaseOrder(){\r\n        console.log('Order Create Customer Id:', this.state.customer.id);\r\n        console.log('Order Create Customer Name:', this.state.customer.firstName);\r\n        console.log('createBaseOrder() Starting Order Id State:', this.state.orderId);\r\n        console.log('crateBaseOrder() User Props:', this.props.user);\r\n\r\n        try{\r\n            const url = `${API_URL}/order/create/${this.state.customer.id}`;\r\n            const options = {\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n    \r\n            const res = await fetch(url, options);\r\n            const resJson = await res.json();\r\n            const orderId = resJson.OrderId;\r\n            console.log('Base Order id:', orderId);\r\n            \r\n            await this.setState({\r\n                orderId: orderId\r\n            });\r\n            console.log('createBaseOrder() Ending Order Id State:', this.state.orderId);\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State){\r\n        prevState.customer.id != this.state.customer.id ? this.createBaseOrder() : console.log('componentDidUpdate()');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.customer.id == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx",["144","145","146"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport CustomerEdit from './CustomerEdit';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel,\r\n    capitalizeName: (name: string) => string,\r\n    updateCustomer: (customer: CustomerModel) => void,\r\n    mapCustomers: () => void \r\n};\r\n\r\ntype State = {\r\n    editCustomerOn: boolean\r\n};\r\n\r\nexport default class Customer extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editCustomerOn: false\r\n        }\r\n\r\n        this.toggleCustomerEdit = this.toggleCustomerEdit.bind(this);\r\n    }\r\n\r\n    toggleCustomerEdit = () => this.setState({editCustomerOn: !this.state.editCustomerOn});\r\n    \r\n    formatPhoneNumber(customer: CustomerModel){\r\n        const number = (customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {customer} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h3>{this.props.capitalizeName(customer.firstName)} {this.props.capitalizeName(customer.lastName)}</h3>\r\n                <h3>{this.formatPhoneNumber(customer)}</h3>\r\n                {/* If the url isn't on order create, don't show the button */}\r\n                {window.location.href == 'http://localhost:3000/order/create' ?  <Button color='primary' onClick={() => this.props.updateCustomer(customer)}>Select Customer</Button> : null}\r\n                {window.location.href == 'http://localhost:3000/customer/all' ? <Button onClick={() => this.toggleCustomerEdit()}>Edit Customer Info</Button> : null}\r\n                {/* {window.location.href == `${API_URL}/customer/all` ? <Button onClick={() => this.toggleCustomerEdit()}>Edit Customer Info</Button> : null} */}\r\n                {this.state.editCustomerOn ? <CustomerEdit token={this.props.token} customer={this.props.customer} editCustomerOn={this.state.editCustomerOn} mapCustomers={this.props.mapCustomers} toggleCustomerEdit={this.toggleCustomerEdit} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx",["147","148","149"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel, \r\n    editCustomerOn: boolean,\r\n    mapCustomers: () => void,\r\n    toggleCustomerEdit: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedFirstName: string,\r\n    updatedLastName: string,\r\n    updatedPhoneNumber: number\r\n};\r\n\r\nexport default class CustomerEdit extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedFirstName: '',\r\n            updatedLastName: '',\r\n            updatedPhoneNumber: 0\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.updatedFirstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.updatedLastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.updatedPhoneNumber)){\r\n            alert('Enter a valid phone number.');\r\n        }\r\n        else if(this.state.updatedPhoneNumber.toString().length != 10){\r\n            alert('Enter a 10-digit phone number (include area code)');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n                const options = {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                        firstName: this.capitalizeName(this.state.updatedFirstName),\r\n                        lastName: this.capitalizeName(this.state.updatedLastName),\r\n                        phoneNumber: this.state.updatedPhoneNumber\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token   \r\n                    })\r\n                };\r\n    \r\n                await fetch(url, options);\r\n                this.props.mapCustomers();\r\n                this.props.toggleCustomerEdit();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    async removeCustomer(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.editCustomerOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Customer Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleCustomerEdit} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Customer Id: {this.props.customer.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' id='customerFirstNameInput' required placeholder={this.props.customer.firstName} onChange={e => this.setState({updatedFirstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' id='customerLastNameInput' required placeholder={this.props.customer.lastName} onChange={e => this.setState({updatedLastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' id='customerPhoneNumberInput' required placeholder={(this.props.customer.phoneNumber).toString()} onChange={e => this.setState({updatedPhoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type='submit'>Done</Button>\r\n                    {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.removeCustomer(e)}>Remove Customer From System</Button> : null}\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx",["150"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customerCreateOn: boolean,\r\n    toggleCustomerCreate: () => void,\r\n    mapCustomers: () => void\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    phoneNumber: number\r\n};\r\n\r\nexport default class CustomerCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: 0\r\n        }\r\n    }\r\n\r\n    async submitForm(e: React.FormEvent){\r\n        \r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.firstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.lastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.phoneNumber)){\r\n            alert('Enter a valid phone number.');\r\n        }\r\n        else if(this.state.phoneNumber.toString().length != 10){\r\n            alert('Enter a 10-digit phone number (include area code)');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/customer`;\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        firstName: this.capitalizeName(this.state.firstName),\r\n                        lastName: this.capitalizeName(this.state.lastName),\r\n                        phoneNumber: this.state.phoneNumber\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token\r\n                    })\r\n                };\r\n    \r\n                await fetch(url, options);\r\n                this.props.mapCustomers();\r\n                this.props.toggleCustomerCreate();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.customerCreateOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Customer Create</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleCustomerCreate} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' id='customerFirstNameInput' required onChange={e => this.setState({firstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' id='customerLastNameInput' required onChange={e => this.setState({lastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' id='customerPhoneNumberInput' required onChange={e => this.setState({phoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type='submit'>Done</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx",["151","152","153"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\n\r\ntype Props = {\r\n    addToOrderOn: boolean,\r\n    toggleAddToOrder: () => void,\r\n    updateSpecialInstructions: (instructions: string) => void,\r\n    updateQuantity: (quantity: number) => void,\r\n    addItemToOrder: () => void,\r\n    quantity: number\r\n};\r\n\r\nexport default class AddToOrder extends Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.addToOrderOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Add Item To Order</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button color='danger' onClick={this.props.toggleAddToOrder}>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={this.props.addItemToOrder}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col sm='3'>\r\n                                    {this.props.quantity > 0 ? <Button onClick={() => this.props.updateQuantity(-1)}>-</Button> : null}\r\n                                </Col>\r\n                                <Col sm='6' className='text-center'>\r\n                                    <h1>{this.props.quantity}</h1>\r\n                                </Col>\r\n                                <Col sm='3'>\r\n                                    <Button onClick={() => this.props.updateQuantity(1)}>+</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type='submit'>Done</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n                \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n// import API_URL from '../../env';\r\n\r\n\r\n\r\n// type Props = {\r\n//     token: string,\r\n//     itemId: number,\r\n//     orderId: number,\r\n//     addToOrderOn: boolean,\r\n//     toggleAddToOrder: () => void,\r\n//     updateSpecialInstructions: (instructions: string) => void,\r\n//     updateQuantity: (quantity: number) => void,\r\n//     addItemToOrder: (e: React.FormEvent) => void\r\n// };\r\n\r\n// export default class AddToOrder extends Component<Props> {\r\n\r\n//     constructor(props: Props) {\r\n//         super(props)\r\n    \r\n//         this.state = {\r\n//         }\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <Modal isOpen={this.props.addToOrderOn}>\r\n//                 <ModalHeader>\r\n//                     <Container>\r\n//                         <Row>\r\n//                             <Col sm='10'>\r\n//                                 <h3>Add Item To Order</h3>\r\n//                             </Col>\r\n//                             <Col sm='2'>\r\n//                                 <Button color='danger' onClick={this.props.toggleAddToOrder}>X</Button>\r\n//                             </Col>\r\n//                         </Row>\r\n//                     </Container>\r\n//                 </ModalHeader>\r\n//                 <Form onSubmit={(e) => this.props.addItemToOrder(e)}>\r\n//                     <ModalBody>\r\n//                         <FormGroup>\r\n//                             <Label for='quantity'>Quantity:</Label>\r\n//                             <Input name='quantity' id='quantityInput' required onChange={(e) => this.props.updateQuantity(parseInt(e.target.value))} />\r\n//                         </FormGroup>\r\n//                     </ModalBody>\r\n//                     <ModalFooter>\r\n//                         <Button type='submit'>Done</Button>\r\n//                     </ModalFooter>\r\n//                 </Form>\r\n//             </Modal>\r\n//         );\r\n//     }\r\n// }\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetailItem.tsx",["154","155","156","157","158","159"],"import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItemModel from \"../Models/MenuItemModel\";\r\n\r\n\r\n\r\ntype Props = {\r\n  token: string,\r\n  menuItem: MenuItemModel,\r\n  orderId: number,\r\n  orderPrice: number,\r\n  mapOrders: () => void\r\n};\r\n\r\ntype State = {\r\n  editItemOn: boolean,\r\n  quantity: number\r\n};\r\n\r\nexport default class OrderDetailItem extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editItemOn: false,\r\n      quantity: 0\r\n    };\r\n\r\n    this.toggleEditItemOn = this.toggleEditItemOn.bind(this);\r\n    this.updateQuantity = this.updateQuantity.bind(this);\r\n  }\r\n\r\n  toggleEditItemOn = async() => this.setState({ editItemOn: !this.state.editItemOn });\r\n\r\n  async updateQuantity(quantity: number){\r\n    const currentQuantity = this.state.quantity;\r\n\r\n    await this.setState({\r\n        quantity: currentQuantity + quantity\r\n    });\r\n  }\r\n\r\n  async updateOrderItem(e: React.MouseEvent){\r\n    //   e.preventDefault();\r\n    \r\n      const menuItemName = await this.props.menuItem.name;\r\n\r\n      try{\r\n        const url = `${API_URL}/order/food/${menuItemName}/update/${this.props.orderId}`;\r\n        const options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                quantity: this.state.quantity\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        };\r\n\r\n        await fetch(url, options);\r\n\r\n        this.toggleEditItemOn();\r\n        this.props.mapOrders();\r\n      }\r\n      catch(err){\r\n          console.log('Error:', err.message);\r\n      }\r\n  }\r\n\r\n//   componentDidMount = async() => await this.setState({quantity: this.props.menuItem.orderItem.quantity})\r\n\r\n  async componentDidMount(){\r\n      console.log('Props:', this.props.menuItem.id);\r\n\r\n      await this.setState({quantity: this.props.menuItem.orderItem.quantity});\r\n  }\r\n\r\n  async findNewTotal(){\r\n      const newQuantity = this.state.quantity;\r\n    //   const originalQuantity = this.props.menuItem.orderItem.quantity;\r\n      const itemPrice = this.props.menuItem.price;\r\n      const originalPrice = this.props.orderPrice;\r\n      const addingPrice = newQuantity * itemPrice;\r\n      const newPrice = originalPrice + addingPrice;\r\n\r\n    //   return newPrice.toFixed(2);\r\n\r\n    return `New Order Total: ${newPrice.toFixed(2)}`;\r\n  }\r\n\r\n  render() {\r\n    const menuItem = this.props.menuItem;\r\n\r\n    return (\r\n        <div>\r\n            <Row key={menuItem.id}>\r\n                <Col>\r\n                    <pre>\r\n                        <h6>{menuItem.name} X {this.state.quantity}</h6>\r\n                    </pre>\r\n                </Col>\r\n                <Col>\r\n                    <pre>\r\n                        <h6>${(menuItem.price * this.state.quantity).toFixed(2)}</h6>\r\n                    </pre>\r\n                </Col>\r\n                <Col>\r\n                    <pre>\r\n                        <Button onClick={() => this.toggleEditItemOn()}>Edit</Button>\r\n                    </pre>\r\n                </Col>\r\n            </Row>\r\n            {this.state.editItemOn ? (\r\n                <div>\r\n\r\n                <Row>\r\n                    <Col sm='2'>\r\n                        {this.state.quantity > 0 ? <Button onClick={() => this.updateQuantity(-1)}>-</Button> : null}\r\n                    </Col>\r\n                    <Col sm='2' className='text-center'>\r\n                        <h1>{this.state.quantity}</h1>\r\n                    </Col>\r\n                    <Col sm='2'>\r\n                        <Button onClick={() => this.updateQuantity(1)}>+</Button>\r\n                    </Col>\r\n                    <Col sm='6'>\r\n                        <Button onClick={(e) => this.updateOrderItem(e)}>Done</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {this.state.quantity != this.props.menuItem.orderItem.quantity ? <h6>New Order Total: ${(this.props.orderPrice + ((this.state.quantity - menuItem.orderItem.quantity) * menuItem.price)).toFixed(2)}</h6> :null}\r\n                </Row>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":3,"column":1,"nodeType":"166","messageId":"167","endLine":11,"endColumn":2},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"168","severity":1,"message":"169","line":55,"column":40,"nodeType":"170","messageId":"171","endLine":55,"endColumn":42},{"ruleId":"168","severity":1,"message":"169","line":56,"column":39,"nodeType":"170","messageId":"171","endLine":56,"endColumn":41},{"ruleId":"168","severity":1,"message":"172","line":71,"column":27,"nodeType":"170","messageId":"171","endLine":71,"endColumn":29},{"ruleId":"173","severity":1,"message":"174","line":152,"column":91,"nodeType":"175","endLine":152,"endColumn":129},{"ruleId":"168","severity":1,"message":"169","line":155,"column":57,"nodeType":"170","messageId":"171","endLine":155,"endColumn":59},{"ruleId":"168","severity":1,"message":"172","line":47,"column":55,"nodeType":"170","messageId":"171","endLine":47,"endColumn":57},{"ruleId":"168","severity":1,"message":"172","line":66,"column":31,"nodeType":"170","messageId":"171","endLine":66,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":3,"column":49,"nodeType":"178","messageId":"179","endLine":3,"endColumn":53},{"ruleId":"168","severity":1,"message":"169","line":84,"column":51,"nodeType":"170","messageId":"171","endLine":84,"endColumn":53},{"ruleId":"168","severity":1,"message":"169","line":84,"column":86,"nodeType":"170","messageId":"171","endLine":84,"endColumn":88},{"ruleId":"168","severity":1,"message":"169","line":61,"column":46,"nodeType":"170","messageId":"171","endLine":61,"endColumn":48},{"ruleId":"168","severity":1,"message":"169","line":61,"column":95,"nodeType":"170","messageId":"171","endLine":61,"endColumn":97},{"ruleId":"168","severity":1,"message":"169","line":75,"column":51,"nodeType":"170","messageId":"171","endLine":75,"endColumn":53},{"ruleId":"168","severity":1,"message":"169","line":75,"column":100,"nodeType":"170","messageId":"171","endLine":75,"endColumn":102},{"ruleId":"176","severity":1,"message":"180","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"181","line":2,"column":33,"nodeType":"178","messageId":"179","endLine":2,"endColumn":39},{"ruleId":"176","severity":1,"message":"182","line":2,"column":41,"nodeType":"178","messageId":"179","endLine":2,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":2,"column":49,"nodeType":"178","messageId":"179","endLine":2,"endColumn":53},{"ruleId":"176","severity":1,"message":"183","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":17},{"ruleId":"176","severity":1,"message":"184","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":109,"column":55,"nodeType":"170","messageId":"171","endLine":109,"endColumn":57},{"ruleId":"168","severity":1,"message":"169","line":109,"column":90,"nodeType":"170","messageId":"171","endLine":109,"endColumn":92},{"ruleId":"168","severity":1,"message":"172","line":112,"column":41,"nodeType":"170","messageId":"171","endLine":112,"endColumn":43},{"ruleId":"176","severity":1,"message":"185","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":22},{"ruleId":"176","severity":1,"message":"186","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":46,"column":43,"nodeType":"189","messageId":"190","endLine":46,"endColumn":45},{"ruleId":"168","severity":1,"message":"172","line":87,"column":31,"nodeType":"170","messageId":"171","endLine":87,"endColumn":33},{"ruleId":"168","severity":1,"message":"169","line":93,"column":41,"nodeType":"170","messageId":"171","endLine":93,"endColumn":43},{"ruleId":"176","severity":1,"message":"191","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":55,"column":39,"nodeType":"170","messageId":"171","endLine":55,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":56,"column":39,"nodeType":"170","messageId":"171","endLine":56,"endColumn":41},{"ruleId":"168","severity":1,"message":"172","line":50,"column":65,"nodeType":"170","messageId":"171","endLine":50,"endColumn":67},{"ruleId":"168","severity":1,"message":"169","line":136,"column":55,"nodeType":"170","messageId":"171","endLine":136,"endColumn":57},{"ruleId":"168","severity":1,"message":"169","line":136,"column":104,"nodeType":"170","messageId":"171","endLine":136,"endColumn":106},{"ruleId":"168","severity":1,"message":"172","line":49,"column":58,"nodeType":"170","messageId":"171","endLine":49,"endColumn":60},{"ruleId":"176","severity":1,"message":"192","line":2,"column":24,"nodeType":"178","messageId":"179","endLine":2,"endColumn":33},{"ruleId":"176","severity":1,"message":"193","line":2,"column":35,"nodeType":"178","messageId":"179","endLine":2,"endColumn":40},{"ruleId":"176","severity":1,"message":"194","line":2,"column":42,"nodeType":"178","messageId":"179","endLine":2,"endColumn":47},{"ruleId":"176","severity":1,"message":"195","line":2,"column":18,"nodeType":"178","messageId":"179","endLine":2,"endColumn":23},{"ruleId":"176","severity":1,"message":"196","line":2,"column":25,"nodeType":"178","messageId":"179","endLine":2,"endColumn":36},{"ruleId":"176","severity":1,"message":"197","line":2,"column":38,"nodeType":"178","messageId":"179","endLine":2,"endColumn":47},{"ruleId":"176","severity":1,"message":"198","line":2,"column":49,"nodeType":"178","messageId":"179","endLine":2,"endColumn":60},{"ruleId":"176","severity":1,"message":"199","line":2,"column":62,"nodeType":"178","messageId":"179","endLine":2,"endColumn":71},{"ruleId":"168","severity":1,"message":"172","line":134,"column":42,"nodeType":"170","messageId":"171","endLine":134,"endColumn":44},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'OrderList' is defined but never used.","'MenuItemModel' is defined but never used.","'OderDetailItem' is defined but never used.","'OrderDetailItems' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'API_URL' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]