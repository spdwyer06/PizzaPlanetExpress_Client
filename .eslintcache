[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"17","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx":"18","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx":"19","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx":"20","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx":"21","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx":"22","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx":"23","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetailItems.tsx":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":4472,"mtime":1610914709922,"results":"28","hashOfConfig":"26"},{"size":335,"mtime":1609873904958,"results":"29","hashOfConfig":"26"},{"size":2056,"mtime":1610601626592,"results":"30","hashOfConfig":"26"},{"size":7550,"mtime":1610607554269,"results":"31","hashOfConfig":"26"},{"size":3462,"mtime":1610597879008,"results":"32","hashOfConfig":"26"},{"size":3184,"mtime":1610909983954,"results":"33","hashOfConfig":"26"},{"size":2827,"mtime":1610909370177,"results":"34","hashOfConfig":"26"},{"size":3288,"mtime":1610655310701,"results":"35","hashOfConfig":"26"},{"size":2865,"mtime":1610603974353,"results":"36","hashOfConfig":"26"},{"size":3915,"mtime":1610914892115,"results":"37","hashOfConfig":"26"},{"size":4384,"mtime":1611072817371,"results":"38","hashOfConfig":"26"},{"size":4559,"mtime":1610914951474,"results":"39","hashOfConfig":"26"},{"size":4395,"mtime":1610916143408,"results":"40","hashOfConfig":"26"},{"size":1446,"mtime":1610909234776,"results":"41","hashOfConfig":"26"},{"size":13936,"mtime":1611074554293,"results":"42","hashOfConfig":"26"},{"size":4432,"mtime":1610809381229,"results":"43","hashOfConfig":"26"},{"size":2629,"mtime":1610910085979,"results":"44","hashOfConfig":"26"},{"size":2583,"mtime":1610910613646,"results":"45","hashOfConfig":"26"},{"size":4976,"mtime":1611073385302,"results":"46","hashOfConfig":"26"},{"size":3626,"mtime":1611073085407,"results":"47","hashOfConfig":"26"},{"size":2193,"mtime":1610812171302,"results":"48","hashOfConfig":"26"},{"size":2468,"mtime":1611074469614,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"yua5fg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["116","117"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",["118"],"import React, {Component} from 'react';\n\nimport Auth from './Components/Auth/Auth';\nimport Home from './Components/Home/Home';\nimport API_URL from './env';\n\n// import UserModel from './Components/Models/UserModel';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\ntype UserModel = {\n  isManager: boolean,\n  isAdmin: boolean\n};\n\ntype State = {\n  sessionToken: string,\n  user: UserModel\n  // user: {\n  //   isManager: boolean,\n  //   isAdmin: boolean\n  // } \n  // sessionToken: Storage\n}\n\nclass App extends Component<{}, State> {\n\n  constructor(props: any) {\n    super(props)\n  \n    this.state = {\n      sessionToken: '',\n      // user: {}\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    }\n\n    this.updateToken = this.updateToken.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.logOut = this.logOut.bind(this);\n    // this.isLoggedIn = this.isLoggedIn.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n  \n  async componentDidMount(){\n    try{\n      console.log('App mount() Start Token State:', this.state.sessionToken);\n      if(localStorage.getItem('token')){\n        // const user = \n        await this.setState({\n          // Casting as string\n          sessionToken: (localStorage.getItem('token') as string)\n        });\n      }\n      // else if(localStorage.getItem('user')){\n      //   this.setState({\n      //     user: localStorage.getItem('user');\n      //   })\n      // }\n      // else{\n      //   this.setState({\n      //     sessionToken: ''\n      //   });\n      // }\n      console.log('App mount() End Token State:', this.state.sessionToken);\n      console.log('App mount() End User State:', this.state.user);\n    }\n    catch(err){\n      console.log('Error:', err.message);\n    }\n  }\n\n  // componentDidUpdate(){\n  //   console.log('App update() Start Token State:', this.state.sessionToken);\n    \n  //   if(!localStorage.getItem('token')){\n  //     this.setState({\n  //       sessionToken: ''\n  //     });\n  //   }\n\n  //   console.log('App update() End Token State:', this.state.sessionToken);\n  //   // else{\n  //   //   this.setState({\n  //   //     sessionToken: localStorage.getItem('token')\n  //   //   });\n  //   // }\n  // }\n\n  // isLoggedIn(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n\n  // updateToken = (newToken: string): void => {\n  //   localStorage.setItem('token', newToken);\n  //   this.setState({\n  //     sessionToken: newToken\n  //   });\n  // }\n\n  updateToken = async(newToken: string) => {\n    localStorage.setItem('token', newToken);\n    await this.setState({\n      sessionToken: newToken\n    });\n  }\n\n  // updateUser(user: UserModel): void{\n  //   this.setState({\n  //     user: user\n  //   });\n  //   if(user.isAdmin){\n  //     localStorage.setItem('userRole', 'admin');\n  //   }\n  //   else if(user.isManager){\n  //     localStorage.setItem('userRole', 'manager');\n  //   }\n  //   else{\n  //     localStorage.setItem('userRole', 'employee');\n  //   }\n  // }\n\n  async updateUser(user: UserModel){\n    if(user.isAdmin){\n      localStorage.setItem('userRole', 'admin');\n    }\n    else if(user.isManager){\n      localStorage.setItem('userRole', 'manager');\n    }\n    else{\n      localStorage.setItem('userRole', 'employee');\n    }\n    \n    await this.setState({\n      user: user\n    });\n  }\n  \n  logOut(){\n    localStorage.clear();\n    this.setState({\n      sessionToken: '',\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {console.log('App render() Token State:', this.state.sessionToken)}\n        {console.log('App render() User State:', this.state.user)}\n        {/* {this.isLoggedIn()} */}\n        {/* {this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>} */}\n        {/* <Auth updateToken={this.updateToken} /> */}\n        {this.state.sessionToken === '' ? <Auth updateUser={this.updateUser} updateToken={this.updateToken} /> : <Home token={this.state.sessionToken} user={this.state.user} logout={this.logOut} />}\n        {/* <Home /> */}\n\n        {/* <MenuItemHome /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["119"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["120","121"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["122","123"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        // this.state.signupOpen == true ? this.setState({signupOpen: false}) : this.setState({signupOpen: true});\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n        // if(this.state.loginOpen == true){\r\n        //     this.setState({loginOpen: false});\r\n        // }\r\n        // else{\r\n        //     this.setState({loginOpen: true});\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["124","125","126","127","128","129"],"import React, { ChangeEvent, Component } from 'react';\r\nimport {Button, Modal, Form, FormGroup, Label, Container, Row, Col, ModalHeader} from 'reactstrap';\r\n\r\nimport Backspace from './backspace.png';\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void,\r\n    toggleLogin: () => void,\r\n    loginOpen: boolean \r\n};\r\n\r\ntype State = {\r\n    password: string\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            password: '',\r\n            //  loginOpen: false\r\n        }\r\n    }\r\n    \r\n    // <HTMLButtonElement>\r\n    \r\n    // setPass(e: Event){\r\n    // setPass(e: React.MouseEvent<HTMLButtonElement>){\r\n    setPass(e: React.MouseEvent<HTMLElement>){\r\n    // setPass(e: ChangeEvent<HTMLInputElement>){\r\n        const value = (e.target as HTMLButtonElement).value;\r\n        // console.log('Button Value:', e.target.value);\r\n        console.log('Button Value:', value);\r\n        let passBox = document.getElementById('password');\r\n        // passBox.innerText += e.target.value;\r\n        (passBox as HTMLInputElement).innerText += value;\r\n\r\n        // this.setState((state, value) => ({\r\n        //     password: state.password + value\r\n        // }))\r\n\r\n        this.setState({\r\n            // password: this.state.password + e.target.value\r\n            password: this.state.password + value\r\n        }, () => console.log('Password State:', this.state.password));\r\n\r\n        // if(this.state.password.length == 3){\r\n        //     const numBtns = Array.from(document.querySelectorAll('button'));\r\n        //     console.log('Num Btns:', numBtns.length);\r\n        //     const btns = numBtns.slice(0, -1);\r\n        //     btns.forEach(btn => {\r\n        //         btn.style.display = 'none';\r\n        //     });\r\n        // }\r\n    } \r\n    \r\n    removeLastNum(){\r\n        let passBox = (document.getElementById('password') as HTMLInputElement);\r\n        let pass = passBox.innerText.slice(0, -1);\r\n        passBox.innerText = pass;\r\n        this.setState({\r\n            password: pass\r\n        }, () => console.log('New Password State:', this.state.password));\r\n    }\r\n\r\n    async login(){\r\n        const url = `${API_URL}/user/login`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                console.log('Went through', res.body);\r\n                const r = await res.json();\r\n                const user = r.user;\r\n                const token = r.token;\r\n                console.log('User:', user);\r\n                console.log('Token:', token);\r\n                // const robj = await res.json();\r\n                // console.log('robj:', robj);\r\n                // console.log('Token:', robj.token);\r\n                await this.props.updateToken(token);\r\n                await this.props.updateUser(user);\r\n                this.props.toggleLogin();\r\n            }\r\n            else{\r\n                console.log('Login failed');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            // <Container className='loginContainer themed-container' fluid='sm'>\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h4 className='test'>Enter Your Password</h4>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleLogin} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Container className='loginContainer'>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='passInput' xs='auto'>\r\n                            <Label id='password'></Label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e: React.MouseEvent<HTMLElement>) => this.setPass(e)} value='1'>1</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='2'>2</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3 numBtn' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='3'>3</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='4'>4</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='5'>5</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='6'>6</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='7'>7</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='8'>8</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='9'>9</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            <Button onClick={() => this.removeLastNum()}><img id='backspace' src={Backspace} /></Button>\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length == 4 ? <Button type='submit' className='loginBtn' onClick={() => this.login()}>Login</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["130"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number | null\r\n};\r\n\r\nexport class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: null\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n        // console.log('Form Submitted');\r\n        // console.log('First Name State:', this.state.firstName);\r\n        // console.log('Last Name State:', this.state.lastName);\r\n        // console.log('Password State:', this.state.password);\r\n        const url = `${API_URL}/user/create`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            // await fetch(url, options);\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                this.props.toggleSignup();\r\n            }\r\n            else{\r\n                const r = await res.json();\r\n                // console.log('Error', r);\r\n                // console.log('Error 2', r.Error);\r\n                console.log('Error:', r.Error.errors[0].message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    // async updateLastName(e){\r\n    //     console.log('First Name State:', this.state.firstName);\r\n    //     console.log('Last Name State Start:', this.state.lastName);\r\n    //     await this.setState({lastName: e.target.value});\r\n    //     console.log('Last Name State End:', this.state.lastName);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["131","132","133"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport MenuItemCreate from '../MenuItem/ItemCreate';\r\nimport OrderList from '../Order/OrderList';\r\nimport OrderCreate from '../Order/OrderCreate';\r\nimport CustomerList from '../Customer/CustomerList';\r\n\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\n\r\nimport './Home.css';\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n};\r\n\r\ntype Props = {\r\n    logout: () => void,\r\n    token: string,\r\n    user: UserModel\r\n}\r\n\r\ntype State = {\r\n    testArr: MenuItemModel[],\r\n    orderId: number\r\n}\r\n\r\nexport default class Home extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            testArr: [],\r\n            orderId: 0\r\n        }\r\n    }\r\n    \r\n    updateOrderItems = (item: MenuItemModel) => console.log('MAY HAVE MESSED THIS UP');\r\n\r\n    updateCustomer = (customer: CustomerModel) => console.log('Blarg:', window.location.href);\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Router>\r\n                    <Row>\r\n                        <Col sm='3'>\r\n                            <Navbar logout={this.props.logout} />\r\n                        </Col>\r\n                        <Col sm='9'>\r\n                            <Switch>\r\n                                {/* All Customers */}\r\n                                <Route path='/customer/all' exact>\r\n                                    <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} />\r\n                                </Route>\r\n                                {/* Create Order */}\r\n                                <Route path='/order/create' exact>\r\n                                    <OrderCreate token={this.props.token} user={this.props.user} />\r\n                                    {/* <OrderCreate token={this.props.token} /> */}\r\n                                </Route>\r\n                                {/* All Orders */}\r\n                                <Route path='/order/all' exact>\r\n                                    <OrderList token={this.props.token} user={this.props.user} />\r\n                                </Route>\r\n                                {/* All Menu Items */}\r\n                                <Route path='/menuItem/all' exact>\r\n                                    <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} orderItems={this.state.testArr} updateOrderItems={this.updateOrderItems} />\r\n                                </Route> \r\n                                {/* Add Menu Item */}\r\n                                <Route path='/menuItem/create' exact component={MenuItemCreate} />\r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",["134","135","136","137"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col, Nav, NavItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void\r\n};\r\n\r\nexport default class Navbar extends Component<Props, {}> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Nav vertical>\r\n                <br />\r\n                <NavItem>\r\n                    <Button onClick={this.props.logout}>Logout</Button>\r\n                </NavItem>\r\n                <br />\r\n                {/* <NavItem>\r\n                    <Link to='/hours/clockIn'>\r\n                        <Button>Clock In</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/clockOut'>\r\n                        <Button>Clock Out</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    Get All Hours By User Id\r\n                    <Link to='/hours/myHours'>\r\n                        <Button>View Your Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/all'>\r\n                        <Button>View All Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br /> */}\r\n                <NavItem>\r\n                    <Link to='/customer/all'>\r\n                        <Button>View Customers</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/create'>\r\n                        <Button>Start A New Order</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/all'>\r\n                        <Button>View All Orders</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                {/* <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Current Orders (Unpaid)</Button>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Previous Orders (Paid)</Button>\r\n                    </Col>\r\n                </Row> */}\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/menuItem/all'>\r\n                        <Button>View All Menu Items</Button>\r\n                    </Link>\r\n                </NavItem>\r\n            </Nav>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["138","139","140","141","142","143","144"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link, useRouteMatch} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemEdit from './ItemEdit';\r\nimport MenuItemCreate from './ItemCreate';\r\n\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\n\r\nimport './MenuItem.css';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel\r\n    // user: {\r\n    //     isAdmin: boolean\r\n    // },\r\n    orderId: number,\r\n    orderItems: MenuItemModel[],\r\n    updateOrderItems: (item: MenuItemModel) => void\r\n};\r\n\r\ntype State = {\r\n    menuItems: [],\r\n    createOn: boolean,\r\n    count: number\r\n};\r\n\r\nexport default class MenuItemList extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            menuItems: [],\r\n            createOn: false,\r\n            count: 0\r\n        }\r\n\r\n        this.toggleCreate = this.toggleCreate.bind(this);\r\n        this.mapItems = this.mapItems.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('Menu Item List Count Start:', this.state.count);\r\n        console.log('Menu Item List User:', this.props.user);\r\n        await this.mapItems();\r\n        console.log('Menu Item List Count End:', this.state.count);\r\n    }\r\n\r\n    // componentDidUpdate(prevProps: Props, prevState: State){\r\n    //     console.log('Running MenuItemList .componentDidUpdate()');\r\n    //     if(prevState.menuItems != this.state.menuItems){\r\n    //         console.log('Stuff has changed');\r\n    //         // this.mapItems();\r\n    //     }\r\n    //     // this.mapItems();\r\n    // }\r\n    \r\n    async mapItems(){\r\n        try{\r\n            const url = `${API_URL}/menuItem/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            const allItems = await fetch(url, options);\r\n            const itemsJson = await allItems.json();\r\n            const menuItems = itemsJson.Menu_Items;\r\n            // console.log('All Item 2:', menuItems);\r\n            // console.log('First Item Name 2:', menuItems[0].name);\r\n            // console.log('First Item Price 2:', menuItems[0].price);\r\n    \r\n            // this.setState({menuItems: menuItems});\r\n\r\n            this.setState({\r\n                menuItems: menuItems,\r\n                count: menuItems.length\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('Map Error:', err.message);\r\n        }\r\n    }\r\n\r\n    toggleCreate(){\r\n        this.setState({createOn: !this.state.createOn});\r\n        !this.state.createOn ? this.mapItems() : <></>;\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>All Menu Items</h1>\r\n                {/* {this.props.user.isAdmin ? <Button onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>} */}\r\n                {localStorage.getItem('userRole') == 'admin' ? <Button onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>}\r\n                {/* {console.log('State', this.state.menuItems)} */}\r\n                {this.state.menuItems.map((menuItem, i) => <MenuItem user={this.props.user} token={this.props.token} item={menuItem} orderId={this.props.orderId} updateOrderItems={this.props.updateOrderItems} capName={this.capitalizeName} key={i} refreshMenu={this.mapItems} />)}\r\n                {this.state.createOn ? <MenuItemCreate user={this.props.user} token={this.props.token} createOn={this.state.createOn} toggleCreate={this.toggleCreate} /> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",["145","146","147","148","149"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport OrderDetail from './OrderDetail';\r\nimport OrderEdit from './OrderEdit';\r\nimport API_URL from '../../env';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\n// type UserModel = {\r\n//     isManager: boolean,\r\n//     isAdmin: boolean\r\n// };\r\n\r\n// type MenuItemModel = {\r\n//     name: string,\r\n//     price: number,\r\n//     orderItem: {\r\n//         quantity: number\r\n//     }\r\n// }\r\n\r\n// type OrderModel = {\r\n//     id: number,\r\n//     user: {\r\n//         firstName: string,\r\n//         lastName: string\r\n//     },\r\n//     customer: {\r\n//         firstName: string,\r\n//         lastName: string,\r\n//         phoneNumber: number\r\n//     },\r\n//     orderTime: Date,\r\n//     menuItems: [MenuItemModel],\r\n//     totalPrice: number,\r\n//     isPaid: boolean\r\n// }    \r\n\r\ntype Props = {\r\n    // order: {\r\n    //     customer: {\r\n    //         firstName: string,\r\n    //         lastName: string\r\n    //     },\r\n    //     totalPrice: number\r\n    // }\r\n    order: OrderModel,\r\n    user: UserModel,\r\n    token: string,\r\n    mapOrders: () => void\r\n};\r\n\r\ntype State = {\r\n    orderInfoOn: boolean,\r\n    // orderEditOn: boolean\r\n};\r\n\r\nexport default class Order extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderInfoOn: false,\r\n            // orderEditOn: false\r\n        }\r\n\r\n        this.toggleOrderInfo = this.toggleOrderInfo.bind(this);\r\n        // this.toggleOrderEdit = this.toggleOrderEdit.bind(this);\r\n    }\r\n    \r\n    toggleOrderInfo = () => this.setState({orderInfoOn: !this.state.orderInfoOn});\r\n\r\n    // toggleOrderEdit = () => this.setState({orderEditOn: !this.state.orderEditOn});\r\n\r\n    async deleteOrder(e: React.MouseEvent){\r\n        try{\r\n            // console.log('Delete Order:', this.props.order.id);\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    isUserManagerOrAdmin(){\r\n        console.log('Checking User Role');\r\n        if (localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin'){\r\n            return true;\r\n        }\r\n         return false;\r\n    }\r\n\r\n    render() {\r\n        // Prop Destructuring\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {/* {console.log('Props In Order Comp:', this.props.order)} */}\r\n                <h3>Customer Name: {order.customer.lastName}, {order.customer.firstName}</h3>\r\n                <h3>Order Price: ${order.totalPrice.toFixed(2)}</h3>\r\n                {/* {this.props.user.isManager || this.props.user.isAdmin ? <Button onClick={(e) => this.deleteOrder(e)}>Delete Order</Button> : null} */}\r\n                {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.deleteOrder(e)}>Delete Order</Button> : null}\r\n                {/* {this.isUserManagerOrAdmin() ? <Button onClick={(e) => this.deleteOrder(e)}>Delete Order</Button> : null} */}\r\n                <Button onClick={this.toggleOrderInfo}>View</Button>\r\n                {/* {this.state.orderInfoOn ? <OrderDetail token={this.props.token} user={this.props.user} mapOrders={this.props.mapOrders} toggleInfo={this.toggleOrderInfo} toggleEdit={this.toggleOrderEdit} orderInfoOn={this.state.orderInfoOn} order={order} /> : null} */}\r\n                {this.state.orderInfoOn ? <OrderDetail token={this.props.token} user={this.props.user} mapOrders={this.props.mapOrders} toggleInfo={this.toggleOrderInfo}  orderInfoOn={this.state.orderInfoOn} order={order} /> : null}\r\n                {/* {this.state.addToOrderOn ? } */}\r\n                {/* {this.state.orderEditOn ? <OrderEdit toggleEdit={this.toggleOrderEdit} orderEditOn={this.state.orderEditOn} order={order} /> : null} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["150","151","152","153","154","155"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItemEdit from './ItemEdit';\r\nimport AddToOrder from './AddToOrder';\r\n\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    user: {isAdmin: boolean},\r\n    token: string,\r\n    item: {\r\n        id: number,\r\n        name: string,\r\n        price: number\r\n    },\r\n    orderId: number,\r\n    capName: (name: string) => string,\r\n    refreshMenu: () => void,\r\n    updateOrderItems: (item: MenuItemModel) => void\r\n};\r\n\r\ntype State = {\r\n    editOn: boolean,\r\n    addToOrderOn: boolean,\r\n    specialInstructions: string,\r\n    quantity: number\r\n};\r\n\r\nexport default class MenuItem extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editOn: false,\r\n            addToOrderOn: false,\r\n            specialInstructions: '',\r\n            quantity: 0\r\n        }\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.toggleAddToOrder = this.toggleAddToOrder.bind(this);\r\n        this.updateSpecialInstructions = this.updateSpecialInstructions.bind(this);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n        this.addItemToOrder = this.addItemToOrder.bind(this);\r\n    }\r\n\r\n    async toggleEdit(){\r\n        await this.setState({editOn: !this.state.editOn});\r\n        // !this.state.editOn ? this.props.refreshMenu() : <></>;\r\n    }\r\n\r\n    toggleAddToOrder = async() => await this.setState({addToOrderOn: !this.state.addToOrderOn});\r\n\r\n    updateSpecialInstructions = async(instructions: string) => await this.setState({specialInstructions: instructions});\r\n\r\n    updateQuantity = async(qunatity: number) => await this.setState({quantity: qunatity});\r\n    \r\n    async addItemToOrder(){\r\n        try{\r\n            const url = `${API_URL}/order/food/${this.props.item.id}/add/${this.props.orderId}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    specialInstructions: this.state.specialInstructions,\r\n                    quantity: this.state.quantity\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            console.log('addItemToOrder() After Fetch');\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.props;\r\n\r\n        return (\r\n                <div>\r\n                    {/* <h3>{this.props.item.name}</h3> */}\r\n                    <h3>{this.props.capName(item.name)}</h3>\r\n                    {/* .toFixed(2) => specifiy 2 decimal places */}\r\n                    <h3>${this.props.item.price.toFixed(2)}</h3>\r\n                    {/* {this.props.user.isAdmin ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>} */}\r\n                    {localStorage.getItem('userRole') == 'admin' ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>}\r\n                    {/* {this.props.orderId != 0 ? <Button onClick={() => this.props.updateOrderItems(item)}>Add To Order</Button> : null} */}\r\n                    {/* {this.props.orderId != 0 ? <Button onClick={() => this.addItemToOrder(item)}>Add To Order</Button> : null} */}\r\n                    {this.props.orderId != 0 ? <Button onClick={this.toggleAddToOrder}>Add To Order</Button> : null}\r\n                    {console.log('Menu Item Token:', this.props.token)}\r\n                    {this.state.editOn ? <MenuItemEdit refreshMenu={this.props.refreshMenu} token={this.props.token} toggleEdit={this.toggleEdit} item={this.props.item} editOn={this.state.editOn} /> : null}\r\n                    {this.state.addToOrderOn ? <AddToOrder addToOrderOn={this.state.addToOrderOn} toggleAddToOrder={this.toggleAddToOrder} updateSpecialInstructions={this.updateSpecialInstructions} updateQuantity={this.updateQuantity} addItemToOrder={this.addItemToOrder} /> : null}\r\n                </div>\r\n\r\n            //     <Switch>\r\n            //         <Route path='/menuItem/itemId' exact>\r\n            //             <MenuItemEdit item={this.props.item} />\r\n            //         </Route>\r\n            //     </Switch>\r\n            // </Router>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",["156","157","158","159"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleEdit: () => void,\r\n    item: {\r\n        id: number,\r\n        name: string,\r\n        price: number\r\n    },\r\n    editOn: boolean,\r\n    token: string,\r\n    refreshMenu: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedName: string,\r\n    updatedPrice: number\r\n};\r\n\r\nexport default class ItemEdit extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedName: '',\r\n            updatedPrice: 0\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        console.log('Form Submit');\r\n        e.preventDefault();\r\n\r\n        try{\r\n            const url = `${API_URL}/menuItem/${this.props.item.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    name: this.state.updatedName,\r\n                    price: this.state.updatedPrice\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.refreshMenu();\r\n            this.props.toggleEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    async removeItem(e: React.MouseEvent){\r\n        try{\r\n            e.preventDefault();\r\n            const url = `${API_URL}/menuItem/${this.props.item.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            // console.log('Edit On Prop Before:', this.props.editOn);\r\n            this.props.refreshMenu();\r\n            this.props.toggleEdit();\r\n            // console.log('Edit On Prop After:', this.props.editOn);\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.editOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Menu Item Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleEdit} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                <ModalBody>\r\n                    {/* <Form onSubmit={(e) => this.submitForm(e)}> */}\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Item Id: {this.props.item.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='itemName'>Menu Item Name:</Label>\r\n                            <Input name='itemName' id='itemNameInput' required placeholder={this.props.item.name} onChange={e => this.setState({updatedName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='itemPrice'>Menu Item Price:</Label>\r\n                            <Input name='itemPrice' id='itemPriceInput' required placeholder={(this.props.item.price).toString()} onChange={e => this.setState({updatedPrice: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                    {/* </Form> */}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type='submit'>Done</Button>\r\n                    <Button color='danger' onClick={(e) => this.removeItem(e)}>Remove Item From Menu</Button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.tsx",["160","161","162","163"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n//! Old Component, Will NOT Be Used In Production \r\n\r\ntype Props = {\r\n    toggleEdit: () => void,\r\n    orderEditOn: boolean,\r\n    order: {}\r\n};\r\n\r\nexport default class OrderEdit extends Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderEditOn}>\r\n                {/* {console.log('Order Edit Prop:', order)} */}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button color='danger' onClick={this.props.toggleEdit}>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n",["164","165"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["166","167","168","169","170"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx",["171","172"],"import React, { Component } from 'react';\r\n\r\nimport API_URL from '../../env';\r\nimport CustomerList from '../Customer/CustomerList';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel,\r\n};\r\n\r\ntype State = {\r\n    customer: CustomerModel,\r\n    orderItems: MenuItemModel[],\r\n    orderId: number\r\n};\r\n\r\nexport default class OrderCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            customer: {\r\n                id: 0,\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: 0\r\n            },\r\n            orderItems: [],\r\n            orderId: 0\r\n            // menuItems: [{\r\n            //     id: 0,\r\n            //     name: 'test',\r\n            //     price: 0\r\n            // }]\r\n        }\r\n\r\n        this.updateCustomer = this.updateCustomer.bind(this);\r\n        this.updateOrderItems = this.updateOrderItems.bind(this);\r\n    }\r\n    \r\n    updateCustomer(newCustomer: CustomerModel){\r\n        this.setState({\r\n            customer: {\r\n                id: newCustomer.id,\r\n                firstName: newCustomer.firstName,\r\n                lastName: newCustomer.lastName,\r\n                phoneNumber: newCustomer.phoneNumber\r\n            }\r\n        });\r\n    }\r\n\r\n    async updateOrderItems(menuItem: MenuItemModel){\r\n        // const newMenuItems: MenuItemModel[] = this.state.menuItems.push(menuItem);\r\n        // const newMenuItems: [MenuItemModel] = this.state.menuItems.;\r\n        await this.state.orderItems.push(menuItem);\r\n        console.log(this.state.orderItems);\r\n        // this.setState({\r\n        //     // menuItems: this.state.menuItems.push(menuItem)\r\n        // })\r\n    }\r\n\r\n    async createBaseOrder(){\r\n        console.log('Order Create Customer Id:', this.state.customer.id);\r\n        console.log('Order Create Customer Name:', this.state.customer.firstName);\r\n        console.log('createBaseOrder() Starting Order Id State:', this.state.orderId);\r\n        console.log('crateBaseOrder() User Props:', this.props.user);\r\n\r\n        try{\r\n            const url = `${API_URL}/order/create/${this.state.customer.id}`;\r\n            const options = {\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n    \r\n            const res = await fetch(url, options);\r\n            // console.log('Baser Order res:', res);\r\n            const resJson = await res.json();\r\n            // console.log('Base Order json:', resJson);\r\n            const orderId = resJson.OrderId;\r\n            console.log('Base Order id:', orderId);\r\n            await this.setState({\r\n                orderId: orderId\r\n            });\r\n            console.log('createBaseOrder() Ending Order Id State:', this.state.orderId);\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State){\r\n        prevState.customer.id != this.state.customer.id ? this.createBaseOrder() : console.log('componentDidUpdate()');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* {this.state.customer.id == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : <MenuItemList token={this.props.token} user={this.props.user} orderItems={this.state.orderItems} updateOrderItems={this.updateOrderItems} />} */}\r\n\r\n                {/* {this.state.customer.id == 0 && this.state.orderId == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : this.createBaseOrder() } */}\r\n\r\n                {/* {this.state.customer.id == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : null} */}\r\n\r\n                {this.state.customer.id == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} orderItems={this.state.orderItems} updateOrderItems={this.updateOrderItems} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx",["173"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport CustomerEdit from './CustomerEdit';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel,\r\n    capitalizeName: (name: string) => string,\r\n    updateCustomer: (customer: CustomerModel) => void,\r\n    mapCustomers: () => void \r\n};\r\n\r\ntype State = {\r\n    editCustomerOn: boolean\r\n};\r\n\r\nexport default class Customer extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editCustomerOn: false\r\n        }\r\n\r\n        this.toggleCustomerEdit = this.toggleCustomerEdit.bind(this);\r\n    }\r\n\r\n    toggleCustomerEdit = () => this.setState({editCustomerOn: !this.state.editCustomerOn});\r\n    \r\n    formatPhoneNumber(customer: CustomerModel){\r\n        const number = (customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {customer} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {/* <h3>{this.props.capitalizeName(customer.firstName)}</h3>\r\n                <h3>{this.props.capitalizeName(customer.lastName)}</h3> */}\r\n                {/* <h3>{this.props.capitalizeName(customer.lastName)}, {this.props.capitalizeName(customer.firstName)}</h3> */}\r\n                <h3>{this.props.capitalizeName(customer.firstName)} {this.props.capitalizeName(customer.lastName)}</h3>\r\n                {/* <h3>{customer.phoneNumber}</h3> */} \r\n                <h3>{this.formatPhoneNumber(customer)}</h3>\r\n                {/* If the url isn't on order create, don't show the button */}\r\n                {window.location.href == 'http://localhost:3000/order/create' ?  <Button color='primary' onClick={() => this.props.updateCustomer(customer)}>Select Customer</Button> : null}\r\n                {/* <Button color='primary' onClick={() => this.props.updateCustomer(customer)}>Select Customer</Button> */}\r\n                <Button onClick={() => this.toggleCustomerEdit()}>Edit Customer Info</Button>\r\n                {this.state.editCustomerOn ? <CustomerEdit token={this.props.token} customer={this.props.customer} editCustomerOn={this.state.editCustomerOn} mapCustomers={this.props.mapCustomers} toggleCustomerEdit={this.toggleCustomerEdit} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx",["174","175"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel, \r\n    editCustomerOn: boolean,\r\n    mapCustomers: () => void,\r\n    toggleCustomerEdit: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedFirstName: string,\r\n    updatedLastName: string,\r\n    updatedPhoneNumber: number\r\n};\r\n\r\nexport default class CustomerEdit extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedFirstName: '',\r\n            updatedLastName: '',\r\n            updatedPhoneNumber: 0\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    firstName: this.capitalizeName(this.state.updatedFirstName),\r\n                    lastName: this.capitalizeName(this.state.updatedLastName),\r\n                    phoneNumber: this.state.updatedPhoneNumber\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    async removeCustomer(e: React.MouseEvent){\r\n        // e.preventDefault();\r\n\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.editCustomerOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Customer Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleCustomerEdit} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Customer Id: {this.props.customer.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' id='customerFirstNameInput' required placeholder={this.props.customer.firstName} onChange={e => this.setState({updatedFirstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' id='customerLastNameInput' required placeholder={this.props.customer.lastName} onChange={e => this.setState({updatedLastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' id='customerPhoneNumberInput' required placeholder={(this.props.customer.phoneNumber).toString()} onChange={e => this.setState({updatedPhoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type='submit'>Done</Button>\r\n                    {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.removeCustomer(e)}>Remove Customer From System</Button> : null}\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetailItems.tsx",["176","177","178","179","180","181","182","183","184","185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":3,"column":1,"nodeType":"197","messageId":"198","endLine":11,"endColumn":2},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"199","severity":1,"message":"200","line":62,"column":40,"nodeType":"201","messageId":"202","endLine":62,"endColumn":42},{"ruleId":"199","severity":1,"message":"200","line":63,"column":39,"nodeType":"201","messageId":"202","endLine":63,"endColumn":41},{"ruleId":"191","severity":1,"message":"203","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":28},{"ruleId":"191","severity":1,"message":"204","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":28},{"ruleId":"191","severity":1,"message":"205","line":2,"column":30,"nodeType":"193","messageId":"194","endLine":2,"endColumn":39},{"ruleId":"199","severity":1,"message":"206","line":93,"column":27,"nodeType":"201","messageId":"202","endLine":93,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":178,"column":74,"nodeType":"209","endLine":178,"endColumn":112},{"ruleId":"199","severity":1,"message":"200","line":181,"column":57,"nodeType":"201","messageId":"202","endLine":181,"endColumn":59},{"ruleId":"199","severity":1,"message":"206","line":55,"column":27,"nodeType":"201","messageId":"202","endLine":55,"endColumn":29},{"ruleId":"191","severity":1,"message":"210","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":15},{"ruleId":"191","severity":1,"message":"211","line":2,"column":17,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"212","line":3,"column":49,"nodeType":"193","messageId":"194","endLine":3,"endColumn":53},{"ruleId":"191","severity":1,"message":"211","line":2,"column":17,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"213","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"214","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":38},{"ruleId":"191","severity":1,"message":"215","line":2,"column":40,"nodeType":"193","messageId":"194","endLine":2,"endColumn":43},{"ruleId":"191","severity":1,"message":"216","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"217","line":2,"column":33,"nodeType":"193","messageId":"194","endLine":2,"endColumn":39},{"ruleId":"191","severity":1,"message":"218","line":2,"column":41,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},{"ruleId":"191","severity":1,"message":"212","line":2,"column":49,"nodeType":"193","messageId":"194","endLine":2,"endColumn":53},{"ruleId":"191","severity":1,"message":"219","line":2,"column":55,"nodeType":"193","messageId":"194","endLine":2,"endColumn":68},{"ruleId":"191","severity":1,"message":"220","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":107,"column":51,"nodeType":"201","messageId":"202","endLine":107,"endColumn":53},{"ruleId":"191","severity":1,"message":"221","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":102,"column":46,"nodeType":"201","messageId":"202","endLine":102,"endColumn":48},{"ruleId":"199","severity":1,"message":"200","line":102,"column":95,"nodeType":"201","messageId":"202","endLine":102,"endColumn":97},{"ruleId":"199","severity":1,"message":"200","line":118,"column":51,"nodeType":"201","messageId":"202","endLine":118,"endColumn":53},{"ruleId":"199","severity":1,"message":"200","line":118,"column":100,"nodeType":"201","messageId":"202","endLine":118,"endColumn":102},{"ruleId":"191","severity":1,"message":"216","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"217","line":2,"column":33,"nodeType":"193","messageId":"194","endLine":2,"endColumn":39},{"ruleId":"191","severity":1,"message":"218","line":2,"column":41,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},{"ruleId":"191","severity":1,"message":"212","line":2,"column":49,"nodeType":"193","messageId":"194","endLine":2,"endColumn":53},{"ruleId":"199","severity":1,"message":"200","line":99,"column":55,"nodeType":"201","messageId":"202","endLine":99,"endColumn":57},{"ruleId":"199","severity":1,"message":"206","line":102,"column":41,"nodeType":"201","messageId":"202","endLine":102,"endColumn":43},{"ruleId":"191","severity":1,"message":"216","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"217","line":2,"column":33,"nodeType":"193","messageId":"194","endLine":2,"endColumn":39},{"ruleId":"191","severity":1,"message":"218","line":2,"column":41,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},{"ruleId":"191","severity":1,"message":"212","line":2,"column":49,"nodeType":"193","messageId":"194","endLine":2,"endColumn":53},{"ruleId":"191","severity":1,"message":"211","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"222","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},{"ruleId":"191","severity":1,"message":"223","line":2,"column":80,"nodeType":"193","messageId":"194","endLine":2,"endColumn":91},{"ruleId":"191","severity":1,"message":"224","line":25,"column":16,"nodeType":"193","messageId":"194","endLine":25,"endColumn":21},{"ruleId":"187","replacedBy":"225"},{"ruleId":"189","replacedBy":"226"},{"ruleId":"191","severity":1,"message":"204","line":2,"column":18,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"205","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"211","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"222","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},{"ruleId":"227","severity":1,"message":"228","line":67,"column":43,"nodeType":"229","messageId":"230","endLine":67,"endColumn":45},{"ruleId":"199","severity":1,"message":"206","line":103,"column":31,"nodeType":"201","messageId":"202","endLine":103,"endColumn":33},{"ruleId":"199","severity":1,"message":"200","line":115,"column":41,"nodeType":"201","messageId":"202","endLine":115,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":58,"column":39,"nodeType":"201","messageId":"202","endLine":58,"endColumn":41},{"ruleId":"199","severity":1,"message":"200","line":122,"column":55,"nodeType":"201","messageId":"202","endLine":122,"endColumn":57},{"ruleId":"199","severity":1,"message":"200","line":122,"column":104,"nodeType":"201","messageId":"202","endLine":122,"endColumn":106},{"ruleId":"191","severity":1,"message":"210","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"191","severity":1,"message":"204","line":2,"column":18,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"205","line":2,"column":24,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"211","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"222","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":47},{"ruleId":"191","severity":1,"message":"231","line":2,"column":49,"nodeType":"193","messageId":"194","endLine":2,"endColumn":54},{"ruleId":"191","severity":1,"message":"232","line":2,"column":56,"nodeType":"193","messageId":"194","endLine":2,"endColumn":67},{"ruleId":"191","severity":1,"message":"233","line":2,"column":69,"nodeType":"193","messageId":"194","endLine":2,"endColumn":78},{"ruleId":"191","severity":1,"message":"223","line":2,"column":80,"nodeType":"193","messageId":"194","endLine":2,"endColumn":91},{"ruleId":"191","severity":1,"message":"213","line":2,"column":93,"nodeType":"193","messageId":"194","endLine":2,"endColumn":102},{"ruleId":"227","severity":1,"message":"228","line":27,"column":63,"nodeType":"229","messageId":"230","endLine":27,"endColumn":65},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Label' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'MenuItemEdit' is defined but never used.","'OrderEdit' is defined but never used.","'Input' is defined but never used.","'ModalFooter' is defined but never used.","'order' is assigned a value but never used.",["234"],["235"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation"]