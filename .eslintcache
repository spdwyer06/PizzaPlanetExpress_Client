[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx":"17","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx":"18","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx":"19","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx":"20","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx":"21","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2325,"mtime":1611626737851,"results":"26","hashOfConfig":"24"},{"size":335,"mtime":1609873904958,"results":"27","hashOfConfig":"24"},{"size":1747,"mtime":1611625619810,"results":"28","hashOfConfig":"24"},{"size":6435,"mtime":1611629907745,"results":"29","hashOfConfig":"24"},{"size":2751,"mtime":1611625778558,"results":"30","hashOfConfig":"24"},{"size":2650,"mtime":1611629995891,"results":"31","hashOfConfig":"24"},{"size":1505,"mtime":1611630005320,"results":"32","hashOfConfig":"24"},{"size":2866,"mtime":1611629693988,"results":"33","hashOfConfig":"24"},{"size":2972,"mtime":1611624899657,"results":"34","hashOfConfig":"24"},{"size":2781,"mtime":1611630072318,"results":"35","hashOfConfig":"24"},{"size":2614,"mtime":1611630098829,"results":"36","hashOfConfig":"24"},{"size":3553,"mtime":1611630052434,"results":"37","hashOfConfig":"24"},{"size":4086,"mtime":1611630029158,"results":"38","hashOfConfig":"24"},{"size":8326,"mtime":1611630183512,"results":"39","hashOfConfig":"24"},{"size":3007,"mtime":1611630134602,"results":"40","hashOfConfig":"24"},{"size":2475,"mtime":1611625568997,"results":"41","hashOfConfig":"24"},{"size":2114,"mtime":1611625489694,"results":"42","hashOfConfig":"24"},{"size":4942,"mtime":1611625543152,"results":"43","hashOfConfig":"24"},{"size":3626,"mtime":1611624804580,"results":"44","hashOfConfig":"24"},{"size":1830,"mtime":1611624852400,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"yua5fg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["99","100"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",["101"],"import React, {Component} from 'react';\n\nimport Auth from './Components/Auth/Auth';\nimport Home from './Components/Home/Home';\nimport API_URL from './env';\n\nimport UserModel from './Components/Models/UserModel';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\ntype State = {\n  sessionToken: string,\n  user: UserModel\n}\n\nclass App extends Component<{}, State> {\n\n  constructor(props: any) {\n    super(props)\n  \n    this.state = {\n      sessionToken: '',\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    }\n\n    this.updateToken = this.updateToken.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  \n  async componentDidMount(){\n    try{\n      console.log('App mount() Start Token State:', this.state.sessionToken);\n      if(localStorage.getItem('token')){\n        await this.setState({\n          // Casting as string\n          sessionToken: (localStorage.getItem('token') as string)\n        });\n      }\n      console.log('App mount() End Token State:', this.state.sessionToken);\n      console.log('App mount() End User State:', this.state.user);\n    }\n    catch(err){\n      console.log('Error:', err.message);\n    }\n  }\n\n  updateToken = async(newToken: string) => {\n    localStorage.setItem('token', newToken);\n    await this.setState({\n      sessionToken: newToken\n    });\n  }\n\n  async updateUser(user: UserModel){\n    if(user.isAdmin){\n      localStorage.setItem('userRole', 'admin');\n    }\n    else if(user.isManager){\n      localStorage.setItem('userRole', 'manager');\n    }\n    else{\n      localStorage.setItem('userRole', 'employee');\n    }\n    \n    await this.setState({\n      user: user\n    });\n  }\n  \n  logOut(){\n    localStorage.clear();\n    this.setState({\n      sessionToken: '',\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {console.log('App render() Token State:', this.state.sessionToken)}\n        {console.log('App render() User State:', this.state.user)}\n        {this.state.sessionToken === '' ? <Auth updateUser={this.updateUser} updateToken={this.updateToken} /> : <Home token={this.state.sessionToken} user={this.state.user} logout={this.logOut} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["102"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["103","104"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["105","106"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["107","108","109"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["110"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number | null\r\n};\r\n\r\nexport default class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: null\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n        const url = `${API_URL}/user/create`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                this.props.toggleSignup();\r\n            }\r\n            else{\r\n                const r = await res.json();\r\n                console.log('Error:', r.Error.errors[0].message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["111"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",["112","113","114"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport API_URL from '../../env';\r\nimport Order from './Order';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n};\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel\r\n};\r\n\r\ntype State = {\r\n    orders: [],\r\n    orderCreateOn: boolean,\r\n    orderId: number\r\n};\r\n\r\nexport default class OrderList extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orders: [],\r\n            orderCreateOn: false,\r\n            orderId: 0\r\n        }\r\n\r\n        this.toggleOrderCreate = this.toggleOrderCreate.bind(this);\r\n        this.mapOrders = this.mapOrders.bind(this);\r\n        this.setOrderId = this.setOrderId.bind(this);\r\n    }\r\n\r\n    async mapOrders(){\r\n        console.log('OrderList Token:', this.props.token);\r\n\r\n        try{\r\n            const url = `${API_URL}/order/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            \r\n            const allOrders = await fetch(url, options);\r\n            const ordersJson = await allOrders.json();\r\n            const orders = ordersJson.Orders;\r\n            \r\n            if(orders){\r\n                console.log('Orders present');\r\n                await this.setState({orders: orders});\r\n            }\r\n            else{\r\n                console.log('No orders');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error', err.message);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mapOrders();\r\n    }\r\n\r\n    toggleOrderCreate = () => this.setState({orderCreateOn: !this.state.orderCreateOn});\r\n\r\n    setOrderId = (orderId: number) => this.setState({orderId: orderId});\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Route exact path='/order/all'>\r\n                    <h1>All Orders</h1>\r\n                    {this.state.orders.length > 0 ? this.state.orders.map((order, i) => <Order token={this.props.token} user={this.props.user} order={order} key={i} mapOrders={this.mapOrders} setOrderId={this.setOrderId} />) : <h3>No orders yet</h3>}\r\n                </Route>\r\n\r\n                <Switch>\r\n                    <Route exact path='/order/add'>\r\n                        <h2>Stuff n things</h2>\r\n                        <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />\r\n                    </Route> \r\n                </Switch>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["115"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",["116","117","118","119"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["120","121"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["122","123"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx",["124","125"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx",["126"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport CustomerEdit from './CustomerEdit';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel,\r\n    capitalizeName: (name: string) => string,\r\n    updateCustomer: (customer: CustomerModel) => void,\r\n    mapCustomers: () => void \r\n};\r\n\r\ntype State = {\r\n    editCustomerOn: boolean\r\n};\r\n\r\nexport default class Customer extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editCustomerOn: false\r\n        }\r\n\r\n        this.toggleCustomerEdit = this.toggleCustomerEdit.bind(this);\r\n    }\r\n\r\n    toggleCustomerEdit = () => this.setState({editCustomerOn: !this.state.editCustomerOn});\r\n    \r\n    formatPhoneNumber(customer: CustomerModel){\r\n        const number = (customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {customer} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h3>{this.props.capitalizeName(customer.firstName)} {this.props.capitalizeName(customer.lastName)}</h3>\r\n                <h3>{this.formatPhoneNumber(customer)}</h3>\r\n                {/* If the url isn't on order create, don't show the button */}\r\n                {window.location.href == 'http://localhost:3000/order/create' ?  <Button color='primary' onClick={() => this.props.updateCustomer(customer)}>Select Customer</Button> : null}\r\n                <Button onClick={() => this.toggleCustomerEdit()}>Edit Customer Info</Button>\r\n                {this.state.editCustomerOn ? <CustomerEdit token={this.props.token} customer={this.props.customer} editCustomerOn={this.state.editCustomerOn} mapCustomers={this.props.mapCustomers} toggleCustomerEdit={this.toggleCustomerEdit} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx",["127","128"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel, \r\n    editCustomerOn: boolean,\r\n    mapCustomers: () => void,\r\n    toggleCustomerEdit: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedFirstName: string,\r\n    updatedLastName: string,\r\n    updatedPhoneNumber: number\r\n};\r\n\r\nexport default class CustomerEdit extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedFirstName: '',\r\n            updatedLastName: '',\r\n            updatedPhoneNumber: 0\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    firstName: this.capitalizeName(this.state.updatedFirstName),\r\n                    lastName: this.capitalizeName(this.state.updatedLastName),\r\n                    phoneNumber: this.state.updatedPhoneNumber\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    async removeCustomer(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.editCustomerOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Customer Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleCustomerEdit} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Customer Id: {this.props.customer.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' id='customerFirstNameInput' required placeholder={this.props.customer.firstName} onChange={e => this.setState({updatedFirstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' id='customerLastNameInput' required placeholder={this.props.customer.lastName} onChange={e => this.setState({updatedLastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' id='customerPhoneNumberInput' required placeholder={(this.props.customer.phoneNumber).toString()} onChange={e => this.setState({updatedPhoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type='submit'>Done</Button>\r\n                    {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.removeCustomer(e)}>Remove Customer From System</Button> : null}\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":3,"column":1,"nodeType":"139","messageId":"140","endLine":11,"endColumn":2},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"141","severity":1,"message":"142","line":55,"column":40,"nodeType":"143","messageId":"144","endLine":55,"endColumn":42},{"ruleId":"141","severity":1,"message":"142","line":56,"column":39,"nodeType":"143","messageId":"144","endLine":56,"endColumn":41},{"ruleId":"141","severity":1,"message":"145","line":71,"column":27,"nodeType":"143","messageId":"144","endLine":71,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":152,"column":74,"nodeType":"148","endLine":152,"endColumn":112},{"ruleId":"141","severity":1,"message":"142","line":155,"column":57,"nodeType":"143","messageId":"144","endLine":155,"endColumn":59},{"ruleId":"141","severity":1,"message":"145","line":50,"column":27,"nodeType":"143","messageId":"144","endLine":50,"endColumn":29},{"ruleId":"133","severity":1,"message":"149","line":3,"column":49,"nodeType":"135","messageId":"136","endLine":3,"endColumn":53},{"ruleId":"133","severity":1,"message":"150","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":15},{"ruleId":"133","severity":1,"message":"151","line":3,"column":33,"nodeType":"135","messageId":"136","endLine":3,"endColumn":39},{"ruleId":"133","severity":1,"message":"149","line":3,"column":49,"nodeType":"135","messageId":"136","endLine":3,"endColumn":53},{"ruleId":"141","severity":1,"message":"142","line":84,"column":51,"nodeType":"143","messageId":"144","endLine":84,"endColumn":53},{"ruleId":"141","severity":1,"message":"142","line":61,"column":46,"nodeType":"143","messageId":"144","endLine":61,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":61,"column":95,"nodeType":"143","messageId":"144","endLine":61,"endColumn":97},{"ruleId":"141","severity":1,"message":"142","line":75,"column":51,"nodeType":"143","messageId":"144","endLine":75,"endColumn":53},{"ruleId":"141","severity":1,"message":"142","line":75,"column":100,"nodeType":"143","messageId":"144","endLine":75,"endColumn":102},{"ruleId":"141","severity":1,"message":"142","line":92,"column":51,"nodeType":"143","messageId":"144","endLine":92,"endColumn":53},{"ruleId":"141","severity":1,"message":"145","line":93,"column":37,"nodeType":"143","messageId":"144","endLine":93,"endColumn":39},{"ruleId":"133","severity":1,"message":"152","line":3,"column":9,"nodeType":"135","messageId":"136","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":39,"column":43,"nodeType":"155","messageId":"156","endLine":39,"endColumn":45},{"ruleId":"141","severity":1,"message":"145","line":87,"column":31,"nodeType":"143","messageId":"144","endLine":87,"endColumn":33},{"ruleId":"141","severity":1,"message":"142","line":93,"column":41,"nodeType":"143","messageId":"144","endLine":93,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":54,"column":39,"nodeType":"143","messageId":"144","endLine":54,"endColumn":41},{"ruleId":"141","severity":1,"message":"142","line":120,"column":55,"nodeType":"143","messageId":"144","endLine":120,"endColumn":57},{"ruleId":"141","severity":1,"message":"142","line":120,"column":104,"nodeType":"143","messageId":"144","endLine":120,"endColumn":106},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]