[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"17","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx":"18","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx":"19","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx":"20","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx":"21","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":3688,"mtime":1610657035109,"results":"26","hashOfConfig":"24"},{"size":335,"mtime":1609873904958,"results":"27","hashOfConfig":"24"},{"size":2056,"mtime":1610601626592,"results":"28","hashOfConfig":"24"},{"size":7550,"mtime":1610607554269,"results":"29","hashOfConfig":"24"},{"size":3462,"mtime":1610597879008,"results":"30","hashOfConfig":"24"},{"size":2339,"mtime":1610660674807,"results":"31","hashOfConfig":"24"},{"size":2615,"mtime":1610652684490,"results":"32","hashOfConfig":"24"},{"size":3288,"mtime":1610655310701,"results":"33","hashOfConfig":"24"},{"size":2865,"mtime":1610603974353,"results":"34","hashOfConfig":"24"},{"size":3489,"mtime":1610608905727,"results":"35","hashOfConfig":"24"},{"size":3263,"mtime":1610656088390,"results":"36","hashOfConfig":"24"},{"size":1944,"mtime":1610608648025,"results":"37","hashOfConfig":"24"},{"size":4395,"mtime":1610663352472,"results":"38","hashOfConfig":"24"},{"size":1396,"mtime":1610600754620,"results":"39","hashOfConfig":"24"},{"size":6874,"mtime":1610656495007,"results":"40","hashOfConfig":"24"},{"size":557,"mtime":1610670045597,"results":"41","hashOfConfig":"24"},{"size":2485,"mtime":1610671536759,"results":"42","hashOfConfig":"24"},{"size":1418,"mtime":1610665023586,"results":"43","hashOfConfig":"24"},{"size":4749,"mtime":1610664877580,"results":"44","hashOfConfig":"24"},{"size":3505,"mtime":1610671563861,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"yua5fg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["102","103"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",["104"],"import React, {Component} from 'react';\n\nimport Auth from './Components/Auth/Auth';\nimport Home from './Components/Home/Home';\nimport API_URL from './env';\n\n// import UserModel from './Components/Models/UserModel';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\ntype UserModel = {\n  isManager: boolean,\n  isAdmin: boolean\n};\n\ntype State = {\n  sessionToken: string,\n  user: UserModel\n  // user: {\n  //   isManager: boolean,\n  //   isAdmin: boolean\n  // } \n  // sessionToken: Storage\n}\n\nclass App extends Component<{}, State> {\n\n  constructor(props: any) {\n    super(props)\n  \n    this.state = {\n      sessionToken: '',\n      // user: {}\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    }\n\n    this.updateToken = this.updateToken.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.logOut = this.logOut.bind(this);\n    // this.isLoggedIn = this.isLoggedIn.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n  \n  async componentDidMount(){\n    try{\n      console.log('App mount() Start Token State:', this.state.sessionToken);\n      if(localStorage.getItem('token')){\n        // const user = \n        this.setState({\n          // Casting as string\n          sessionToken: (localStorage.getItem('token') as string)\n        });\n      }\n      // else if(localStorage.getItem('user')){\n      //   this.setState({\n      //     user: localStorage.getItem('user');\n      //   })\n      // }\n      // else{\n      //   this.setState({\n      //     sessionToken: ''\n      //   });\n      // }\n      console.log('App mount() End Token State:', this.state.sessionToken);\n      console.log('App mount() End User State:', this.state.user);\n    }\n    catch(err){\n      console.log('Error:', err.message);\n    }\n  }\n\n  // componentDidUpdate(){\n  //   console.log('App update() Start Token State:', this.state.sessionToken);\n    \n  //   if(!localStorage.getItem('token')){\n  //     this.setState({\n  //       sessionToken: ''\n  //     });\n  //   }\n\n  //   console.log('App update() End Token State:', this.state.sessionToken);\n  //   // else{\n  //   //   this.setState({\n  //   //     sessionToken: localStorage.getItem('token')\n  //   //   });\n  //   // }\n  // }\n\n  // isLoggedIn(){\n  //   this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>\n  // }\n\n  updateToken = (newToken: string): void => {\n    localStorage.setItem('token', newToken);\n    this.setState({\n      sessionToken: newToken\n    });\n  }\n\n  updateUser(user: UserModel): void{\n    this.setState({\n      user: user\n    });\n  }\n  \n  logOut(){\n    localStorage.clear();\n    this.setState({\n      sessionToken: '',\n      user: {\n        isManager: false,\n        isAdmin: false\n      }\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {console.log('App render() Token State:', this.state.sessionToken)}\n        {console.log('App render() User State:', this.state.user)}\n        {/* {this.isLoggedIn()} */}\n        {/* {this.state.sessionToken === '' || null ? <Login updateToken={this.updateToken} /> : <button onClick={() => this.logOut()}>Log Out</button>} */}\n        {/* <Auth updateToken={this.updateToken} /> */}\n        {this.state.sessionToken === '' ? <Auth updateUser={this.updateUser} updateToken={this.updateToken} /> : <Home token={this.state.sessionToken} user={this.state.user} logout={this.logOut} />}\n        {/* <Home /> */}\n\n        {/* <MenuItemHome /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["105"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["106","107"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["108","109"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        // this.state.signupOpen == true ? this.setState({signupOpen: false}) : this.setState({signupOpen: true});\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n        // if(this.state.loginOpen == true){\r\n        //     this.setState({loginOpen: false});\r\n        // }\r\n        // else{\r\n        //     this.setState({loginOpen: true});\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["110","111","112","113","114","115"],"import React, { ChangeEvent, Component } from 'react';\r\nimport {Button, Modal, Form, FormGroup, Label, Container, Row, Col, ModalHeader} from 'reactstrap';\r\n\r\nimport Backspace from './backspace.png';\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void,\r\n    toggleLogin: () => void,\r\n    loginOpen: boolean \r\n};\r\n\r\ntype State = {\r\n    password: string\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            password: '',\r\n            //  loginOpen: false\r\n        }\r\n    }\r\n    \r\n    // <HTMLButtonElement>\r\n    \r\n    // setPass(e: Event){\r\n    // setPass(e: React.MouseEvent<HTMLButtonElement>){\r\n    setPass(e: React.MouseEvent<HTMLElement>){\r\n    // setPass(e: ChangeEvent<HTMLInputElement>){\r\n        const value = (e.target as HTMLButtonElement).value;\r\n        // console.log('Button Value:', e.target.value);\r\n        console.log('Button Value:', value);\r\n        let passBox = document.getElementById('password');\r\n        // passBox.innerText += e.target.value;\r\n        (passBox as HTMLInputElement).innerText += value;\r\n\r\n        // this.setState((state, value) => ({\r\n        //     password: state.password + value\r\n        // }))\r\n\r\n        this.setState({\r\n            // password: this.state.password + e.target.value\r\n            password: this.state.password + value\r\n        }, () => console.log('Password State:', this.state.password));\r\n\r\n        // if(this.state.password.length == 3){\r\n        //     const numBtns = Array.from(document.querySelectorAll('button'));\r\n        //     console.log('Num Btns:', numBtns.length);\r\n        //     const btns = numBtns.slice(0, -1);\r\n        //     btns.forEach(btn => {\r\n        //         btn.style.display = 'none';\r\n        //     });\r\n        // }\r\n    } \r\n    \r\n    removeLastNum(){\r\n        let passBox = (document.getElementById('password') as HTMLInputElement);\r\n        let pass = passBox.innerText.slice(0, -1);\r\n        passBox.innerText = pass;\r\n        this.setState({\r\n            password: pass\r\n        }, () => console.log('New Password State:', this.state.password));\r\n    }\r\n\r\n    async login(){\r\n        const url = `${API_URL}/user/login`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                console.log('Went through', res.body);\r\n                const r = await res.json();\r\n                const user = r.user;\r\n                const token = r.token;\r\n                console.log('User:', user);\r\n                console.log('Token:', token);\r\n                // const robj = await res.json();\r\n                // console.log('robj:', robj);\r\n                // console.log('Token:', robj.token);\r\n                await this.props.updateToken(token);\r\n                await this.props.updateUser(user);\r\n                this.props.toggleLogin();\r\n            }\r\n            else{\r\n                console.log('Login failed');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            // <Container className='loginContainer themed-container' fluid='sm'>\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h4 className='test'>Enter Your Password</h4>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleLogin} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Container className='loginContainer'>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='passInput' xs='auto'>\r\n                            <Label id='password'></Label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e: React.MouseEvent<HTMLElement>) => this.setPass(e)} value='1'>1</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='2'>2</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3 numBtn' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='3'>3</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='4'>4</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='5'>5</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='6'>6</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='7'>7</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='8'>8</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='9'>9</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            <Button onClick={() => this.removeLastNum()}><img id='backspace' src={Backspace} /></Button>\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length == 4 ? <Button type='submit' className='loginBtn' onClick={() => this.login()}>Login</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["116"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number | null\r\n};\r\n\r\nexport class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: null\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n        // console.log('Form Submitted');\r\n        // console.log('First Name State:', this.state.firstName);\r\n        // console.log('Last Name State:', this.state.lastName);\r\n        // console.log('Password State:', this.state.password);\r\n        const url = `${API_URL}/user/create`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            // await fetch(url, options);\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                this.props.toggleSignup();\r\n            }\r\n            else{\r\n                const r = await res.json();\r\n                // console.log('Error', r);\r\n                // console.log('Error 2', r.Error);\r\n                console.log('Error:', r.Error.errors[0].message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    // async updateLastName(e){\r\n    //     console.log('First Name State:', this.state.firstName);\r\n    //     console.log('Last Name State Start:', this.state.lastName);\r\n    //     await this.setState({lastName: e.target.value});\r\n    //     console.log('Last Name State End:', this.state.lastName);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["117","118","119"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",["120","121","122","123"],"import React, { Component } from 'react';\r\nimport {Button, Label, Container, Row, Col, Nav, NavItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void\r\n};\r\n\r\nexport default class Navbar extends Component<Props, {}> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Nav vertical>\r\n                <br />\r\n                <NavItem>\r\n                    <Button onClick={this.props.logout}>Logout</Button>\r\n                </NavItem>\r\n                <br />\r\n                {/* <NavItem>\r\n                    <Link to='/hours/clockIn'>\r\n                        <Button>Clock In</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/clockOut'>\r\n                        <Button>Clock Out</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    Get All Hours By User Id\r\n                    <Link to='/hours/myHours'>\r\n                        <Button>View Your Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/hours/all'>\r\n                        <Button>View All Hours</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br /> */}\r\n                <NavItem>\r\n                    <Link to='/order/create'>\r\n                        <Button>Start A New Order</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/order/all'>\r\n                        <Button>View All Orders</Button>\r\n                    </Link>\r\n                </NavItem>\r\n                {/* <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Current Orders (Unpaid)</Button>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col>\r\n                        <Button>View Previous Orders (Paid)</Button>\r\n                    </Col>\r\n                </Row> */}\r\n                <br />\r\n                <NavItem>\r\n                    <Link to='/menuItem/all'>\r\n                        <Button>View All Menu Items</Button>\r\n                    </Link>\r\n                </NavItem>\r\n            </Nav>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["124","125","126","127","128","129","130"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link, useRouteMatch} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemEdit from './ItemEdit';\r\nimport MenuItemCreate from './ItemCreate';\r\n\r\nimport './MenuItem.css';\r\nimport { Console } from 'console';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: {\r\n        isAdmin: boolean\r\n    }\r\n};\r\n\r\ntype State = {\r\n    menuItems: [],\r\n    createOn: boolean,\r\n    count: number\r\n};\r\n\r\nexport default class MenuItemList extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            menuItems: [],\r\n            createOn: false,\r\n            count: 0\r\n        }\r\n\r\n        this.toggleCreate = this.toggleCreate.bind(this);\r\n        this.mapItems = this.mapItems.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('Menu Item List Count Start:', this.state.count);\r\n        console.log('Menu Item List User:', this.props.user);\r\n        await this.mapItems();\r\n        console.log('Menu Item List Count End:', this.state.count);\r\n    }\r\n\r\n    // componentDidUpdate(prevProps: Props, prevState: State){\r\n    //     console.log('Running MenuItemList .componentDidUpdate()');\r\n    //     if(prevState.menuItems != this.state.menuItems){\r\n    //         console.log('Stuff has changed');\r\n    //         // this.mapItems();\r\n    //     }\r\n    //     // this.mapItems();\r\n    // }\r\n    \r\n    async mapItems(){\r\n        try{\r\n            const url = `${API_URL}/menuItem/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            const allItems = await fetch(url, options);\r\n            const itemsJson = await allItems.json();\r\n            const menuItems = itemsJson.Menu_Items;\r\n            // console.log('All Item 2:', menuItems);\r\n            // console.log('First Item Name 2:', menuItems[0].name);\r\n            // console.log('First Item Price 2:', menuItems[0].price);\r\n    \r\n            // this.setState({menuItems: menuItems});\r\n\r\n            this.setState({\r\n                menuItems: menuItems,\r\n                count: menuItems.length\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('Map Error:', err.message);\r\n        }\r\n    }\r\n\r\n    toggleCreate(){\r\n        this.setState({createOn: !this.state.createOn});\r\n        !this.state.createOn ? this.mapItems() : <></>;\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>All Menu Items</h1>\r\n                {this.props.user.isAdmin ? <Button onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>}\r\n                {/* {console.log('State', this.state.menuItems)} */}\r\n                {this.state.menuItems.map((menuItem, i) => <MenuItem user={this.props.user} token={this.props.token} item={menuItem} capName={this.capitalizeName} key={i} refreshMenu={this.mapItems} />)}\r\n                {this.state.createOn ? <MenuItemCreate user={this.props.user} token={this.props.token} createOn={this.state.createOn} toggleCreate={this.toggleCreate} /> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["131","132","133","134"],"import React, { Component } from 'react';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport MenuItemEdit from './ItemEdit';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    user: {isAdmin: boolean},\r\n    token: string,\r\n    item: {\r\n        id: number,\r\n        name: string,\r\n        price: number\r\n    },\r\n    capName: (name: string) => string,\r\n    refreshMenu: () => void\r\n};\r\n\r\ntype State = {\r\n    editOn: boolean\r\n};\r\n\r\nexport default class MenuItem extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            editOn: false\r\n        }\r\n\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n    }\r\n\r\n    async toggleEdit(){\r\n        await this.setState({editOn: !this.state.editOn});\r\n        // !this.state.editOn ? this.props.refreshMenu() : <></>;\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {item} = this.props;\r\n\r\n        return (\r\n                <div>\r\n                    {/* <h3>{this.props.item.name}</h3> */}\r\n                    <h3>{this.props.capName(item.name)}</h3>\r\n                    <h3>${this.props.item.price}</h3>\r\n                    {this.props.user.isAdmin ? <Button onClick={this.toggleEdit}>Edit Item</Button> : <></>}\r\n                    <Button>Add To Order</Button>\r\n                    {console.log('Menu Item Token:', this.props.token)}\r\n                    {this.state.editOn ? <MenuItemEdit refreshMenu={this.props.refreshMenu} token={this.props.token} toggleEdit={this.toggleEdit} item={this.props.item} editOn={this.state.editOn} /> : null}\r\n                </div>\r\n\r\n            //     <Switch>\r\n            //         <Route path='/menuItem/itemId' exact>\r\n            //             <MenuItemEdit item={this.props.item} />\r\n            //         </Route>\r\n            //     </Switch>\r\n            // </Router>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",["135","136","137","138"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderEdit.tsx",["139","140","141","142"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleEdit: () => void,\r\n    orderEditOn: boolean,\r\n    order: {}\r\n};\r\n\r\nexport default class OrderEdit extends Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderEditOn}>\r\n                {/* {console.log('Order Edit Prop:', order)} */}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button color='danger' onClick={this.props.toggleEdit}>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["143","144","145","146","147"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\n\r\n\r\ntype MenuItemModel = {\r\n    name: string,\r\n    price: number,\r\n    orderItem: {\r\n        quantity: number\r\n    }\r\n}\r\n\r\ntype OrderModel = {\r\n    id: number,\r\n    user: {\r\n        firstName: string,\r\n        lastName: string\r\n    },\r\n    customer: {\r\n        firstName: string,\r\n        lastName: string,\r\n        phoneNumber: number\r\n    },\r\n    orderTime: Date,\r\n    menuItems: [MenuItemModel],\r\n    totalPrice: number,\r\n    isPaid: boolean\r\n};\r\n\r\ntype Props = {\r\n    toggleInfo: () => void,\r\n    toggleEdit: () => void,\r\n    orderInfoOn: boolean,\r\n    order: OrderModel,\r\n    token: string,\r\n    mapOrders: () => void\r\n};\r\n\r\nexport default class OrderDetail extends Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    mapOrderDetail(order: OrderModel){\r\n        console.log('mapOrderDetail():', order);\r\n        order.menuItems.map((menuItem, i) => {\r\n\r\n            const totalItemPrice = menuItem.price * menuItem.orderItem.quantity;\r\n\r\n            <Row key={i}>\r\n                <Col>\r\n                    <h6>{menuItem.name}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{menuItem.orderItem.quantity}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{totalItemPrice}</h6>\r\n                </Col>\r\n            </Row>\r\n            console.log('.map() Key:', i);\r\n            console.log('.map() Name:', menuItem.name);\r\n            console.log('.map() Quantity:', menuItem.orderItem.quantity);\r\n            console.log('.map() Item Price:', totalItemPrice);\r\n\r\n        });\r\n    }\r\n\r\n    getOrderDate = (order: OrderModel) => (order.orderTime).toString().slice(0, 10);\r\n\r\n    getOrderTime = (order: OrderModel) => (order.orderTime).toString().slice(11);\r\n\r\n    formatPhoneNumber(order: OrderModel){\r\n        const number = (order.customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    editOrder(){\r\n        this.props.toggleEdit();\r\n        this.props.toggleInfo();\r\n    }\r\n\r\n    async payOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    // isPaid: !this.props.order.isPaid\r\n                    isPaid: true\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n            this.props.toggleInfo();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {order} = this.props;\r\n        console.log('Order Prop:', order);\r\n\r\n        return (\r\n            <Modal isOpen={this.props.orderInfoOn}>\r\n                {console.log('Order Prop:', order)}\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Order Detail</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleInfo} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Id: {order.id}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Date Order Taken: {this.getOrderDate(order)}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Taken At: {this.getOrderTime(order)}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Taken By: {order.user.firstName} {order.user.lastName}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Customer: {order.customer.firstName} {order.customer.lastName}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h6>Phone Number: {this.formatPhoneNumber(order)}</h6>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Detail:</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* {order.menuItems.forEach(menuItem => <h6>{menuItem.name}</h6>)} */}\r\n                        {this.mapOrderDetail(order)}\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Order Total: ${order.totalPrice}</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Paid For? {order.isPaid}</h3>\r\n                                {console.log('Order Paid?', order.isPaid)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={(e) => this.payOrder(e)}>Pay For Order</Button>\r\n                    {/* <Button onClick={() => order.isPaid == !order.isPaid}>Pay For Order</Button> */}\r\n                    <Button color='primary' onClick={() => this.editOrder()}>Add To Order</Button>\r\n                    {/* <Button color='primary' onClick={this.props.toggleEdit}>Edit Order</Button> */}\r\n                </ModalFooter>\r\n                {/* {order.menuItems.map((menuItem, i) => {\r\n                    <h6>{menuItem.name}</h6>\r\n                })} */}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx",["148"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx",["149"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":3,"column":1,"nodeType":"160","messageId":"161","endLine":11,"endColumn":2},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"162","severity":1,"message":"163","line":62,"column":40,"nodeType":"164","messageId":"165","endLine":62,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":63,"column":39,"nodeType":"164","messageId":"165","endLine":63,"endColumn":41},{"ruleId":"154","severity":1,"message":"166","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":28},{"ruleId":"154","severity":1,"message":"167","line":2,"column":24,"nodeType":"156","messageId":"157","endLine":2,"endColumn":28},{"ruleId":"154","severity":1,"message":"168","line":2,"column":30,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"162","severity":1,"message":"169","line":93,"column":27,"nodeType":"164","messageId":"165","endLine":93,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":178,"column":74,"nodeType":"172","endLine":178,"endColumn":112},{"ruleId":"162","severity":1,"message":"163","line":181,"column":57,"nodeType":"164","messageId":"165","endLine":181,"endColumn":59},{"ruleId":"162","severity":1,"message":"169","line":55,"column":27,"nodeType":"164","messageId":"165","endLine":55,"endColumn":29},{"ruleId":"154","severity":1,"message":"173","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":15},{"ruleId":"154","severity":1,"message":"174","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":22},{"ruleId":"154","severity":1,"message":"175","line":3,"column":49,"nodeType":"156","messageId":"157","endLine":3,"endColumn":53},{"ruleId":"154","severity":1,"message":"174","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":22},{"ruleId":"154","severity":1,"message":"176","line":2,"column":24,"nodeType":"156","messageId":"157","endLine":2,"endColumn":33},{"ruleId":"154","severity":1,"message":"177","line":2,"column":35,"nodeType":"156","messageId":"157","endLine":2,"endColumn":38},{"ruleId":"154","severity":1,"message":"178","line":2,"column":40,"nodeType":"156","messageId":"157","endLine":2,"endColumn":43},{"ruleId":"154","severity":1,"message":"179","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"180","line":2,"column":33,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"154","severity":1,"message":"181","line":2,"column":41,"nodeType":"156","messageId":"157","endLine":2,"endColumn":47},{"ruleId":"154","severity":1,"message":"175","line":2,"column":49,"nodeType":"156","messageId":"157","endLine":2,"endColumn":53},{"ruleId":"154","severity":1,"message":"182","line":2,"column":55,"nodeType":"156","messageId":"157","endLine":2,"endColumn":68},{"ruleId":"154","severity":1,"message":"183","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":20},{"ruleId":"154","severity":1,"message":"184","line":11,"column":10,"nodeType":"156","messageId":"157","endLine":11,"endColumn":17},{"ruleId":"154","severity":1,"message":"179","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"180","line":2,"column":33,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"154","severity":1,"message":"181","line":2,"column":41,"nodeType":"156","messageId":"157","endLine":2,"endColumn":47},{"ruleId":"154","severity":1,"message":"175","line":2,"column":49,"nodeType":"156","messageId":"157","endLine":2,"endColumn":53},{"ruleId":"154","severity":1,"message":"179","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"180","line":2,"column":33,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"154","severity":1,"message":"181","line":2,"column":41,"nodeType":"156","messageId":"157","endLine":2,"endColumn":47},{"ruleId":"154","severity":1,"message":"175","line":2,"column":49,"nodeType":"156","messageId":"157","endLine":2,"endColumn":53},{"ruleId":"154","severity":1,"message":"174","line":2,"column":35,"nodeType":"156","messageId":"157","endLine":2,"endColumn":40},{"ruleId":"154","severity":1,"message":"185","line":2,"column":42,"nodeType":"156","messageId":"157","endLine":2,"endColumn":47},{"ruleId":"154","severity":1,"message":"186","line":2,"column":80,"nodeType":"156","messageId":"157","endLine":2,"endColumn":91},{"ruleId":"154","severity":1,"message":"187","line":25,"column":16,"nodeType":"156","messageId":"157","endLine":25,"endColumn":21},{"ruleId":"154","severity":1,"message":"167","line":2,"column":18,"nodeType":"156","messageId":"157","endLine":2,"endColumn":22},{"ruleId":"154","severity":1,"message":"168","line":2,"column":24,"nodeType":"156","messageId":"157","endLine":2,"endColumn":33},{"ruleId":"154","severity":1,"message":"174","line":2,"column":35,"nodeType":"156","messageId":"157","endLine":2,"endColumn":40},{"ruleId":"154","severity":1,"message":"185","line":2,"column":42,"nodeType":"156","messageId":"157","endLine":2,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":54,"column":43,"nodeType":"190","messageId":"191","endLine":54,"endColumn":45},{"ruleId":"154","severity":1,"message":"155","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":15},{"ruleId":"154","severity":1,"message":"192","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":21},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"@typescript-eslint/no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ChangeEvent' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Label' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'MenuItemEdit' is defined but never used.","'Console' is defined but never used.","'Input' is defined but never used.","'ModalFooter' is defined but never used.","'order' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CustomerModel' is defined but never used.","no-global-assign","no-unsafe-negation"]