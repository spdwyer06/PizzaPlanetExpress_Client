[{"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx":"1","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts":"2","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx":"3","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js":"4","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx":"5","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx":"6","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx":"7","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx":"8","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx":"9","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx":"10","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx":"11","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx":"12","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx":"13","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx":"14","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx":"15","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx":"16","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx":"17","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx":"18","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx":"19","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx":"20","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx":"21","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2296,"mtime":1611630526992,"results":"26","hashOfConfig":"24"},{"size":335,"mtime":1609873904958,"results":"27","hashOfConfig":"24"},{"size":1747,"mtime":1611625619810,"results":"28","hashOfConfig":"24"},{"size":6435,"mtime":1611629907745,"results":"29","hashOfConfig":"24"},{"size":3644,"mtime":1611634523354,"results":"30","hashOfConfig":"24"},{"size":2650,"mtime":1611629995891,"results":"31","hashOfConfig":"24"},{"size":1505,"mtime":1611630005320,"results":"32","hashOfConfig":"24"},{"size":2799,"mtime":1611630514388,"results":"33","hashOfConfig":"24"},{"size":3352,"mtime":1611641592753,"results":"34","hashOfConfig":"24"},{"size":2781,"mtime":1611630072318,"results":"35","hashOfConfig":"24"},{"size":2614,"mtime":1611630098829,"results":"36","hashOfConfig":"24"},{"size":10445,"mtime":1611642494489,"results":"37","hashOfConfig":"24"},{"size":4470,"mtime":1611641325152,"results":"38","hashOfConfig":"24"},{"size":7876,"mtime":1611630488959,"results":"39","hashOfConfig":"24"},{"size":3007,"mtime":1611630134602,"results":"40","hashOfConfig":"24"},{"size":2475,"mtime":1611625568997,"results":"41","hashOfConfig":"24"},{"size":2384,"mtime":1611642402628,"results":"42","hashOfConfig":"24"},{"size":5626,"mtime":1611632868732,"results":"43","hashOfConfig":"24"},{"size":4284,"mtime":1611632452822,"results":"44","hashOfConfig":"24"},{"size":4409,"mtime":1611641850983,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"yua5fg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\index.tsx",[],["103","104"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\reportWebVitals.ts",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\App.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\env.js",["105"],"let API_URL = '';\r\n\r\nswitch(window.location.hostname){\r\n    case 'localhost':\r\n    case '127.0.0.1':\r\n        API_URL = 'http://localhost:9000';\r\n        break;\r\n    // case 'pizza-planet-express.herokuapp.com':\r\n    //     API_URL = 'https://pizza-planet-express-server.herokuapp.com';\r\n    //     break;\r\n}\r\n\r\nexport default API_URL;",["106","107"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Auth.tsx",["108","109"],"import React, { Component } from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\n\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void \r\n};\r\n\r\ntype State = {\r\n    signupOpen: boolean,\r\n    loginOpen: boolean\r\n};\r\n\r\nexport default class Auth extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            signupOpen: false,\r\n            loginOpen: false\r\n        }\r\n\r\n        // Since passing down to child component, need to bind in constructor\r\n        this.toggleLogin = this.toggleLogin.bind(this);\r\n        this.toggleSignup = this.toggleSignup.bind(this);\r\n    }\r\n    \r\n    toggleSignup(): void{\r\n        this.setState({signupOpen: !this.state.signupOpen});\r\n    }\r\n\r\n    toggleLogin(): void{\r\n        this.setState({loginOpen: !this.state.loginOpen})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={true}>\r\n                <Button id='authSignupBtn' onClick={() => this.toggleSignup()}>Create New User</Button>\r\n                <br />\r\n                <Button id='authLoginBtn' onClick={() => this.toggleLogin()}>Employee Login</Button>\r\n                {this.state.signupOpen == true ? <Signup toggleSignup={this.toggleSignup} signupOpen={this.state.signupOpen} /> : <></>}\r\n                {this.state.loginOpen == true ? <Login updateToken={this.props.updateToken} updateUser={this.props.updateUser} toggleLogin={this.toggleLogin} loginOpen={this.state.loginOpen} /> : <></>}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Login.tsx",["110","111","112"],"import React, { Component } from 'react';\r\nimport {Button, Modal, Label, Container, Row, Col, ModalHeader} from 'reactstrap';\r\n\r\nimport Backspace from './backspace.png';\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype UserModel = {\r\n    isManager: boolean,\r\n    isAdmin: boolean\r\n  };\r\n\r\ntype Props = {\r\n    updateToken: (token: string) => void,\r\n    updateUser: (user: UserModel) => void,\r\n    toggleLogin: () => void,\r\n    loginOpen: boolean \r\n};\r\n\r\ntype State = {\r\n    password: string\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            password: '',\r\n        }\r\n    }\r\n    \r\n    setPass(e: React.MouseEvent<HTMLElement>){\r\n        const value = (e.target as HTMLButtonElement).value;\r\n        console.log('Button Value:', value);\r\n        let passBox = document.getElementById('password');\r\n        (passBox as HTMLInputElement).innerText += value;\r\n\r\n        this.setState({\r\n            password: this.state.password + value\r\n        }, () => console.log('Password State:', this.state.password));\r\n    } \r\n    \r\n    removeLastNum(){\r\n        let passBox = (document.getElementById('password') as HTMLInputElement);\r\n        let pass = passBox.innerText.slice(0, -1);\r\n        passBox.innerText = pass;\r\n        this.setState({\r\n            password: pass\r\n        }, () => console.log('New Password State:', this.state.password));\r\n    }\r\n\r\n    async login(){\r\n        const url = `${API_URL}/user/login`;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                password: this.state.password\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n\r\n        try{\r\n            const res = await fetch(url, options);\r\n            if(res.status != 500){\r\n                console.log('Went through', res.body);\r\n                const r = await res.json();\r\n                const user = r.user;\r\n                const token = r.token;\r\n                console.log('User:', user);\r\n                console.log('Token:', token);\r\n                await this.props.updateToken(token);\r\n                await this.props.updateUser(user);\r\n                this.props.toggleLogin();\r\n            }\r\n            else{\r\n                console.log('Login failed');\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Modal isOpen={true}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h4 className='test'>Enter Your Password</h4>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleLogin} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Container className='loginContainer'>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='passInput' xs='auto'>\r\n                            <Label id='password'></Label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e: React.MouseEvent<HTMLElement>) => this.setPass(e)} value='1'>1</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='2'>2</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3 numBtn' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='3'>3</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='4'>4</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='5'>5</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='6'>6</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='7'>7</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='8'>8</Button> : <></>}\r\n                        </Col>\r\n                        <Col className='col3' xs='auto'>\r\n                            {this.state.password.length < 4 ? <Button onClick={(e) => this.setPass(e)} value='9'>9</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs='3'></Col>\r\n                        <Col className='col1' xs='auto'>\r\n                            <Button onClick={() => this.removeLastNum()}><img id='backspace' src={Backspace} /></Button>\r\n                        </Col>\r\n                        <Col className='col2' xs='auto'>\r\n                            {this.state.password.length == 4 ? <Button type='submit' className='loginBtn' onClick={() => this.login()}>Login</Button> : <></>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Auth\\Signup.tsx",["113","114"],"import React, { Component } from 'react';\r\nimport {Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport './Auth.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleSignup: () => void,\r\n    signupOpen: boolean\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    password: number\r\n};\r\n\r\nexport default class Signup extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: 0\r\n        }\r\n    }\r\n    \r\n    async createUser(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.firstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.lastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.password)){\r\n            alert('Enter a valid password.');\r\n        }\r\n        else if(this.state.password.toString().length != 4){\r\n            alert('Enter a 4-digit password.');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/user/create`;\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        password: this.state.password\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json'\r\n                    })\r\n                };\r\n    \r\n                const res = await fetch(url, options);\r\n                if(res.status != 500){\r\n                    this.props.toggleSignup();\r\n                }\r\n                else{\r\n                    const r = await res.json();\r\n                    console.log('Error:', r.Error.errors[0].message);\r\n                    alert(`Error: ${r.Error.errors[0].message}`);\r\n                    // alert('Password already being used, select a different 4-digit password.');\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n                alert(`Error: ${err.message}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.signupOpen}>\r\n                <Form onSubmit={e => this.createUser(e)}>\r\n                    <Button color='danger' id='cancelBtn' onClick={() => this.props.toggleSignup()}>X</Button>\r\n                    <FormGroup>\r\n                        <Label for='firstName'>First Name:</Label>  \r\n                        <Input name='firstName' id='firstNameInput' onChange={async e => await this.setState({firstName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='lastName'>Last Name:</Label>  \r\n                        <Input name='lastName' id='lastNameInput' onChange={e => this.setState({lastName: e.target.value})} required />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for='password'>Password:</Label>  \r\n                        <Input name='password' id='passwordInput' onChange={e => this.setState({password: parseInt(e.target.value)})} required />\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create User</Button>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Home.tsx",["115"],"import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom';\r\n\r\nimport Navbar from './Navbar';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\nimport OrderList from '../Order/OrderList';\r\nimport OrderCreate from '../Order/OrderCreate';\r\nimport CustomerList from '../Customer/CustomerList';\r\n\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './Home.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    logout: () => void,\r\n    token: string,\r\n    user: UserModel\r\n}\r\n\r\ntype State = {\r\n    orderId: number\r\n}\r\n\r\nexport default class Home extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderId: 0\r\n        }\r\n    }\r\n    \r\n    updateCustomer = (customer: CustomerModel) => console.log('Blarg:', window.location.href);\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Router>\r\n                    <Row>\r\n                        <Col sm='3'>\r\n                            <Navbar logout={this.props.logout} />\r\n                        </Col>\r\n                        <Col sm='9'>\r\n                            <Switch>\r\n                                {/* All Customers */}\r\n                                <Route path='/customer/all' exact>\r\n                                    <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} />\r\n                                </Route>\r\n                                {/* Create Order */}\r\n                                <Route path='/order/create' exact>\r\n                                    <OrderCreate token={this.props.token} user={this.props.user} />\r\n                                    {/* <OrderCreate token={this.props.token} /> */}\r\n                                </Route>\r\n                                {/* All Orders */}\r\n                                <Route path='/order'>\r\n                                    <OrderList token={this.props.token} user={this.props.user} />\r\n                                </Route>\r\n                                {/* All Menu Items */}\r\n                                <Route path='/menuItem/all' exact>\r\n                                    <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />\r\n                                </Route> \r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Home\\Navbar.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemCreate.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItemList.tsx",["116"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport API_URL from '../../env';\r\nimport MenuItem from './MenuItem';\r\nimport MenuItemCreate from './ItemCreate';\r\n\r\nimport UserModel from '../Models/UserModel';\r\n\r\nimport './MenuItem.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel\r\n    orderId: number,\r\n};\r\n\r\ntype State = {\r\n    menuItems: [],\r\n    createOn: boolean,\r\n    count: number\r\n};\r\n\r\nexport default class MenuItemList extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            menuItems: [],\r\n            createOn: false,\r\n            count: 0\r\n        }\r\n\r\n        this.toggleCreate = this.toggleCreate.bind(this);\r\n        this.mapItems = this.mapItems.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log('Menu Item List Count Start:', this.state.count);\r\n        console.log('Menu Item List User:', this.props.user);\r\n        await this.mapItems();\r\n        console.log('Menu Item List Count End:', this.state.count);\r\n    }\r\n    \r\n    async mapItems(){\r\n        try{\r\n            const url = `${API_URL}/menuItem/all`;\r\n            const options = {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n            const allItems = await fetch(url, options);\r\n            const itemsJson = await allItems.json();\r\n            const menuItems = itemsJson.Menu_Items;\r\n\r\n            this.setState({\r\n                menuItems: menuItems,\r\n                count: menuItems.length\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('Map Error:', err.message);\r\n        }\r\n    }\r\n\r\n    toggleCreate(){\r\n        this.setState({createOn: !this.state.createOn});\r\n        !this.state.createOn ? this.mapItems() : <></>;\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>All Menu Items</h1>\r\n                {localStorage.getItem('userRole') == 'admin' ? <Button onClick={this.toggleCreate}>Add New Menu Item</Button> : <></>}\r\n                {this.state.menuItems.map((menuItem, i) => <MenuItem user={this.props.user} token={this.props.token} item={menuItem} orderId={this.props.orderId} capName={this.capitalizeName} key={i} refreshMenu={this.mapItems} />)}\r\n                {this.state.createOn ? <MenuItemCreate user={this.props.user} token={this.props.token} createOn={this.state.createOn} toggleCreate={this.toggleCreate} capitalizeName={this.capitalizeName} /> : <></>}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\Order.tsx",["117","118","119","120"],"import React, { Component } from 'react';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport OrderDetail from './OrderDetail';\r\nimport API_URL from '../../env';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    order: OrderModel,\r\n    user: UserModel,\r\n    token: string,\r\n    mapOrders: () => void,\r\n    setOrderId: (orderId: number) => void\r\n};\r\n\r\ntype State = {\r\n    orderInfoOn: boolean\r\n};\r\n\r\nexport default class Order extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            orderInfoOn: false,\r\n            // orderEditOn: false\r\n        }\r\n\r\n        this.toggleOrderInfo = this.toggleOrderInfo.bind(this);\r\n        // this.toggleOrderEdit = this.toggleOrderEdit.bind(this);\r\n    }\r\n    \r\n    toggleOrderInfo = () => this.setState({orderInfoOn: !this.state.orderInfoOn});\r\n\r\n    async deleteOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    isUserManagerOrAdmin(){\r\n        console.log('Checking User Role');\r\n        if (localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin'){\r\n            return true;\r\n        }\r\n         return false;\r\n    }\r\n\r\n    render() {\r\n        // Prop Destructuring\r\n        const {order} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h3>Customer Name: {order.customer.lastName}, {order.customer.firstName}</h3>\r\n                <h3>Order Price: ${order.totalPrice.toFixed(2)}</h3>\r\n                {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.deleteOrder(e)}>Delete Order</Button> : null}\r\n                <Button onClick={this.toggleOrderInfo}>View</Button>\r\n                {this.state.orderInfoOn ? <OrderDetail token={this.props.token} user={this.props.user} mapOrders={this.props.mapOrders} toggleInfo={this.toggleOrderInfo}  orderInfoOn={this.state.orderInfoOn} order={order} setOrderId={this.props.setOrderId} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\MenuItem.tsx",["121","122","123","124","125","126","127","128"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\ItemEdit.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderDetail.tsx",["129"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport OrderModel from '../Models/OrderModel';\r\nimport UserModel from '../Models/UserModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    toggleInfo: () => void,\r\n    orderInfoOn: boolean,\r\n    order: OrderModel,\r\n    token: string,\r\n    user: UserModel,\r\n    mapOrders: () => void,\r\n    setOrderId: (orderId: number) => void\r\n};\r\n\r\ntype State = {\r\n    isPaid: string\r\n};\r\n\r\nexport default class OrderDetail extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isPaid: ''\r\n        }\r\n    }\r\n    \r\n    mapOrderDetail(order: OrderModel){\r\n        console.log('mapOrderDetail():', order);\r\n        order.menuItems.map((menuItem, i) => {\r\n\r\n            const totalItemPrice = menuItem.price * menuItem.orderItem.quantity;\r\n\r\n            <Row key={i}>\r\n                <Col>\r\n                    <h6>{menuItem.name}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{menuItem.orderItem.quantity}</h6>\r\n                </Col>\r\n                <Col>\r\n                    <h6>{totalItemPrice}</h6>\r\n                </Col>\r\n            </Row>\r\n            console.log('.map() Key:', i);\r\n            console.log('.map() Name:', menuItem.name);\r\n            console.log('.map() Quantity:', menuItem.orderItem.quantity);\r\n            console.log('.map() Item Price:', totalItemPrice);\r\n\r\n        });\r\n    }\r\n\r\n    getOrderDate = (order: OrderModel) => (order.orderTime).toString().slice(0, 10);\r\n\r\n    getOrderTime = (order: OrderModel) => (order.orderTime).toString().slice(11);\r\n\r\n    formatPhoneNumber(order: OrderModel){\r\n        const number = (order.customer.phoneNumber).toString().split('');\r\n        const areaCode = number.splice(0, 3).join('');\r\n        const firstThree = number.splice(0, 3).join('');\r\n        const finalFour = number.join('');\r\n\r\n        return `(${areaCode}) ${firstThree}-${finalFour}`;\r\n    }\r\n\r\n    updateOrderItems = (item: MenuItemModel) => console.log('Hazaah from OrderDetail');\r\n\r\n    addToOrder = async() => this.props.setOrderId(this.props.order.id);\r\n\r\n    async payOrder(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/order/${this.props.order.id}`;\r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    // isPaid: !this.props.order.isPaid\r\n                    isPaid: true\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapOrders();\r\n            this.props.toggleInfo();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    setIsPaid = async(order: OrderModel) => order.isPaid ? await this.setState({isPaid: 'Yes'}) : await this.setState({isPaid: 'No'})\r\n    \r\n    componentDidMount(){\r\n        this.setIsPaid(this.props.order);\r\n    }\r\n\r\n    render() {\r\n        const {order} = this.props;\r\n        console.log('Order Prop:', order);\r\n\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.orderInfoOn}>\r\n                    {console.log('Order Prop:', order)}\r\n                    <ModalHeader>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col sm='10'>\r\n                                    <h3>Order Detail</h3>\r\n                                </Col>\r\n                                <Col sm='2'>\r\n                                    <Button onClick={this.props.toggleInfo} color='danger'>X</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Id: {order.id}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Date Order Taken: {this.getOrderDate(order)}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Taken At: {this.getOrderTime(order)}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Taken By: {order.user.firstName} {order.user.lastName}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Customer: {order.customer.firstName} {order.customer.lastName}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h6>Phone Number: {this.formatPhoneNumber(order)}</h6>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Detail:</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h6>Item Name</h6>\r\n                                </Col>\r\n                            </Row>\r\n                            {order.menuItems.map((menuItem, i) => {\r\n                                return(\r\n                                    <Row key={i}>\r\n                                        <Col>\r\n                                            <pre>\r\n                                                <h6>{menuItem.name}   X   {menuItem.orderItem.quantity}</h6>\r\n                                            </pre>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <h6>{menuItem.price * menuItem.orderItem.quantity}</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                );\r\n                            })}\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Order Total: ${order.totalPrice.toFixed(2)}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>Paid For? {this.state.isPaid}</h3>\r\n                                    {console.log('Order Paid?', order.isPaid)}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button onClick={(e) => this.payOrder(e)}>Pay For Order</Button>\r\n                        <Link to='/order/add'>\r\n                            <Button color='primary' onClick={() => this.addToOrder()}>Add To Order</Button>\r\n                        </Link>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Order\\OrderCreate.tsx",["130","131"],"import React, { Component } from 'react';\r\n\r\nimport API_URL from '../../env';\r\nimport CustomerList from '../Customer/CustomerList';\r\nimport MenuItemList from '../MenuItem/MenuItemList';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\nimport MenuItemModel from '../Models/MenuItemModel';\r\nimport UserModel from '../Models/UserModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    user: UserModel,\r\n};\r\n\r\ntype State = {\r\n    customer: CustomerModel,\r\n    orderItems: MenuItemModel[],\r\n    orderId: number\r\n};\r\n\r\nexport default class OrderCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            customer: {\r\n                id: 0,\r\n                firstName: '',\r\n                lastName: '',\r\n                phoneNumber: 0\r\n            },\r\n            orderItems: [],\r\n            orderId: 0\r\n        }\r\n\r\n        this.updateCustomer = this.updateCustomer.bind(this);\r\n    }\r\n    \r\n    updateCustomer(newCustomer: CustomerModel){\r\n        this.setState({\r\n            customer: {\r\n                id: newCustomer.id,\r\n                firstName: newCustomer.firstName,\r\n                lastName: newCustomer.lastName,\r\n                phoneNumber: newCustomer.phoneNumber\r\n            }\r\n        });\r\n    }\r\n\r\n    async createBaseOrder(){\r\n        console.log('Order Create Customer Id:', this.state.customer.id);\r\n        console.log('Order Create Customer Name:', this.state.customer.firstName);\r\n        console.log('createBaseOrder() Starting Order Id State:', this.state.orderId);\r\n        console.log('crateBaseOrder() User Props:', this.props.user);\r\n\r\n        try{\r\n            const url = `${API_URL}/order/create/${this.state.customer.id}`;\r\n            const options = {\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token\r\n                })\r\n            };\r\n    \r\n            const res = await fetch(url, options);\r\n            const resJson = await res.json();\r\n            const orderId = resJson.OrderId;\r\n            console.log('Base Order id:', orderId);\r\n            \r\n            await this.setState({\r\n                orderId: orderId\r\n            });\r\n            console.log('createBaseOrder() Ending Order Id State:', this.state.orderId);\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State){\r\n        prevState.customer.id != this.state.customer.id ? this.createBaseOrder() : console.log('componentDidUpdate()');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.customer.id == 0 ? <CustomerList token={this.props.token} updateCustomer={this.updateCustomer} /> : <MenuItemList token={this.props.token} user={this.props.user} orderId={this.state.orderId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerList.tsx",[],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\Customer.tsx",["132","133","134"],"C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerEdit.tsx",["135","136","137"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\nimport CustomerModel from '../Models/CustomerModel';\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customer: CustomerModel, \r\n    editCustomerOn: boolean,\r\n    mapCustomers: () => void,\r\n    toggleCustomerEdit: () => void\r\n};\r\n\r\ntype State = {\r\n    updatedFirstName: string,\r\n    updatedLastName: string,\r\n    updatedPhoneNumber: number\r\n};\r\n\r\nexport default class CustomerEdit extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            updatedFirstName: '',\r\n            updatedLastName: '',\r\n            updatedPhoneNumber: 0\r\n        }\r\n    }\r\n    \r\n    async submitForm(e: React.FormEvent){\r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.updatedFirstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.updatedLastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.updatedPhoneNumber)){\r\n            alert('Enter a valid phone number.');\r\n        }\r\n        else if(this.state.updatedPhoneNumber.toString().length != 10){\r\n            alert('Enter a 10-digit phone number (include area code)');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n                const options = {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                        firstName: this.capitalizeName(this.state.updatedFirstName),\r\n                        lastName: this.capitalizeName(this.state.updatedLastName),\r\n                        phoneNumber: this.state.updatedPhoneNumber\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token   \r\n                    })\r\n                };\r\n    \r\n                await fetch(url, options);\r\n                this.props.mapCustomers();\r\n                this.props.toggleCustomerEdit();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    async removeCustomer(e: React.MouseEvent){\r\n        try{\r\n            const url = `${API_URL}/customer/${this.props.customer.id}`;\r\n            const options = {\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.token   \r\n                })\r\n            };\r\n\r\n            await fetch(url, options);\r\n            this.props.mapCustomers();\r\n            this.props.toggleCustomerEdit();\r\n        }\r\n        catch(err){\r\n            console.log('Error:', err.message);\r\n        }\r\n    }\r\n\r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.editCustomerOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Customer Edit</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleCustomerEdit} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for='itemId'>Customer Id: {this.props.customer.id}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' id='customerFirstNameInput' required placeholder={this.props.customer.firstName} onChange={e => this.setState({updatedFirstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' id='customerLastNameInput' required placeholder={this.props.customer.lastName} onChange={e => this.setState({updatedLastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' id='customerPhoneNumberInput' required placeholder={(this.props.customer.phoneNumber).toString()} onChange={e => this.setState({updatedPhoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type='submit'>Done</Button>\r\n                    {localStorage.getItem('userRole') == 'manager' || localStorage.getItem('userRole') == 'admin' ? <Button color='danger' onClick={(e) => this.removeCustomer(e)}>Remove Customer From System</Button> : null}\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\Customer\\CustomerCreate.tsx",["138"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col } from \"reactstrap\";\r\n\r\nimport API_URL from '../../env';\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    token: string,\r\n    customerCreateOn: boolean,\r\n    toggleCustomerCreate: () => void,\r\n    mapCustomers: () => void\r\n};\r\n\r\ntype State = {\r\n    firstName: string,\r\n    lastName: string,\r\n    phoneNumber: number\r\n};\r\n\r\nexport default class CustomerCreate extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: 0\r\n        }\r\n    }\r\n\r\n    async submitForm(e: React.FormEvent){\r\n        \r\n        e.preventDefault();\r\n\r\n        const stringValues = /^[A-Za-z]+$/\r\n\r\n        if(!stringValues.test(this.state.firstName)){\r\n            alert('Enter a valid first name.');\r\n        }\r\n        else if(!stringValues.test(this.state.lastName)){\r\n            alert('Enter a valid last name.');\r\n        }\r\n        else if(!Number(this.state.phoneNumber)){\r\n            alert('Enter a valid phone number.');\r\n        }\r\n        else if(this.state.phoneNumber.toString().length != 10){\r\n            alert('Enter a 10-digit phone number (include area code)');\r\n        }\r\n        else{\r\n            try{\r\n                const url = `${API_URL}/customer`;\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        firstName: this.capitalizeName(this.state.firstName),\r\n                        lastName: this.capitalizeName(this.state.lastName),\r\n                        phoneNumber: this.state.phoneNumber\r\n                    }),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': this.props.token\r\n                    })\r\n                };\r\n    \r\n                await fetch(url, options);\r\n                this.props.mapCustomers();\r\n                this.props.toggleCustomerCreate();\r\n            }\r\n            catch(err){\r\n                console.log('Error:', err.message);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    capitalizeName = (name: string) => name[0].toUpperCase() + name.slice(1);\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.customerCreateOn}>\r\n                <ModalHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm='10'>\r\n                                <h3>Customer Create</h3>\r\n                            </Col>\r\n                            <Col sm='2'>\r\n                                <Button onClick={this.props.toggleCustomerCreate} color='danger'>X</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ModalHeader>\r\n                <Form onSubmit={(e) => this.submitForm(e)}>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for='customerFirstName'>Customer First Name:</Label>\r\n                            <Input name='customerFirstName' id='customerFirstNameInput' required onChange={e => this.setState({firstName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerLastName'>Customer Last Name:</Label>\r\n                            <Input name='customerLastName' id='customerLastNameInput' required onChange={e => this.setState({lastName: e.target.value})} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for='customerPhoneNumber'>Customer Phone Number:</Label>\r\n                            <Input name='customerPhoneNumber' id='customerPhoneNumberInput' required onChange={e => this.setState({phoneNumber: parseInt(e.target.value)})} />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type='submit'>Done</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Sean\\JavaScriptAugust2020\\03_RedBadge\\PizzaPlanetExpress\\Client\\pizza-planet-express\\src\\Components\\MenuItem\\AddToOrder.tsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":1,"nodeType":"145","messageId":"146","endLine":11,"endColumn":2},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"147","severity":1,"message":"148","line":55,"column":40,"nodeType":"149","messageId":"150","endLine":55,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":56,"column":39,"nodeType":"149","messageId":"150","endLine":56,"endColumn":41},{"ruleId":"147","severity":1,"message":"151","line":71,"column":27,"nodeType":"149","messageId":"150","endLine":71,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":152,"column":74,"nodeType":"154","endLine":152,"endColumn":112},{"ruleId":"147","severity":1,"message":"148","line":155,"column":57,"nodeType":"149","messageId":"150","endLine":155,"endColumn":59},{"ruleId":"147","severity":1,"message":"151","line":47,"column":55,"nodeType":"149","messageId":"150","endLine":47,"endColumn":57},{"ruleId":"147","severity":1,"message":"151","line":66,"column":31,"nodeType":"149","messageId":"150","endLine":66,"endColumn":33},{"ruleId":"155","severity":1,"message":"156","line":3,"column":49,"nodeType":"157","messageId":"158","endLine":3,"endColumn":53},{"ruleId":"147","severity":1,"message":"148","line":84,"column":51,"nodeType":"149","messageId":"150","endLine":84,"endColumn":53},{"ruleId":"147","severity":1,"message":"148","line":61,"column":46,"nodeType":"149","messageId":"150","endLine":61,"endColumn":48},{"ruleId":"147","severity":1,"message":"148","line":61,"column":95,"nodeType":"149","messageId":"150","endLine":61,"endColumn":97},{"ruleId":"147","severity":1,"message":"148","line":75,"column":51,"nodeType":"149","messageId":"150","endLine":75,"endColumn":53},{"ruleId":"147","severity":1,"message":"148","line":75,"column":100,"nodeType":"149","messageId":"150","endLine":75,"endColumn":102},{"ruleId":"155","severity":1,"message":"159","line":2,"column":9,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"160","line":2,"column":33,"nodeType":"157","messageId":"158","endLine":2,"endColumn":39},{"ruleId":"155","severity":1,"message":"161","line":2,"column":41,"nodeType":"157","messageId":"158","endLine":2,"endColumn":47},{"ruleId":"155","severity":1,"message":"156","line":2,"column":49,"nodeType":"157","messageId":"158","endLine":2,"endColumn":53},{"ruleId":"155","severity":1,"message":"162","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":99,"column":55,"nodeType":"149","messageId":"150","endLine":99,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":99,"column":90,"nodeType":"149","messageId":"150","endLine":99,"endColumn":92},{"ruleId":"147","severity":1,"message":"151","line":102,"column":41,"nodeType":"149","messageId":"150","endLine":102,"endColumn":43},{"ruleId":"163","severity":1,"message":"164","line":39,"column":43,"nodeType":"165","messageId":"166","endLine":39,"endColumn":45},{"ruleId":"147","severity":1,"message":"151","line":87,"column":31,"nodeType":"149","messageId":"150","endLine":87,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":93,"column":41,"nodeType":"149","messageId":"150","endLine":93,"endColumn":43},{"ruleId":"155","severity":1,"message":"167","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":55,"column":39,"nodeType":"149","messageId":"150","endLine":55,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":56,"column":39,"nodeType":"149","messageId":"150","endLine":56,"endColumn":41},{"ruleId":"147","severity":1,"message":"151","line":50,"column":65,"nodeType":"149","messageId":"150","endLine":50,"endColumn":67},{"ruleId":"147","severity":1,"message":"148","line":136,"column":55,"nodeType":"149","messageId":"150","endLine":136,"endColumn":57},{"ruleId":"147","severity":1,"message":"148","line":136,"column":104,"nodeType":"149","messageId":"150","endLine":136,"endColumn":106},{"ruleId":"147","severity":1,"message":"151","line":49,"column":58,"nodeType":"149","messageId":"150","endLine":49,"endColumn":60},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'MenuItemModel' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'API_URL' is defined but never used.","no-global-assign","no-unsafe-negation"]